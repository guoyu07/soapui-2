{
  if (treeNode == null) {
    setOverviewPanel(null);
  }
 else {
    ModelItem modelItem=treeNode.getModelItem();
    if (selectedPropertyHolderTable != null) {
      selectedPropertyHolderTable.release();
      selectedPropertyHolderTable=null;
    }
    if (modelItem instanceof TestPropertyHolder) {
      if (!(modelItem instanceof WsdlProject) || ((WsdlProject)modelItem).isOpen()) {
        selectedPropertyHolderTable=new PropertyHolderTable((TestPropertyHolder)modelItem);
        if (modelItem instanceof WsdlProject) {
          WsdlProject project=(WsdlProject)modelItem;
          EnvironmentListener environmentListener=new EnvironmentListener(){
            public void propertyValueChanged(            Property property){
              selectedPropertyHolderTable.getPropertiesModel().fireTableDataChanged();
            }
          }
;
          project.addEnvironmentListener(environmentListener);
          selectedPropertyHolderTable.setEnvironmentListener(environmentListener);
          project.addProjectListener(selectedPropertyHolderTable.getProjectListener());
        }
      }
    }
    PanelBuilder<ModelItem> panelBuilder=PanelBuilderRegistry.getPanelBuilder(modelItem);
    if (panelBuilder != null && panelBuilder.hasOverviewPanel()) {
      Component overviewPanel=panelBuilder.buildOverviewPanel(modelItem);
      if (selectedPropertyHolderTable != null) {
        JTabbedPane tabs=new JTabbedPane();
        tabs.setName(PROPERTIES_TAB_PANEL_NAME);
        if (overviewPanel instanceof JPropertiesTable<?>) {
          JPropertiesTable<?> t=(JPropertiesTable<?>)overviewPanel;
          tabs.addTab(t.getTitle(),overviewPanel);
          t.setTitle(null);
        }
 else {
          tabs.addTab("Overview",overviewPanel);
        }
        tabs.addTab(((TestPropertyHolder)modelItem).getPropertiesLabel(),selectedPropertyHolderTable);
        overviewPanel=UISupport.createTabPanel(tabs,false);
      }
      setOverviewPanel(overviewPanel);
    }
 else {
      setOverviewPanel(null);
    }
  }
}
