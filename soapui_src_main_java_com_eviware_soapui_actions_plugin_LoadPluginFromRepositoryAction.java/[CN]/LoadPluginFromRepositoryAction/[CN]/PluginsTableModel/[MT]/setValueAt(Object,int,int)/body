{
  if (columnIndex == 0) {
    boolean value=(Boolean)aValue;
    final AvailablePlugin plugin=plugins.get(rowIndex);
    if (value && UISupport.confirm("Install [" + plugin.getPluginInfo().getId().getName() + "]?","Install Plugin")) {
      ProgressDialog progressDialog=new ProgressDialog("Install Plugin","Downloading plugin",0,null,false);
      progressDialog.setIndeterminate();
      progressDialog.run(new Worker(){
        @Override public Object construct(        XProgressMonitor monitor){
          try {
            InputStream in=plugin.getUrl().openStream();
            File tempFile=File.createTempFile("soapui-plugin","jar");
            monitor.setProgress(0,"Downloading...");
            Tools.readAndWrite(in,0,new FileOutputStream(tempFile));
            monitor.setProgress(0,"Installing...");
            pluginManager.installPlugin(tempFile);
            installedPluginsTableModel.refresh();
            UISupport.showInfoMessage("Plugin installed successfully");
          }
 catch (          IOException e) {
            UISupport.showErrorMessage(e);
          }
          return null;
        }
        @Override public void finished(){
        }
        @Override public boolean onCancel(){
          return false;
        }
      }
);
    }
 else     if (!value && UISupport.confirm("Uninstall [" + plugin.getPluginInfo().getId().getName() + "]?","Uninstall Plugin")) {
      for (      Plugin p : pluginManager.getInstalledPlugins()) {
        if (p.getInfo().getId().equals(plugin.getPluginInfo().getId())) {
          try {
            pluginManager.uninstallPlugin(p);
            installedPluginsTableModel.refresh();
          }
 catch (          IOException e) {
            UISupport.showErrorMessage(e);
          }
          break;
        }
      }
    }
  }
}
