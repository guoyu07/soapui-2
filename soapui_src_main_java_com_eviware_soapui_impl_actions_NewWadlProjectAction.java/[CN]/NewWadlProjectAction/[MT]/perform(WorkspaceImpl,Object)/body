{
  if (dialog == null) {
    dialog=ADialogBuilder.buildDialog(Form.class);
    dialog.getFormField(Form.INITIALWADL).addFormFieldListener(new XFormFieldListener(){
      public void valueChanged(      XFormField sourceField,      String newValue,      String oldValue){
        String value=newValue.toLowerCase().trim();
        dialog.getFormField(Form.GENERATETESTSUITE).setEnabled(newValue.trim().length() > 0);
        initProjectName(newValue);
      }
    }
);
  }
 else {
    dialog.setValue(Form.INITIALWADL,"");
    dialog.setValue(Form.PROJECTNAME,"");
    dialog.getFormField(Form.GENERATETESTSUITE).setEnabled(false);
  }
  if (param instanceof String) {
    dialog.setValue(Form.INITIALWADL,param.toString());
    initProjectName(param.toString());
  }
  while (dialog.show()) {
    WsdlProject project=null;
    try {
      String projectName=dialog.getValue(Form.PROJECTNAME).trim();
      if (projectName.length() == 0) {
        UISupport.showErrorMessage(messages.get("MissingProjectNameError"));
      }
 else {
        project=workspace.createProject(projectName,null);
        if (project != null) {
          UISupport.select(project);
          String url=dialog.getValue(Form.INITIALWADL).trim();
          if (dialog.getBooleanValue(Form.RELATIVEPATHS)) {
            String folder=workspace.getProjectRoot();
            if (PathUtils.isFilePath(url) && PathUtils.isAbsolutePath(url)) {
              folder=new File(url).getParent();
            }
            if (!project.save(folder)) {
              UISupport.showErrorMessage("Project was not saved, paths will not be stored relatively until configured.");
            }
 else {
              project.setResourceRoot("${projectDir}");
            }
          }
          if (url.length() > 0) {
            if (new File(url).exists()) {
              url=new File(url).toURI().toURL().toString();
            }
            if (url.toUpperCase().endsWith("WADL")) {
              importWadl(project,url);
            }
          }
          if (dialog.getBooleanValue(Form.CREATEWEBTEST)) {
            new CreateWebTestAction().perform(project,param);
          }
          break;
        }
      }
    }
 catch (    InvalidDefinitionException ex) {
      ex.show();
    }
catch (    Exception ex) {
      UISupport.showErrorMessage(ex);
      if (project != null) {
        workspace.removeProject(project);
      }
    }
  }
}
