{
  MimeMultipart mp=null;
  RestMockAction operation=(RestMockAction)getMockOperation();
  if (operation == null)   throw new Exception("Missing RestMockAction for mock response");
  StringToStringMap contentIds=new StringToStringMap();
  String status=getResponseHttpStatus();
  RestMockRequest request=restMockResult.getMockRequest();
  if (status == null || status.trim().length() == 0) {
    request.getHttpResponse().setStatus(HttpServletResponse.SC_OK);
    restMockResult.setResponseStatus(HttpServletResponse.SC_OK);
  }
 else {
    try {
      int statusCode=Integer.parseInt(status);
      request.getHttpResponse().setStatus(statusCode);
      restMockResult.setResponseStatus(statusCode);
    }
 catch (    RuntimeException e) {
      SoapUI.logError(e);
    }
  }
  ByteArrayOutputStream outData=new ByteArrayOutputStream();
  String responseCompression=getResponseCompression();
  String encoding=getEncoding();
  byte[] content=encoding == null ? responseContent.getBytes() : responseContent.getBytes(encoding);
  outData.write(content);
  if (outData.size() > 0) {
    byte[] data=outData.toByteArray();
    if (responseCompression.equals(CompressionSupport.ALG_DEFLATE) || responseCompression.equals(CompressionSupport.ALG_GZIP)) {
      restMockResult.addHeader("Content-Encoding",responseCompression);
      data=CompressionSupport.compress(responseCompression,data);
    }
    restMockResult.writeRawResponseData(data);
  }
  return responseContent;
}
