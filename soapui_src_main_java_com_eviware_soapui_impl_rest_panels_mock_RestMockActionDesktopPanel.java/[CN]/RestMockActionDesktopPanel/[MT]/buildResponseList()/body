{
  responseListModel=new ResponseListModel();
  responseList=new JList(responseListModel);
  responseList.addKeyListener(new ModelItemListKeyListener(){
    @Override public ModelItem getModelItemAt(    int ix){
      return getModelItem().getMockResponseAt(ix);
    }
  }
);
  responseList.addMouseListener(new ModelItemListMouseListener(){
    private DefaultActionList defaultActions;
    @Override protected ActionList getActionsForRow(    JList list,    int row){
      ActionList actions=super.getActionsForRow(list,row);
      actions.insertAction(SwingActionDelegate.createDelegate(NewMockResponseAction.SOAPUI_ACTION_ID,getModelItem(),null,"/addToRestMockService.gif"),0);
      actions.insertAction(SwingActionDelegate.createDelegate(OpenRequestForMockOperationAction.SOAPUI_ACTION_ID,getModelItem(),null,"/open_request.gif"),1);
      if (actions.getActionCount() > 2)       actions.insertAction(ActionSupport.SEPARATOR_ACTION,2);
      return actions;
    }
    @Override protected ActionList getDefaultActions(){
      if (defaultActions == null) {
        defaultActions=new DefaultActionList();
        defaultActions.addAction(SwingActionDelegate.createDelegate(NewMockResponseAction.SOAPUI_ACTION_ID,getModelItem(),null,"/addToRestMockService.gif"));
      }
      return defaultActions;
    }
  }
);
  responseList.setCellRenderer(new ResponseListCellRenderer());
  JScrollPane scrollPane=new JScrollPane(responseList);
  JTabbedPane tabs=new JTabbedPane();
  tabs.addTab("MockResponses",UISupport.buildPanelWithToolbar(buildMockResponseListToolbar(),scrollPane));
  return UISupport.createTabPanel(tabs,true);
}
