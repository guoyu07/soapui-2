{
  if (!isOpen() || isDisabled() || isRemote()) {
    return SaveStatus.SUCCESS;
  }
  File projectFile=null;
  if (!hasBeenSavedBefore()) {
    String tempPath=StringUtils.createFileName2(getName(),'-') + "-soapui-project.xml";
    if (folder != null) {
      tempPath=folder + File.separatorChar + tempPath;
    }
    while (projectFile == null || (projectFile.exists() && !UISupport.confirm("File [" + projectFile.getName() + "] exists, overwrite?","Overwrite File?"))) {
      projectFile=UISupport.getFileDialogs().saveAs(this,"Save project " + getName(),XML_EXTENSION,XML_FILE_TYPE,new File(tempPath));
      if (projectFile == null) {
        return SaveStatus.CANCELLED;
      }
    }
  }
  if (projectFile == null) {
    projectFile=createFile(path);
  }
  while (!projectFile.canWrite()) {
    Boolean confirm=UISupport.confirmOrCancel("Project file [" + projectFile.getAbsolutePath() + "] can not be written to, save to new file?","Save Project");
    if (confirm == null) {
      return SaveStatus.CANCELLED;
    }
 else     if (!confirm) {
      return SaveStatus.DONT_SAVE;
    }
 else {
      projectFile=UISupport.getFileDialogs().saveAs(this,"Save project " + getName(),XML_EXTENSION,XML_FILE_TYPE,projectFile);
      if (projectFile == null) {
        return SaveStatus.CANCELLED;
      }
    }
  }
  if (projectFileModified(projectFile)) {
    if (!UISupport.confirm("Project file for [" + getName() + "] has been modified externally, overwrite?","Save Project")) {
      return SaveStatus.DONT_SAVE;
    }
  }
  if (projectFile.exists() && getSettings().getBoolean(UISettings.CREATE_BACKUP)) {
    createBackup(projectFile);
  }
  path=projectFile.getAbsolutePath();
  return saveIn(projectFile);
}
