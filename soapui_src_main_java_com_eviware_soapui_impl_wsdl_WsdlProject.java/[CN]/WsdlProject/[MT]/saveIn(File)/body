{
  long size;
  beforeSave();
  SoapuiProjectDocumentConfig projectDocument=(SoapuiProjectDocumentConfig)this.projectDocument.copy();
  if (!getSettings().getBoolean(WsdlSettings.CACHE_WSDLS)) {
    removeDefinitionCaches(projectDocument);
  }
  removeProjectRoot(projectDocument);
  if (hasBeenSuccessfullyDecrypted(projectDocument) && hasEncryptionPassword()) {
    encrypt(projectDocument);
  }
  XmlOptions options=new XmlOptions();
  if (SoapUI.getSettings().getBoolean(WsdlSettings.PRETTY_PRINT_PROJECT_FILES)) {
    options.setSavePrettyPrint();
  }
  projectDocument.getSoapuiProject().setSoapuiVersion(SoapUI.SOAPUI_VERSION);
  try {
    File tempFile=File.createTempFile("project-temp-",".xml",projectFile.getParentFile());
    FileOutputStream tempOut=new FileOutputStream(tempFile);
    projectDocument.save(tempOut,options);
    tempOut.close();
    if (getSettings().getBoolean(UISettings.LINEBREAK)) {
      normalizeLineBreak(projectFile,tempFile);
    }
 else {
      FileOutputStream projectOut=new FileOutputStream(projectFile);
      projectDocument.save(projectOut,options);
      projectOut.close();
      if (!tempFile.delete()) {
        SoapUI.getErrorLog().warn("Failed to delete temporary project file; " + tempFile.getAbsolutePath());
        tempFile.deleteOnExit();
      }
    }
    if (!tempFile.delete()) {
      SoapUI.getErrorLog().warn("Failed to delete temporary project file; " + tempFile.getAbsolutePath());
      tempFile.deleteOnExit();
    }
    size=projectFile.length();
  }
 catch (  Throwable t) {
    SoapUI.logError(t);
    UISupport.showErrorMessage("Failed to save project [" + getName() + "]: "+ t.toString());
    return SaveStatus.FAILED;
  }
  lastModified=projectFile.lastModified();
  log.info("Saved project [" + getName() + "] to ["+ projectFile.getAbsolutePath()+ " - "+ size+ " bytes");
  setProjectRoot(getPath());
  return SaveStatus.SUCCESS;
}
