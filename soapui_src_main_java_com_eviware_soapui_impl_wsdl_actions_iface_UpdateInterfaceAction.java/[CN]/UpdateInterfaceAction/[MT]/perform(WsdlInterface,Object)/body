{
  if (RemoveInterfaceAction.hasRunningDependingTests(iface)) {
    UISupport.showErrorMessage("Cannot update Interface due to running depending tests");
    return;
  }
  if (dialog == null) {
    dialog=ADialogBuilder.buildDialog(Form.class);
    dialog.setBooleanValue(Form.CREATE_REQUESTS,true);
    dialog.getFormField(Form.CREATE_BACKUPS).setEnabled(false);
    dialog.getFormField(Form.RECREATE_OPTIONAL).setEnabled(false);
    dialog.getFormField(Form.KEEP_EXISTING).setEnabled(false);
    dialog.getFormField(Form.RECREATE_REQUESTS).addFormFieldListener(new XFormFieldListener(){
      public void valueChanged(      XFormField sourceField,      String newValue,      String oldValue){
        boolean enabled=dialog.getBooleanValue(Form.RECREATE_REQUESTS);
        dialog.getFormField(Form.CREATE_BACKUPS).setEnabled(enabled);
        dialog.getFormField(Form.RECREATE_OPTIONAL).setEnabled(enabled);
        dialog.getFormField(Form.KEEP_EXISTING).setEnabled(enabled);
      }
    }
);
  }
  dialog.setValue(Form.DEFINITION_URL,iface.getDefinition());
  dialog.getFormField(Form.DEFINITION_URL).setToolTip(PathUtils.expandPath(iface.getDefinition(),iface));
  if (!dialog.show())   return;
  String url=dialog.getValue(Form.DEFINITION_URL);
  if (url == null || url.trim().length() == 0)   return;
  String expUrl=PathUtils.expandPath(url,iface);
  if (expUrl.trim().length() == 0)   return;
  try {
    File file=new File(expUrl);
    if (file.exists())     expUrl=file.toURI().toURL().toString();
  }
 catch (  Exception e) {
    SoapUI.logError(e);
  }
  boolean createRequests=dialog.getBooleanValue(Form.CREATE_REQUESTS);
  try {
    UISupport.setHourglassCursor();
    if (iface.updateDefinition(expUrl,createRequests)) {
      afterUpdate(iface);
      if (!url.equals(expUrl))       iface.setDefinition(url,false);
    }
 else {
      UISupport.showInfoMessage("Update of interface failed","Update Definition");
    }
  }
 catch (  Exception e1) {
    UISupport.showInfoMessage("Failed to update interface: [" + e1 + "]","Update Definition");
    SoapUI.logError(e1);
  }
 finally {
    UISupport.resetCursor();
  }
}
