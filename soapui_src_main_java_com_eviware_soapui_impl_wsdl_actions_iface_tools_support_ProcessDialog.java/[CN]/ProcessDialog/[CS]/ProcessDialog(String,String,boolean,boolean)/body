{
  super(UISupport.getMainFrame());
  setTitle(title);
  setModal(true);
  setDefaultCloseOperation(JDialog.DO_NOTHING_ON_CLOSE);
  addWindowListener(new WindowAdapter(){
    public void windowClosing(    WindowEvent e){
      if (runner != null && !runner.isRunning())       dispose();
 else       UISupport.showErrorMessage("Cannot close while task is running..");
    }
  }
);
  progressBar=new JProgressBar(0,1);
  progressBar.setValue(0);
  progressBar.setIndeterminate(false);
  getContentPane().setLayout(new BorderLayout());
  if (description != null) {
    progressBar.setBorder(BorderFactory.createEmptyBorder(10,0,0,0));
    JPanel p=new JPanel(new BorderLayout());
    p.add(new JLabel(description),BorderLayout.NORTH);
    p.add(progressBar,BorderLayout.CENTER);
    p.setBorder(BorderFactory.createEmptyBorder(10,10,10,10));
    getContentPane().add(p,BorderLayout.NORTH);
  }
 else {
    progressBar.setBorder(BorderFactory.createEmptyBorder(10,10,10,10));
    getContentPane().add(progressBar,BorderLayout.NORTH);
  }
  if (showLog)   getContentPane().add(buildLog(),BorderLayout.CENTER);
  if (allowCancel) {
    ButtonBarBuilder builder=ButtonBarBuilder.createLeftToRightBuilder();
    builder.addGlue();
    cancelButton=new JButton(new CancelAction());
    builder.addFixed(cancelButton);
    builder.addUnrelatedGap();
    if (showLog) {
      closeButton=new JButton(new CloseAction());
      builder.addFixed(closeButton);
    }
    builder.addGlue();
    builder.setBorder(BorderFactory.createEmptyBorder(0,10,10,10));
    getContentPane().add(builder.getPanel(),BorderLayout.SOUTH);
  }
 else   if (showLog) {
    ButtonBarBuilder builder=ButtonBarBuilder.createLeftToRightBuilder();
    builder.addGlue();
    closeButton=new JButton(new CloseAction());
    builder.addFixed(closeButton);
    builder.addGlue();
    builder.setBorder(BorderFactory.createEmptyBorder(0,10,10,10));
    getContentPane().add(builder.getPanel(),BorderLayout.SOUTH);
  }
  pack();
}
