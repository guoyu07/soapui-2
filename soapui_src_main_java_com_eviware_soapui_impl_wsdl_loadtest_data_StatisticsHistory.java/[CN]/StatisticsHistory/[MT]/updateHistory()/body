{
  if (statistics.getStatistic(LoadTestStatistics.TOTAL,Statistic.COUNT) == 0) {
    reset();
  }
 else {
    int columnCount=statistics.getColumnCount();
    int rowCount=statistics.getRowCount();
    long[][] values=new long[rowCount][columnCount - 2];
    for (int c=0; c < rowCount; c++) {
      for (int i=2; i < columnCount; i++) {
        try {
          values[c][i - 2]=Long.parseLong(statistics.getValueAt(c,i).toString());
        }
 catch (        NumberFormatException ex) {
          values[c][i - 2]=(long)Float.parseFloat(statistics.getValueAt(c,i).toString());
        }
      }
    }
    data.add(values);
    threadCounts.add(statistics.getLoadTest().getThreadCount());
    int sz=data.size() - 1;
    for (    StatisticsValueHistory history : statisticsValueHistories.values()) {
      history.fireTableRowsInserted(sz,sz);
    }
    for (    TestStepStatisticsHistory history : testStepStatisticHistories.values()) {
      history.fireTableRowsInserted(sz,sz);
    }
  }
}
