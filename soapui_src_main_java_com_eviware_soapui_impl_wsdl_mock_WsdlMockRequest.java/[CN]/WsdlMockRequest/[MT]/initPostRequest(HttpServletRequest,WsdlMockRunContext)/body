{
  String contentType=request.getContentType();
  if (contentType != null && contentType.toUpperCase().startsWith("MULTIPART")) {
    readMultipartRequest(request);
    MultipartMessageSupport multipartMessageSupport=getMultipartMessageSupport();
    if (multipartMessageSupport != null && multipartMessageSupport.getRootPart() != null) {
      contentType=multipartMessageSupport.getRootPart().getContentType();
    }
  }
 else {
    String requestContent=readRequestContent(request);
    super.setRequestContent(requestContent);
    WsdlMockService mockService=(WsdlMockService)context.getMockService();
    if (StringUtils.hasContent(mockService.getIncomingWss())) {
      IncomingWss incoming=((WsdlProject)mockService.getProject()).getWssContainer().getIncomingWssByName(mockService.getIncomingWss());
      if (incoming != null) {
        Document dom=XmlUtils.parseXml(requestContent);
        try {
          wssResult=incoming.processIncoming(dom,context);
          if (wssResult != null && wssResult.size() > 0) {
            StringWriter writer=new StringWriter();
            XmlUtils.serialize(dom,writer);
            setActualRequestContent(requestContent);
            super.setRequestContent(writer.toString());
          }
        }
 catch (        Exception e) {
          if (wssResult == null) {
            wssResult=new Vector<Object>();
          }
          wssResult.add(e);
        }
      }
    }
  }
  try {
    soapVersion=SoapUtils.deduceSoapVersion(contentType,getRequestXmlObject());
  }
 catch (  Exception e) {
  }
  if (soapVersion == null) {
    soapVersion=SoapVersion.Soap11;
  }
  soapAction=SoapUtils.getSoapAction(soapVersion,getRequestHeaders());
}
