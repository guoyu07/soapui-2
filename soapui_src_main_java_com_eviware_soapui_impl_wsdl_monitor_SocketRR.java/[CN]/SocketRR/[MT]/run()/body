{
  try {
    byte[] buffer=new byte[4096];
    int saved=0;
    int len;
    long start=System.currentTimeMillis();
    a:     for (; ; ) {
      elapsed=System.currentTimeMillis() - start;
      if (done) {
        break;
      }
      len=buffer.length;
      if (len == 0) {
        len=buffer.length;
      }
      if (saved + len > buffer.length) {
        len=buffer.length - saved;
      }
      int len1=0;
      while (len1 == 0) {
        try {
          len1=in.read(buffer,saved,len);
        }
 catch (        Exception ex) {
          if (done && (saved == 0)) {
            break a;
          }
          len1=-1;
          break;
        }
      }
      len=len1;
      if ((len == -1) && (saved == 0)) {
        break;
      }
      if (len == -1) {
        done=true;
      }
      if ((out != null) && (len > 0)) {
        slowLink.pump(len);
        out.write(buffer,saved,len);
      }
    }
  }
 catch (  Exception e) {
    e.printStackTrace();
  }
 finally {
    done=true;
    try {
      if (out != null) {
        out.flush();
        if (null != outSocket) {
          outSocket.shutdownOutput();
        }
 else {
          out.close();
        }
        out=null;
      }
    }
 catch (    Exception e) {
    }
    try {
      if (in != null) {
        if (inSocket != null) {
          inSocket.shutdownInput();
        }
 else {
          in.close();
        }
        in=null;
      }
    }
 catch (    Exception e) {
    }
    myConnection.wakeUp();
  }
}
