{
  outgoingWssTable=JTableFactory.getInstance().makeJTable(new OutgoingWssTableModel());
  outgoingWssTable.getSelectionModel().addListSelectionListener(new ListSelectionListener(){
    public void valueChanged(    ListSelectionEvent e){
      int selectedRow=outgoingWssTable.getSelectedRow();
      selectedOutgoing=selectedRow == -1 ? null : wssContainer.getOutgoingWssAt(selectedRow);
      removeOutgoingWssAction.setEnabled(selectedRow != -1);
      addOutgoingEntryButton.setEnabled(selectedRow != -1);
      if (selectedOutgoing != null) {
        entriesListModel.removeAllElements();
        for (        WssEntry entry : selectedOutgoing.getEntries()) {
          entriesListModel.addElement(entry);
        }
        entriesListContainer.getViewport().add(entriesList);
        entriesSplitPane.setRightComponent(new JPanel());
      }
      entriesSplitPane.setDividerLocation(ENTRIES_LIST_COMPONENT_WIDTH);
    }
  }
);
  outgoingWssTable.getColumnModel().getColumn(2).setCellEditor(new DefaultCellEditor(new JPasswordField()));
  outgoingWssTable.getColumnModel().getColumn(2).setCellRenderer(new PasswordTableCellRenderer());
  JPanel outgoingConfigurationSplitPane=new JPanel(new BorderLayout());
  JSplitPane split=UISupport.createVerticalSplit(new JScrollPane(outgoingWssTable),buildOutgoingWssDetails());
  split.setDividerLocation(140);
  outgoingConfigurationSplitPane.add(buildOutgoingWssToolbar(),BorderLayout.NORTH);
  outgoingConfigurationSplitPane.add(split,BorderLayout.CENTER);
  JPanel outgoingConfigurationsPanel=new JPanel(new BorderLayout());
  outgoingConfigurationsPanel.add(outgoingConfigurationSplitPane,BorderLayout.CENTER);
  return outgoingConfigurationsPanel;
}
