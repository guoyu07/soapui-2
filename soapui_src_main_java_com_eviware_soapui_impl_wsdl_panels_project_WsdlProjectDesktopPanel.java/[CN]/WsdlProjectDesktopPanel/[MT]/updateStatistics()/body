{
  metrics.setMetric("File Path",getModelItem().getPath());
  Set<String> newNames=new HashSet<String>();
  boolean rebuilt=false;
  for (  Interface iface : getModelItem().getInterfaceList()) {
    if (!metrics.hasMetric(iface.getName())) {
      MetricsSection section=metrics.getSection("Interface Summary");
      buildInterfaceSummary(section.clear());
      rebuilt=true;
      break;
    }
    newNames.add(iface.getName());
    interfaceNameSet.remove(iface.getName());
  }
  if (!rebuilt) {
    if (!interfaceNameSet.isEmpty()) {
      MetricsSection section=metrics.getSection("Interface Summary");
      buildInterfaceSummary(section.clear());
    }
    interfaceNameSet=newNames;
  }
  metrics.setMetric(TESTSUITES_STATISTICS,getModelItem().getTestSuiteCount());
  int testCaseCount=0;
  int testStepsCount=0;
  int assertionsCount=0;
  int loadTestsCount=0;
  for (  TestSuite testSuite : getModelItem().getTestSuiteList()) {
    testCaseCount+=testSuite.getTestCaseCount();
    for (    TestCase testCase : testSuite.getTestCaseList()) {
      testStepsCount+=testCase.getTestStepCount();
      loadTestsCount+=testCase.getLoadTestCount();
      for (      TestStep testStep : testCase.getTestStepList()) {
        if (testStep instanceof Assertable) {
          assertionsCount+=((Assertable)testStep).getAssertionCount();
        }
      }
    }
  }
  metrics.setMetric(TESTCASES_STATISTICS,testCaseCount);
  metrics.setMetric(TESTSTEPS_STATISTICS,testStepsCount);
  metrics.setMetric(ASSERTIONS_STATISTICS,assertionsCount);
  metrics.setMetric(LOADTESTS_STATISTICS,loadTestsCount);
  int mockOperationCount=0;
  int mockResponseCount=0;
  for (  MockService mockService : getModelItem().getMockServiceList()) {
    mockOperationCount+=mockService.getMockOperationCount();
    mockResponseCount+=countMockResponses(mockService);
  }
  metrics.setMetric(MOCKSERVICES_STATISTICS,getModelItem().getMockServiceCount());
  metrics.setMetric(MOCKOPERATIONS_STATISTICS,mockOperationCount);
  metrics.setMetric(MOCKRESPONSES_STATISTICS,mockResponseCount);
  int restMockOperationCount=0;
  int restMockResponseCount=0;
  for (  MockService mockService : getModelItem().getRestMockServiceList()) {
    restMockOperationCount+=mockService.getMockOperationCount();
    restMockResponseCount+=countMockResponses(mockService);
  }
  metrics.setMetric(REST_MOCKSERVICES_STATISTICS,getModelItem().getRestMockServiceCount());
  metrics.setMetric(REST_MOCKOPERATIONS_STATISTICS,restMockOperationCount);
  metrics.setMetric(REST_MOCKRESPONSES_STATISTICS,restMockResponseCount);
}
