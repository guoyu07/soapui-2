{
  toolbar.addSeparator();
  addMethodCombo(toolbar);
  pathTextField=new JUndoableTextField();
  pathTextField.setPreferredSize(new Dimension(300,20));
  pathTextField.setText(getRequest().getEndpoint());
  pathTextField.setToolTipText(pathTextField.getText());
  pathTextField.getDocument().addDocumentListener(new DocumentListenerAdapter(){
    @Override public void update(    Document document){
      if (updating) {
        return;
      }
      updating=true;
      String text=pathTextField.getText();
      getRequest().setEndpoint(HttpUtils.completeUrlWithHttpIfProtocolIsNotHttpOrHttpsOrPropertyExpansion(text));
      if (!text.equals(getRequest().getEndpoint())) {
        SwingUtilities.invokeLater(new Runnable(){
          public void run(){
            pathTextField.setText(getRequest().getEndpoint());
          }
        }
);
      }
      updating=false;
    }
  }
);
  pathTextField.addKeyListener(new KeyAdapter(){
    @Override public void keyPressed(    KeyEvent e){
      if (e.getKeyCode() == KeyEvent.VK_ENTER) {
        onSubmit();
      }
    }
  }
);
  JPanel pathPanel=new JPanel(new BorderLayout(0,0));
  pathPanel.add(getLockIcon(),BorderLayout.WEST);
  pathPanel.add(pathTextField,BorderLayout.CENTER);
  toolbar.addLabeledFixed("Request URL:",pathPanel);
  toolbar.addSeparator();
  addCheckBox(toolbar);
}
