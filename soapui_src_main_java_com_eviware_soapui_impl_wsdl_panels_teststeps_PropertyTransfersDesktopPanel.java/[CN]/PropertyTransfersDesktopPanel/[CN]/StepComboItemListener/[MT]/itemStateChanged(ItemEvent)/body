{
  if (e.getStateChange() == ItemEvent.SELECTED) {
    TestPropertyHolder selectedItem=(TestPropertyHolder)e.getItem();
    String[] propertyNames=selectedItem.getPropertyNames();
    if (propertyCombo == targetPropertyCombo) {
      List<String> names=new ArrayList<String>();
      for (      String name : propertyNames) {
        TestProperty property=selectedItem.getProperty(name);
        if (property != null && !property.isReadOnly())         names.add(property.getName());
      }
      propertyNames=names.toArray(new String[names.size()]);
    }
    DefaultComboBoxModel model=new DefaultComboBoxModel();
    for (    String name : propertyNames)     model.addElement(selectedItem.getProperty(name));
    propertyCombo.setModel(model);
    propertyCombo.setEnabled(propertyNames.length > 0);
    if (propertyCombo == targetPropertyCombo)     propertyCombo.setSelectedItem(getCurrentTransfer().getTargetProperty());
 else     propertyCombo.setSelectedItem(getCurrentTransfer().getSourceProperty());
    selectedItem.addTestPropertyListener(testStepPropertiesListener);
  }
 else {
    propertyCombo.removeAllItems();
    propertyCombo.setEnabled(false);
  }
}
