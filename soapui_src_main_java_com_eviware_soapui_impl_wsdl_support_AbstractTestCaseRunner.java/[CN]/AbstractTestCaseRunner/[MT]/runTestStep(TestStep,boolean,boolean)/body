{
  if (!runBeforeSteps(testStep)) {
    return null;
  }
  TestStepResult stepResult=testStep.run(this,getRunContext());
  testStepResults.add(stepResult);
  resultCount++;
  enforceMaxResults(getTestCase().getMaxResults());
  for (int i=0; i < testRunListeners.length; i++) {
    if (Arrays.asList(getTestCase().getTestRunListeners()).contains(testRunListeners[i]))     testRunListeners[i].afterStep(this,getRunContext(),stepResult);
  }
  if (discard && stepResult.getStatus() == TestStepStatus.OK && getTestCase().getDiscardOkResults() && !stepResult.isDiscarded()) {
    stepResult.discard();
  }
  if (process && stepResult.getStatus() == TestStepStatus.FAILED) {
    if (getTestCase().getFailOnError()) {
      setError(stepResult.getError());
      fail("Cancelling due to failed test step");
    }
 else {
      getRunContext().setProperty(TestCaseRunner.Status.class.getName(),TestCaseRunner.Status.FAILED);
    }
  }
  return stepResult;
}
