{
  WSDLReader wsdlReader=new NonSchemaImportingWsdlReaderImpl();
  wsdlReader.setFeature("javax.wsdl.verbose",true);
  wsdlReader.setFeature("javax.wsdl.importDocuments",false);
  Definition definition=wsdlReader.readWSDL(null,inputSource);
  boolean updated=false;
  Map map=definition.getServices();
  for (Iterator i=map.values().iterator(); i.hasNext(); ) {
    Service service=(Service)i.next();
    Map portMap=service.getPorts();
    for (Iterator i2=portMap.values().iterator(); i2.hasNext(); ) {
      Port port=(Port)i2.next();
      if (port.getBinding().getQName().equals(iface.getBindingName())) {
        if (replaceSoapEndpoint(port,endpoint)) {
          updated=true;
        }
      }
    }
  }
  if (updated) {
    StringWriter writer=new StringWriter();
    Map nsMap=definition.getNamespaces();
    if (!nsMap.values().contains(Constants.SOAP_HTTP_BINDING_NS)) {
      definition.addNamespace("soaphttp",Constants.SOAP_HTTP_BINDING_NS);
    }
    new WSDLWriterImpl().writeWSDL(definition,writer);
    return writer.toString();
  }
  return null;
}
