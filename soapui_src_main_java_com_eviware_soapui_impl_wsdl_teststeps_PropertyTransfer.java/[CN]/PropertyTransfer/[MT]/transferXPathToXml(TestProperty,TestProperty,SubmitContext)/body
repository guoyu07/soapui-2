{
  XmlCursor sourceXml;
  try {
    String sourcePropertyValue=sourceProperty.getValue();
    if (isResponseProperty(sourceProperty)) {
      sourcePropertyValue=removeExpansions(sourceProperty.getValue());
    }
    XmlObject sourceXmlObject=sourcePropertyValue == null ? null : XmlUtils.createXmlObject(sourcePropertyValue);
    sourceXml=sourceXmlObject == null ? null : sourceXmlObject.newCursor();
  }
 catch (  XmlException e) {
    throw new Exception("Error parsing source property [" + e.getMessage() + "]");
  }
  XmlObject targetXmlObject;
  XmlCursor targetXml;
  try {
    String targetPropertyValue=targetProperty.getValue();
    targetXmlObject=XmlUtils.createXmlObject(targetPropertyValue);
    targetXml=targetXmlObject.newCursor();
  }
 catch (  XmlException e) {
    throw new Exception("Error parsing target property [" + e.getMessage() + "]");
  }
  XmlCursor lastSource=null;
  try {
    List<String> result=new ArrayList<String>();
    String tp=PropertyExpander.expandProperties(context,getTargetPath());
    targetXml.selectPath(tp);
    if (!targetXml.hasNextSelection()) {
      throw new Exception("Missing match for Target XPath [" + tp + "]");
    }
    if (sourceXml == null) {
      if (getSetNullOnMissingSource()) {
        while (targetXml.toNextSelection()) {
          result.add(setNodeValue(null,targetXml.getDomNode()));
          if (!getTransferToAll()) {
            break;
          }
        }
      }
    }
 else     if (getSourcePathLanguage() == PathLanguage.XQUERY) {
      String sp=PropertyExpander.expandProperties(context,getSourcePath());
      XmlCursor resultCursor=sourceXml.execQuery(sp);
      sourceXml.dispose();
      sourceXml=resultCursor;
      if (sourceXml.toNextToken() != TokenType.START) {
        if (getSetNullOnMissingSource()) {
          while (targetXml.toNextSelection()) {
            result.add(setNodeValue(null,targetXml.getDomNode()));
            if (!getTransferToAll()) {
              break;
            }
          }
        }
 else         if (!getIgnoreEmpty()) {
          throw new Exception("Missing match for Source XQuery [" + sp + "]");
        }
      }
      boolean hasTarget=targetXml.toNextSelection();
      if (hasTarget) {
        lastSource=sourceXml.newCursor();
        result.add(transferXmlValue(sourceXml,targetXml));
      }
    }
 else {
      String sp=PropertyExpander.expandProperties(context,getSourcePath());
      sourceXml.selectPath(sp);
      if (!sourceXml.hasNextSelection()) {
        if (getSetNullOnMissingSource()) {
          while (targetXml.toNextSelection()) {
            result.add(setNodeValue(null,targetXml.getDomNode()));
            if (!getTransferToAll()) {
              break;
            }
          }
        }
 else         if (!getIgnoreEmpty()) {
          throw new Exception("Missing match for Source XPath [" + sp + "]");
        }
      }
 else {
        boolean hasSource=sourceXml.toNextSelection();
        boolean hasTarget=targetXml.toNextSelection();
        while (hasSource && hasTarget) {
          if (lastSource != null) {
            lastSource.dispose();
          }
          lastSource=sourceXml.newCursor();
          result.add(transferXmlValue(sourceXml,targetXml));
          hasSource=sourceXml.toNextSelection();
          hasTarget=targetXml.toNextSelection();
        }
        if (getTransferToAll() && !hasSource && hasTarget&& lastSource != null) {
          while (hasTarget) {
            result.add(transferXmlValue(lastSource,targetXml));
            hasTarget=targetXml.toNextSelection();
          }
        }
      }
    }
    if (result.size() > 0) {
      String value=targetXmlObject.xmlText(new XmlOptions().setSaveAggressiveNamespaces());
      targetProperty.setValue(value);
    }
    return result.toArray(new String[result.size()]);
  }
  finally {
    if (sourceXml != null) {
      sourceXml.dispose();
    }
    if (targetXml != null) {
      targetXml.dispose();
    }
    if (lastSource != null) {
      lastSource.dispose();
    }
  }
}
