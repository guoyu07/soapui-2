{
  String stringValue=value == null ? null : String.valueOf(value);
  if (!hasTargetPath()) {
    getTargetProperty().setValue(stringValue);
  }
 else {
    String targetPath=PropertyExpander.expandProperties(context,getTargetPath());
    if (getTargetPathLanguage() == PathLanguage.JSONPATH) {
      JsonPathFacade jsonPathFacade=new JsonPathFacade(getTargetProperty().getValue());
      jsonPathFacade.writeValue(targetPath,value);
      getTargetProperty().setValue(jsonPathFacade.getCurrentJson());
    }
 else {
      XmlObject targetXml=XmlObject.Factory.parse(getTargetProperty().getValue());
      XmlCursor targetCursor=targetXml.newCursor();
      try {
        List<String> result=new ArrayList<String>();
        targetCursor.selectPath(targetPath);
        if (!targetCursor.toNextSelection()) {
          throw new Exception("Missing match for Target XPath [" + targetPath + "]");
        }
        Node targetNode=targetCursor.getDomNode();
        setNodeValue(stringValue,targetNode);
        result.add(stringValue);
        if (getTransferToAll()) {
          while (targetCursor.toNextSelection()) {
            targetNode=targetCursor.getDomNode();
            setNodeValue(stringValue,targetNode);
            result.add(stringValue);
          }
        }
        getTargetProperty().setValue(targetXml.xmlText(new XmlOptions().setSaveAggressiveNamespaces()));
        return result.toArray(new String[result.size()]);
      }
  finally {
        targetCursor.dispose();
      }
    }
  }
  return new String[]{stringValue};
}
