{
  PropertyTransferResult result=new PropertyTransferResult();
  canceled=false;
  long startTime=System.currentTimeMillis();
  for (int c=0; c < transfers.size(); c++) {
    PropertyTransfer valueTransfer=transfers.get(c);
    if ((transfer != null && transfer != valueTransfer) || valueTransfer.isDisabled())     continue;
    try {
      if (canceled) {
        result.setStatus(TestStepStatus.CANCELED);
        result.setTimeTaken(System.currentTimeMillis() - startTime);
        return result;
      }
      String[] values=valueTransfer.transferProperties(context);
      if (values != null && values.length > 0) {
        String name=valueTransfer.getName();
        result.addMessage("Performed transfer [" + name + "]");
        result.addTransferResult(valueTransfer,values);
      }
    }
 catch (    PropertyTransferException e) {
      result.addMessage("Error performing transfer [" + valueTransfer.getName() + "] - "+ e.getMessage());
      result.addTransferResult(valueTransfer,new String[]{e.getMessage()});
      if (transfers.get(c).getFailOnError()) {
        result.setError(e);
        result.setStatus(TestStepStatus.FAILED);
        result.setTimeTaken(System.currentTimeMillis() - startTime);
        if (failedIcon != null)         setIcon(failedIcon);
        return result;
      }
    }
  }
  if (okIcon != null)   setIcon(okIcon);
  result.setStatus(TestStepStatus.OK);
  result.setTimeTaken(System.currentTimeMillis() - startTime);
  return result;
}
