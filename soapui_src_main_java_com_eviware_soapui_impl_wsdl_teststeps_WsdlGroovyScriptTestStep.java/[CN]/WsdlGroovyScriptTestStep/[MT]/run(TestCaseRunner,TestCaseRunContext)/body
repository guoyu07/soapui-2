{
  SoapUI.ensureGroovyLog();
  WsdlTestStepResult result=new WsdlTestStepResult(this);
  try {
    if (scriptText.trim().length() > 0) {
synchronized (this) {
        scriptEngine.setVariable("context",context);
        scriptEngine.setVariable("testRunner",testRunner);
        scriptEngine.setVariable("log",logger);
        result.setTimeStamp(System.currentTimeMillis());
        result.startTimer();
        scriptResult=scriptEngine.run();
        result.stopTimer();
        if (scriptResult != null) {
          result.addMessage("Script-result: " + scriptResult.toString());
          firePropertyValueChanged(RESULT_PROPERTY,null,String.valueOf(result));
        }
      }
    }
    Status testRunnerStatus=testRunner.getStatus();
    if (testRunnerStatus == Status.FAILED) {
      result.setStatus(TestStepStatus.FAILED);
    }
 else     if (testRunnerStatus == Status.CANCELED) {
      result.setStatus(TestStepStatus.CANCELED);
    }
 else {
      result.setStatus(TestStepStatus.OK);
    }
  }
 catch (  Throwable e) {
    String errorLineNumber=GroovyUtils.extractErrorLineNumber(e);
    SoapUI.logError(e);
    result.stopTimer();
    result.addMessage(e.toString());
    if (errorLineNumber != null) {
      result.addMessage("error at line: " + errorLineNumber);
    }
    result.setError(e);
    result.setStatus(TestStepStatus.FAILED);
  }
 finally {
    if (!isForLoadTest()) {
      setIcon(result.getStatus() == TestStepStatus.FAILED ? failedIcon : okIcon);
    }
    if (scriptEngine != null) {
      scriptEngine.clearVariables();
    }
  }
  return result;
}
