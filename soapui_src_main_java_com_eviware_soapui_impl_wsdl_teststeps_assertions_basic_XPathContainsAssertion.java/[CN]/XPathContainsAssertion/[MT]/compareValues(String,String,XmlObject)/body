{
  Diff diff=new Diff(expandedContent,expandedValue);
  InternalDifferenceListener internalDifferenceListener=new InternalDifferenceListener();
  diff.overrideDifferenceListener(internalDifferenceListener);
  if (!diff.identical())   throw new Exception(diff.toString());
  StringList nodesToRemove=internalDifferenceListener.getNodesToRemove();
  if (!nodesToRemove.isEmpty()) {
    for (    String node : nodesToRemove) {
      if (node == null)       continue;
      int ix=node.indexOf("\n/");
      if (ix != -1)       node=node.substring(0,ix + 1) + "./" + node.substring(ix + 1);
 else       if (node.startsWith("/"))       node="/" + node;
      XmlObject[] paths=object.selectPath(node);
      if (paths.length > 0) {
        Node domNode=paths[0].getDomNode();
        if (domNode.getNodeType() == Node.ATTRIBUTE_NODE)         ((Attr)domNode).getOwnerElement().removeAttributeNode((Attr)domNode);
 else         domNode.getParentNode().removeChild(domNode);
        try {
          object.set(object.copy());
        }
 catch (        XmlValueDisconnectedException e) {
          return;
        }
      }
    }
  }
}
