{
  if (StringUtils.hasContent(getInitParameter("listeners"))) {
    logger.info("Init listeners");
    System.setProperty("soapui.ext.listeners",getServletContext().getRealPath(getInitParameter("listeners")));
  }
 else {
    logger.info("Listeners not set!");
  }
  if (StringUtils.hasContent(getInitParameter("actions"))) {
    logger.info("Init actions");
    System.setProperty("soapui.ext.actions",getServletContext().getRealPath(getInitParameter("actions")));
  }
 else {
    logger.info("Actions not set!");
  }
  if (SoapUI.getSoapUICore() == null) {
    if (StringUtils.hasContent(getInitParameter("soapUISettings"))) {
      logger.info("Init settings");
      SoapUI.setSoapUICore(new MockServletSoapUICore(getServletContext(),getInitParameter("soapUISettings")),true);
    }
 else {
      logger.info("Settings not set!");
      SoapUI.setSoapUICore(new MockServletSoapUICore(getServletContext()),true);
    }
  }
 else   logger.info("SoapUI core already exists, reusing existing one");
  if (StringUtils.hasContent(getInitParameter("enableWebUI"))) {
    if ("true".equals(getInitParameter("enableWebUI"))) {
      logger.info("WebUI ENABLED");
      enableWebUI=true;
    }
 else {
      logger.info("WebUI DISABLED");
      enableWebUI=false;
    }
  }
  try {
    maxResults=Integer.parseInt(getInitParameter("maxResults"));
  }
 catch (  Throwable t) {
    maxResults=1000;
  }
  SoapUI.ensureGroovyLog().addAppender(new GroovyLogAppender());
  return getInitParameter("mockServiceEndpoint");
}
