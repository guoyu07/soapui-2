{
synchronized (server) {
    MockService mockService=runner.getMockContext().getMockService();
    final Integer port=mockService.getPort();
    Map<String,List<MockRunner>> map=runners.get(port);
    if (map == null || !map.containsKey(mockService.getPath()))     return;
    map.get(mockService.getPath()).remove(runner);
    if (map.get(mockService.getPath()).isEmpty()) {
      map.remove(mockService.getPath());
    }
    mockRunners.remove(runner);
    log.info("Stopped MockService [" + mockService.getName() + "] on port ["+ port+ "]");
    if (map.isEmpty() && !SoapUI.getSettings().getBoolean(HttpSettings.LEAVE_MOCKENGINE)) {
      SoapUIConnector connector=connectors.get(port);
      if (connector == null) {
        log.warn("Missing connectors on port [" + port + "]");
        return;
      }
      try {
        log.info("Stopping connector on port " + port);
        if (!connector.waitUntilIdle(5000)) {
          log.warn("Failed to wait for idle.. stopping connector anyway..");
        }
        connector.stop();
      }
 catch (      Exception e) {
        SoapUI.logError(e);
      }
      server.removeConnector(connector);
      runners.remove(port);
      if (runners.isEmpty()) {
        try {
          log.info("No more connectors.. stopping server");
          server.stop();
          if (sslConnector != null) {
          }
        }
 catch (        Exception e) {
          SoapUI.logError(e);
        }
      }
    }
  }
}
