{
  if (row == -1) {
    typeLabel.setJlabel("- no parameter selected -");
    return;
  }
  SecurityCheckedParameter parameter=getParameterAt(row);
  if (parameter == null) {
    return;
  }
  String name=parameter.getName();
  String xpath=parameter.getXpath();
  TestProperty tp=getTestStep().getProperty(name);
  XmlObjectTreeModel xmlObjectTreeModel=null;
  if (tp.getSchemaType() != null && XmlUtils.seemsToBeXml(tp.getValue())) {
    try {
      xmlObjectTreeModel=new XmlObjectTreeModel(tp.getSchemaType().getTypeSystem(),XmlUtils.createXmlObject(tp.getValue()));
    }
 catch (    XmlException e) {
      SoapUI.logError(e);
    }
    XmlTreeNode[] treeNodes=xmlObjectTreeModel.selectTreeNodes(xpath);
    if (treeNodes.length == 0) {
      typeLabel.setJlabel("");
      return;
    }
    SchemaTypeImpl simpleType=(SchemaTypeImpl)treeNodes[0].getSchemaType();
    if (simpleType != null && !simpleType.isNoType()) {
      XmlObjectTreeModel model2=new XmlObjectTreeModel(simpleType.getTypeSystem(),simpleType.getParseObject());
      List<String> list=BoundaryRestrictionUtill.getType(model2.getRootNode(),new ArrayList<String>());
      if (list.isEmpty()) {
        typeLabel.setJlabel("parameter has type [" + simpleType.getName() + "]");
      }
 else {
        typeLabel.setJlabel("parameter has types [" + list.toString() + "]");
      }
    }
 else {
      typeLabel.setJlabel("parameter is missing type in schema");
    }
  }
 else {
    typeLabel.setJlabel("- no parameter selected ->");
  }
}
