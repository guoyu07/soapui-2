{
  int pos=tweakPosition();
  int lastpos=tweakLastPosition();
  String txt=target.getText();
  if (findCombo.getSelectedItem() == null) {
    return;
  }
  String value=findCombo.getSelectedItem().toString();
  if (value.length() == 0 || txt.length() == 0) {
    return;
  }
  String newValue=replaceCombo.getSelectedItem() == null ? "" : replaceCombo.getSelectedItem().toString();
  if (!caseCheck.isSelected()) {
    if (newValue.equalsIgnoreCase(value)) {
      return;
    }
    value=value.toLowerCase();
    txt=txt.toLowerCase();
  }
 else   if (newValue.equals(value)) {
    return;
  }
  if (pos == lastPositionF && value.equals(lastSearchedItem)) {
    if (forwardButton.isSelected()) {
      pos+=value.length() + 1;
    }
 else {
      pos-=value.length() - 1;
    }
  }
  int ix=findNext(pos,txt,value);
  lastSearchedItem=value;
  lastPositionF=ix;
  int firstIx=ix;
  if (ix != -1) {
    target.select(ix,ix + value.length());
    target.setSelectedText(newValue);
    if (selectedLinesButton.isSelected()) {
      target.select(ix,lastpos);
    }
 else {
      target.select(ix,ix + newValue.length());
    }
    if (ix < firstIx) {
      firstIx+=newValue.length() - value.length();
    }
    txt=target.getText();
    if (!caseCheck.isSelected()) {
      txt=txt.toLowerCase();
    }
    if (forwardButton.isSelected()) {
      ix=findNext(ix + newValue.length(),txt,value);
    }
 else {
      ix=findNext(ix - 1,txt,value);
    }
  }
 else {
    UISupport.showErrorMessage("String [" + value + "] not found");
  }
}
