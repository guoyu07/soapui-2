{
  FontMetrics fm=fComponent.getFontMetrics(fComponent.getFont());
  fCharHeight=fm.getAscent() + fm.getDescent();
  fDescent=fm.getDescent();
  if (fRotation == ROTATE_NONE) {
    int len=fLabel.length();
    char data[]=new char[len];
    fLabel.getChars(0,len,data,0);
    fWidth=0;
    fCharStrings=new String[len];
    fCharWidths=new int[len];
    fPosition=new int[len];
    char ch;
    for (int i=0; i < len; i++) {
      ch=data[i];
      fCharWidths[i]=fm.charWidth(ch);
      if (fCharWidths[i] > fWidth) {
        fWidth=fCharWidths[i];
      }
      fCharStrings[i]=new String(data,i,1);
      if (sDrawsInTopRight.indexOf(ch) >= 0) {
        fPosition[i]=POSITION_TOP_RIGHT;
      }
 else       if (sDrawsInFarTopRight.indexOf(ch) >= 0) {
        fPosition[i]=POSITION_FAR_TOP_RIGHT;
      }
 else {
        fPosition[i]=POSITION_NORMAL;
      }
    }
    fHeight=fCharHeight * len + fDescent;
  }
 else {
    fWidth=fCharHeight;
    fHeight=fm.stringWidth(fLabel) + 2 * kBufferSpace;
  }
}
