{
  if (addStatusBar) {
    JPanel statusBar=new JPanel(new BorderLayout());
    JLabel statusLabel=new JLabel();
    UISupport.setFixedSize(statusBar,new Dimension(20,20));
    statusBar.add(statusLabel,BorderLayout.WEST);
    panel.add(statusBar,BorderLayout.SOUTH);
  }
  final JFXPanel browserPanel=new JFXPanel();
  panel.add(browserPanel,BorderLayout.CENTER);
  Platform.runLater(new Runnable(){
    public void run(){
      webView=new WebView();
      webView.getEngine().locationProperty().addListener(new ChangeListener<String>(){
        @Override public void changed(        ObservableValue<? extends String> observableValue,        String oldLocation,        String newLocation){
          for (          BrowserStateChangeListener listener : listeners) {
            listener.locationChanged(newLocation);
          }
        }
      }
);
      webView.getEngine().getLoadWorker().stateProperty().addListener(new ChangeListener<Worker.State>(){
        @Override public void changed(        ObservableValue ov,        Worker.State oldState,        Worker.State newState){
          if (newState == Worker.State.SUCCEEDED) {
            try {
              if (getWebEngine().getDocument() != null) {
                String output=readDocumentAsString();
                for (                BrowserStateChangeListener listener : listeners) {
                  listener.contentChanged(output);
                }
              }
            }
 catch (            Exception ex) {
              SoapUI.logError(ex,"Error processing state change to " + newState);
            }
          }
        }
      }
);
      Group jfxComponentGroup=new Group();
      Scene scene=new Scene(jfxComponentGroup);
      webView.prefWidthProperty().bind(scene.widthProperty());
      webView.prefHeightProperty().bind(scene.heightProperty());
      jfxComponentGroup.getChildren().add(webView);
      browserPanel.setScene(scene);
      addKeyboardFocusManager(browserPanel);
    }
  }
);
}
