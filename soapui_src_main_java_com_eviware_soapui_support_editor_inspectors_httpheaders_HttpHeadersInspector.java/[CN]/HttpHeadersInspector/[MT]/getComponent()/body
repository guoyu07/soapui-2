{
  if (panel != null) {
    return panel;
  }
  headersTableModel=new StringToStringsMapTableModel(model.getHeaders(),"Header","Value",!model.isReadOnly());
  headersTableModel.addTableModelListener(new TableModelListener(){
    public void tableChanged(    TableModelEvent arg0){
      model.setHeaders(headersTableModel.getData());
      setTitle("Headers (" + (model.getHeaders() == null ? "0" : model.getHeaders().valueCount()) + ")");
    }
  }
);
  headersTable=JTableFactory.getInstance().makeJTable(headersTableModel);
  panel=new JPanel(new BorderLayout());
  panel.add(new JScrollPane(headersTable),BorderLayout.CENTER);
  if (!model.isReadOnly()) {
    headersTable.setSurrendersFocusOnKeystroke(true);
    headersTable.putClientProperty("terminateEditOnFocusLost",Boolean.TRUE);
    JXToolBar builder=UISupport.createSmallToolbar();
    builder.addFixed(UISupport.createToolbarButton(new AddAction()));
    removeButton=UISupport.createToolbarButton(new RemoveAction());
    builder.addFixed(removeButton);
    builder.addGlue();
    String helpUrl=model instanceof HasHelpUrl ? ((HasHelpUrl)model).getHelpUrl() : HelpUrls.HTTP_REQUEST_HEADERS_HELP_URL;
    builder.addFixed(UISupport.createToolbarButton(new ShowOnlineHelpAction(helpUrl)));
    panel.add(builder,BorderLayout.NORTH);
    headersTable.getSelectionModel().addListSelectionListener(new ListSelectionListener(){
      public void valueChanged(      ListSelectionEvent e){
        removeButton.setEnabled(headersTable.getSelectedRow() != -1);
      }
    }
);
    if (headersTable.getRowCount() > 0) {
      headersTable.setRowSelectionInterval(0,0);
    }
 else {
      removeButton.setEnabled(false);
    }
  }
  return panel;
}
