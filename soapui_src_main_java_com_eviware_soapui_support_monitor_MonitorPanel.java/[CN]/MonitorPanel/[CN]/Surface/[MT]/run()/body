{
  while (thread != null) {
    long totalMemory=monitorSource.getTotal();
    long usedMemory=monitorSource.getUsed();
    long freeMemory=totalMemory - usedMemory;
    if (points == null) {
      points=new double[1];
      validPoints=0;
    }
 else     if (points.length < validPoints + 1) {
      double[] tmp;
      int graphW=validPoints + 1;
      if (validPoints < graphW) {
        tmp=new double[validPoints];
        System.arraycopy(points,0,tmp,0,tmp.length);
      }
 else {
        tmp=new double[graphW];
        System.arraycopy(points,points.length - tmp.length,tmp,0,tmp.length);
        validPoints=tmp.length - 2;
      }
      points=new double[graphW];
      System.arraycopy(tmp,0,points,0,tmp.length);
    }
 else {
      points[validPoints]=(freeMemory / totalMemory);
      if (validPoints + 2 == points.length) {
        System.arraycopy(points,1,points,0,validPoints);
        --validPoints;
      }
 else {
        validPoints++;
      }
    }
    repaint();
    try {
      Thread.sleep(sleepAmount);
    }
 catch (    InterruptedException e) {
      break;
    }
  }
}
