{
  dispatchPanel=new JPanel(new BorderLayout());
  dispatchPanel.setOpaque(true);
  ButtonBarBuilder builder=new ButtonBarBuilder();
  builder.addFixed(new JLabel("Dispatch: "));
  builder.addRelatedGap();
  dispatchCombo=new JComboBox(getAvailableDispatchTypes());
  dispatchCombo.setSelectedItem(null);
  dispatchCombo.addItemListener(new ItemListener(){
    public void itemStateChanged(    ItemEvent e){
      if (dispatchPanel.getComponentCount() > 1)       dispatchPanel.remove(1);
      String item=(String)dispatchCombo.getSelectedItem();
      MockOperationDispatcher dispatcher=getModelItem().setDispatchStyle(item);
      dispatchPanel.add(dispatcher.getEditorComponent(),BorderLayout.CENTER);
      dispatchPanel.revalidate();
      dispatchPanel.repaint();
      if (dispatchInspector != null && item != null) {
        dispatchInspector.setTitle("Dispatch (" + item + ")");
      }
      defaultResponsePanel.setVisible(getModelItem().getDispatcher().hasDefaultResponse());
    }
  }
);
  builder.addFixed(dispatchCombo);
  defaultResponsePanel=new JPanel(new BorderLayout());
  defaultResponsePanel.add(new JLabel("Default Response: "),BorderLayout.WEST);
  ModelItemNames<MockResponse> names=new ModelItemNames<MockResponse>(getModelItem().getMockResponses());
  defaultResponseCombo=new JComboBox(new ExtendedComboBoxModel(names.getNames()));
  defaultResponseCombo.setPreferredSize(new Dimension(150,20));
  defaultResponseCombo.addItemListener(new ItemListener(){
    public void itemStateChanged(    ItemEvent e){
      Object selectedItem=defaultResponseCombo.getSelectedItem();
      getModelItem().setDefaultResponse((String)selectedItem);
    }
  }
);
  defaultResponsePanel.add(defaultResponseCombo,BorderLayout.CENTER);
  builder.addUnrelatedGap();
  builder.addFixed(defaultResponsePanel);
  dispatchPanel.add(builder.getPanel(),BorderLayout.NORTH);
  defaultResponseCombo.setSelectedItem(getModelItem().getDefaultResponse());
  dispatchCombo.setSelectedItem(getModelItem().getDispatchStyle());
  return dispatchPanel;
}
