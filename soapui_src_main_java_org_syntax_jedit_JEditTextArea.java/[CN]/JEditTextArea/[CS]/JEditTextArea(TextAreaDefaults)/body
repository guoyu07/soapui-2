{
  enableEvents(AWTEvent.KEY_EVENT_MASK);
  painter=createPainter(defaults);
  documentHandler=new DocumentHandler();
  listenerList=new EventListenerList();
  caretEvent=new MutableCaretEvent();
  lineSegment=new Segment();
  bracketLine=bracketPosition=-1;
  blink=true;
  setAutoscrolls(true);
  setLayout(new BorderLayout());
  add(painter,BorderLayout.CENTER);
  painter.addComponentListener(new ComponentHandler());
  painter.addMouseListener(new MouseHandler());
  painter.addMouseMotionListener(new DragHandler());
  addFocusListener(new FocusHandler());
  setInputHandler(defaults.inputHandler);
  setDocument(defaults.document);
  editable=defaults.editable;
  caretVisible=defaults.caretVisible;
  caretBlinks=defaults.caretBlinks;
  popup=defaults.popup;
  focusedComponentRef=new WeakReference<JEditTextArea>(this);
  addMouseWheelListener(new MouseWheelListener(){
    public void mouseWheelMoved(    MouseWheelEvent e){
      if ((e.getModifiers() & Toolkit.getDefaultToolkit().getMenuShortcutKeyMask()) == Toolkit.getDefaultToolkit().getMenuShortcutKeyMask()) {
        int caretLine=getCaretLine();
        int newLine=caretLine + e.getWheelRotation();
        if (newLine < 0) {
          newLine=0;
        }
 else         if (newLine > getLineCount() - 1) {
          newLine=getLineCount() - 1;
        }
        int newPos=getLineStartOffset(newLine);
        setCaretPosition(newPos);
      }
 else {
        Rectangle rect=getVisibleRect();
        rect.setLocation((int)rect.getX(),(int)rect.getY() + painter.getFontMetrics().getHeight() * 3 * e.getWheelRotation());
        scrollRectToVisible(rect);
      }
    }
  }
);
}
