{
  offset=lastOffset=lastKeyword=line.offset;
  length=line.count + offset;
  loop:   for (int i=offset; i < length; i++) {
switch (line.array[i]) {
case '*':
      if (token == Token.COMMENT1 && length - i >= 1 && line.array[i + 1] == '/') {
        token=Token.NULL;
        i++;
        addToken((i + 1) - lastOffset,Token.COMMENT1);
        lastOffset=i + 1;
      }
 else       if (token == Token.NULL) {
        searchBack(line,i);
        addToken(1,Token.OPERATOR);
        lastOffset=i + 1;
      }
    break;
case '[':
  if (token == Token.NULL) {
    searchBack(line,i);
    token=Token.LITERAL1;
    literalChar='[';
    lastOffset=i;
  }
break;
case ']':
if (token == Token.LITERAL1 && literalChar == '[') {
token=Token.NULL;
literalChar=0;
addToken((i + 1) - lastOffset,Token.LITERAL1);
lastOffset=i + 1;
}
break;
case '.':
case ',':
case '(':
case ')':
if (token == Token.NULL) {
searchBack(line,i);
addToken(1,Token.NULL);
lastOffset=i + 1;
}
break;
case '+':
case '%':
case '&':
case '|':
case '^':
case '~':
case '<':
case '>':
case '=':
if (token == Token.NULL) {
searchBack(line,i);
addToken(1,Token.OPERATOR);
lastOffset=i + 1;
}
break;
case ' ':
case '\t':
if (token == Token.NULL) {
searchBack(line,i,false);
}
break;
case ':':
if (token == Token.NULL) {
addToken((i + 1) - lastOffset,Token.LABEL);
lastOffset=i + 1;
}
break;
case '/':
if (token == Token.NULL) {
if (length - i >= 2 && line.array[i + 1] == '*') {
searchBack(line,i);
token=Token.COMMENT1;
lastOffset=i;
i++;
}
 else {
searchBack(line,i);
addToken(1,Token.OPERATOR);
lastOffset=i + 1;
}
}
break;
case '-':
if (token == Token.NULL) {
if (length - i >= 2 && line.array[i + 1] == '-') {
searchBack(line,i);
addToken(length - i,Token.COMMENT1);
lastOffset=length;
break loop;
}
 else {
searchBack(line,i);
addToken(1,Token.OPERATOR);
lastOffset=i + 1;
}
}
break;
case '!':
if (isTSQL && token == Token.NULL && length - i >= 2 && (line.array[i + 1] == '=' || line.array[i + 1] == '<' || line.array[i + 1] == '>')) {
searchBack(line,i);
addToken(1,Token.OPERATOR);
lastOffset=i + 1;
}
break;
case '"':
case '\'':
if (token == Token.NULL) {
token=Token.LITERAL1;
literalChar=line.array[i];
addToken(i - lastOffset,Token.NULL);
lastOffset=i;
}
 else if (token == Token.LITERAL1 && literalChar == line.array[i]) {
token=Token.NULL;
literalChar=0;
addToken((i + 1) - lastOffset,Token.LITERAL1);
lastOffset=i + 1;
}
break;
default :
break;
}
}
if (token == Token.NULL) {
searchBack(line,length,false);
}
if (lastOffset != length) {
addToken(length - lastOffset,token);
}
return token;
}
