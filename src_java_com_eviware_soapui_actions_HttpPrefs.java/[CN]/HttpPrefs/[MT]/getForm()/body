{
  if (httpForm == null) {
    httpForm=new SimpleForm();
    httpForm.addSpace(5);
    httpForm.appendComboBox(HttpPrefs.HTTP_VERSION,new String[]{HttpSettings.HTTP_VERSION_1_1,HttpSettings.HTTP_VERSION_1_0,HttpSettings.HTTP_VERSION_0_9},"Select HTTP Version to use");
    httpForm.appendTextField(HttpPrefs.USER_AGENT_HEADER,"User-Agent HTTP header to send, blank will send default");
    httpForm.appendComboBox(HttpPrefs.REQUEST_COMPRESSION,compressionAlgs);
    httpForm.appendCheckBox(HttpPrefs.RESPONSE_COMPRESSION,"Accept compressed responses from hosts",true);
    httpForm.appendCheckBox(HttpPrefs.DISABLE_RESPONSE_DECOMPRESSION,"Disable decompression of compressed responses",true);
    httpForm.appendCheckBox(HttpPrefs.CLOSE_CONNECTIONS_AFTER_REQUEST,"Closes the HTTP connection after each SOAP request",true);
    httpForm.appendCheckBox(HttpPrefs.DISABLE_CHUNKING,"Disables content-chunking",true);
    httpForm.appendCheckBox(HttpPrefs.AUTHENTICATE_PREEMPTIVELY,"Adds authentication information to outgoing request",true);
    httpForm.appendCheckBox(HttpPrefs.ENCODED_URLS,"Do not URL-escape service endpoints",true);
    httpForm.appendTextField(HttpPrefs.BIND_ADDRESS,"Default local address to bind to when sending requests");
    httpForm.appendSeparator();
    httpForm.appendCheckBox(HttpPrefs.INCLUDE_REQUEST_IN_TIME_TAKEN,"Includes the time it took to write the request in time-taken",true);
    httpForm.appendCheckBox(HttpPrefs.INCLUDE_RESPONSE_IN_TIME_TAKEN,"Includes the time it took to read the entire response in time-taken",true);
    httpForm.appendTextField(HttpPrefs.SOCKET_TIMEOUT,"Socket timeout in milliseconds");
    httpForm.appendTextField(HttpPrefs.MAX_RESPONSE_SIZE,"Maximum size to read from response (0 = no limit)");
    httpForm.appendTextField(HttpPrefs.MAX_CONNECTIONS_PER_HOST,"Maximum number of Connections Per Host");
    httpForm.appendTextField(HttpPrefs.MAX_TOTAL_CONNECTIONS,"Maximum number of Total Connections");
    httpForm.appendSeparator();
    httpForm.appendCheckBox(HttpPrefs.LEAVE_MOCKENGINE,"Leave MockEngine running when stopping MockServices",false);
    httpForm.appendCheckBox(HttpPrefs.ENABLE_MOCK_WIRE_LOG,"Logs wire content of all mock requests",false);
    httpForm.addSpace(5);
  }
  return httpForm;
}
