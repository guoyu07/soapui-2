{
  Method methodConfig=resourceConfig.addNewMethod();
  createDoc(methodConfig.addNewDoc(),request);
  methodConfig.setName(request.getMethod().toString());
  methodConfig.setId(request.getName());
  Request requestConfig=methodConfig.addNewRequest();
  Map<String,RestParamProperty> defaultParams=new HashMap<String,RestParamProperty>();
  for (  RestParamProperty defaultParam : request.getResource().getDefaultParams())   defaultParams.put(defaultParam.getName(),defaultParam);
  XmlBeansRestParamsTestPropertyHolder params=request.getParams();
  for (int c=0; c < params.size(); c++) {
    RestParamProperty param=params.getPropertyAt(c);
    if (!defaultParams.containsKey(param.getName()) || !param.equals(defaultParams.get(param.getName())))     generateParam(requestConfig.addNewParam(),param);
  }
  if (request.hasRequestBody()) {
    for (    RestRepresentation representation : request.getRepresentations(RestRepresentation.Type.REQUEST)) {
      generateRepresentation(requestConfig.addNewRepresentation(),representation);
    }
  }
  Response responseConfig=methodConfig.addNewResponse();
  for (  RestRepresentation representation : request.getRepresentations(RestRepresentation.Type.RESPONSE)) {
    generateRepresentation(responseConfig.addNewRepresentation(),representation);
  }
  for (  RestRepresentation representation : request.getRepresentations(RestRepresentation.Type.FAULT)) {
    generateRepresentation(responseConfig.addNewFault(),representation);
  }
}
