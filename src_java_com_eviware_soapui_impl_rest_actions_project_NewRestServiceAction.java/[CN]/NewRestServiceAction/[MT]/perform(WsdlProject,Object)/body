{
  if (dialog == null) {
    dialog=ADialogBuilder.buildDialog(Form.class);
    dialog.getFormField(Form.SERVICENAME).addFormFieldValidator(new RequiredValidator("Service Name is required"));
    dialog.getFormField(Form.SERVICEENDPOINT).addFormFieldListener(new XFormFieldListener(){
      public void valueChanged(      XFormField sourceField,      String newValue,      String oldValue){
        boolean enable=false;
        try {
          URL url=new URL(newValue);
          enable=url.getPath().length() > 0 && !(url.getPath().length() == 1 && url.getPath().charAt(0) == '/');
          if (enable) {
            newValue=dialog.getValue(Form.WADLURL);
            try {
              new URL(newValue);
              enable=false;
            }
 catch (            MalformedURLException e) {
              if (new File(newValue).exists())               enable=false;
            }
          }
        }
 catch (        MalformedURLException e) {
        }
        dialog.getFormField(Form.EXTRACTPARAMS).setEnabled(enable);
      }
    }
);
    dialog.getFormField(Form.WADLURL).addFormFieldListener(new XFormFieldListener(){
      public void valueChanged(      XFormField sourceField,      String newValue,      String oldValue){
        boolean enable=true;
        try {
          new URL(newValue);
        }
 catch (        MalformedURLException e) {
          if (new File(newValue).exists())           enable=false;
        }
        dialog.getFormField(Form.CREATERESOURCE).setEnabled(enable);
        if (enable) {
          try {
            URL url=new URL(dialog.getValue(Form.SERVICEENDPOINT));
            enable=url.getPath().length() > 0 && !(url.getPath().length() == 1 && url.getPath().charAt(0) == '/');
          }
 catch (          MalformedURLException e) {
            enable=false;
          }
          dialog.getFormField(Form.EXTRACTPARAMS).setEnabled(enable);
        }
 else         dialog.getFormField(Form.EXTRACTPARAMS).setEnabled(false);
      }
    }
);
    dialog.getFormField(Form.EXTRACTPARAMS).setEnabled(false);
  }
 else {
    dialog.setValue(Form.SERVICENAME,"");
    dialog.setValue(Form.SERVICEENDPOINT,"");
    dialog.setValue(Form.WADLURL,"");
  }
  if (dialog.show()) {
    RestService restService=(RestService)project.addNewInterface(dialog.getValue(Form.SERVICENAME),RestServiceFactory.REST_TYPE);
    restService.setBasePath(dialog.getValue(Form.SERVICEENDPOINT));
    UISupport.select(restService);
    if (dialog.getFormField(Form.EXTRACTPARAMS).isEnabled() && dialog.getBooleanValue(Form.EXTRACTPARAMS)) {
      try {
        URL url=new URL(restService.getBasePath());
        SoapUI.getActionRegistry().getAction(NewRestResourceAction.SOAPUI_ACTION_ID).perform(restService,url);
      }
 catch (      MalformedURLException e) {
        SoapUI.getActionRegistry().getAction(NewRestResourceAction.SOAPUI_ACTION_ID).perform(restService,null);
      }
    }
    String wadl=dialog.getValue(Form.WADLURL);
    if (StringUtils.hasContent(wadl)) {
      try {
        File f=new File(wadl);
        if (f.exists())         RestUtils.initFromWadl(restService,f.toURI().toURL().toString());
 else         RestUtils.initFromWadl(restService,wadl);
      }
 catch (      Exception e) {
        log.error(e.toString());
      }
    }
    try {
      URL url=new URL(restService.getBasePath());
      String endpoint=url.getProtocol() + "://" + url.getHost();
      if (url.getPort() > 0)       endpoint+=":" + url.getPort();
      restService.addEndpoint(endpoint);
    }
 catch (    Exception e) {
    }
    if (dialog.getFormField(Form.CREATERESOURCE).isEnabled() && dialog.getBooleanValue(Form.CREATERESOURCE)) {
      SoapUI.getActionRegistry().getAction(NewRestResourceAction.SOAPUI_ACTION_ID).perform(restService,null);
    }
  }
}
