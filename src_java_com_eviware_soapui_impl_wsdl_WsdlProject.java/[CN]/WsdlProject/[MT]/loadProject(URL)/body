{
  try {
    UISupport.setHourglassCursor();
    UrlWsdlLoader loader=new UrlWsdlLoader(file.toString(),this);
    loader.setUseWorker(false);
    projectDocument=SoapuiProjectDocumentConfig.Factory.parse(loader.load());
    this.encrypted=checkForEncodedData(projectDocument.getSoapuiProject());
    setConfig(projectDocument.getSoapuiProject());
    if (!getSettings().getBoolean(WsdlSettings.CACHE_WSDLS)) {
      removeDefinitionCaches(projectDocument);
    }
    log.info("Loaded project from [" + file.toString() + "]");
    List<InterfaceConfig> interfaceConfigs=getConfig().getInterfaceList();
    for (    InterfaceConfig config : interfaceConfigs) {
      AbstractInterface<?> iface=InterfaceFactoryRegistry.build(this,config);
      interfaces.add(iface);
    }
    List<TestSuiteConfig> testSuiteConfigs=getConfig().getTestSuiteList();
    for (    TestSuiteConfig config : testSuiteConfigs) {
      testSuites.add(new WsdlTestSuite(this,config));
    }
    List<MockServiceConfig> mockServiceConfigs=getConfig().getMockServiceList();
    for (    MockServiceConfig config : mockServiceConfigs) {
      mockServices.add(new WsdlMockService(this,config));
    }
    if (!getConfig().isSetWssContainer())     getConfig().addNewWssContainer();
    wssContainer=new DefaultWssContainer(this,getConfig().getWssContainer());
    endpointStrategy.init(this);
    if (!getConfig().isSetProperties())     getConfig().addNewProperties();
    setPropertiesConfig(getConfig().getProperties());
    afterLoad();
  }
 catch (  Exception e) {
    if (e instanceof XmlException) {
      XmlException xe=(XmlException)e;
      XmlError error=xe.getError();
      if (error != null)       System.err.println("Error at line " + error.getLine() + ", column "+ error.getColumn());
    }
    e.printStackTrace();
    throw new SoapUIException("Failed to load project from file [" + file.toString() + "]",e);
  }
 finally {
    UISupport.resetCursor();
  }
}
