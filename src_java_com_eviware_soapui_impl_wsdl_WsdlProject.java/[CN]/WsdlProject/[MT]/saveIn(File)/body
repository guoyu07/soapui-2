{
  long size=0;
  beforeSave();
  SoapuiProjectDocumentConfig projectDocument=(SoapuiProjectDocumentConfig)this.projectDocument.copy();
  if (!getSettings().getBoolean(WsdlSettings.CACHE_WSDLS)) {
    removeDefinitionCaches(projectDocument);
  }
  XmlBeansSettingsImpl tempSettings=new XmlBeansSettingsImpl(this,null,projectDocument.getSoapuiProject().getSettings());
  tempSettings.clearSetting(ProjectSettings.PROJECT_ROOT);
  String passwordForEncryption=getSettings().getString(ProjectSettings.SHADOW_PASSWORD,null);
  if (projectDocument.getSoapuiProject().getEncryptedContent() == null) {
    if (passwordForEncryption != null) {
      if (passwordForEncryption.length() > 1) {
        try {
          String data=getConfig().xmlText();
          byte[] encrypted=OpenSSL.encrypt("des3",passwordForEncryption.toCharArray(),data.getBytes());
          projectDocument.getSoapuiProject().setEncryptedContent(encrypted);
          projectDocument.getSoapuiProject().setInterfaceArray(null);
          projectDocument.getSoapuiProject().setTestSuiteArray(null);
          projectDocument.getSoapuiProject().setMockServiceArray(null);
          projectDocument.getSoapuiProject().unsetWssContainer();
          projectDocument.getSoapuiProject().unsetSettings();
          projectDocument.getSoapuiProject().unsetProperties();
        }
 catch (        GeneralSecurityException e) {
          UISupport.showErrorMessage("Encryption Error");
        }
      }
 else {
        projectDocument.getSoapuiProject().setEncryptedContent(null);
      }
    }
  }
  XmlOptions options=new XmlOptions();
  if (SoapUI.getSettings().getBoolean(WsdlSettings.PRETTY_PRINT_PROJECT_FILES))   options.setSavePrettyPrint();
  projectDocument.getSoapuiProject().setSoapuiVersion(SoapUI.SOAPUI_VERSION);
  try {
    File tempFile=File.createTempFile("project-temp-",".xml",projectFile.getParentFile());
    FileOutputStream tempOut=new FileOutputStream(tempFile);
    projectDocument.save(tempOut,options);
    tempOut.close();
    if (getSettings().getBoolean(UISettings.LINEBREAK)) {
      normalizeLineBreak(projectFile,tempFile);
    }
 else {
      FileOutputStream projectOut=new FileOutputStream(projectFile);
      projectDocument.save(projectOut,options);
      projectOut.close();
      if (!tempFile.delete()) {
        SoapUI.getErrorLog().warn("Failed to delete temporary project file; " + tempFile.getAbsolutePath());
        tempFile.deleteOnExit();
      }
    }
    size=projectFile.length();
  }
 catch (  Throwable t) {
    SoapUI.logError(t);
    UISupport.showErrorMessage("Failed to save project [" + getName() + "]: "+ t.toString());
    return false;
  }
  lastModified=projectFile.lastModified();
  log.info("Saved project [" + getName() + "] to ["+ projectFile.getAbsolutePath()+ " - "+ size+ " bytes");
  setProjectRoot(getPath());
  return true;
}
