{
  if (dialog == null)   buildDialog();
  dialog.setIntValue(SettingsForm.THREAD_STARTUP_DELAY,loadTest.getStartDelay());
  dialog.setBooleanValue(SettingsForm.RESET_STATISTICS,loadTest.getResetStatisticsOnThreadCountChange());
  dialog.setBooleanValue(SettingsForm.CALC_TPS,loadTest.getCalculateTPSOnTimePassed());
  dialog.setIntValue(SettingsForm.SAMPLE_INTERVAL,(int)loadTest.getSampleInterval());
  dialog.setBooleanValue(SettingsForm.DISABLE_HISTORY,loadTest.getHistoryLimit() == 0);
  dialog.setIntValue(SettingsForm.MAX_ASSERTIONS,(int)loadTest.getMaxAssertionErrors());
  dialog.setBooleanValue(SettingsForm.CANCEL_RUNNING,loadTest.getCancelOnReachedLimit());
  dialog.setIntValue(SettingsForm.STRATEGY_INTERVAL,(int)loadTest.getStrategyInterval());
  dialog.setBooleanValue(SettingsForm.CANCEL_EXCESSIVE,loadTest.getCancelExcessiveThreads());
  dialog.setBooleanValue(SettingsForm.TESTSTEP_STATISTICS,loadTest.getUpdateStatisticsPerTestStep());
  Settings settings=loadTest.getSettings();
  dialog.setBooleanValue(SettingsForm.INCLUDE_REQUEST,settings.getBoolean(HttpSettings.INCLUDE_REQUEST_IN_TIME_TAKEN));
  dialog.setBooleanValue(SettingsForm.INCLUDE_RESPONSE,settings.getBoolean(HttpSettings.INCLUDE_RESPONSE_IN_TIME_TAKEN));
  dialog.setBooleanValue(SettingsForm.CLOSE_CONNECTIONS,settings.getBoolean(HttpSettings.CLOSE_CONNECTIONS));
  dialog.setValue(LogForm.LOG_FOLDER,loadTest.getStatisticsLogFolder());
  dialog.setIntValue(LogForm.LOG_INTERVAL,(int)loadTest.getStatisticsLogInterval());
  dialog.setBooleanValue(LogForm.LOG_ON_THREADCOUNT_CHANGE,loadTest.getLogStatisticsOnThreadChange());
  if (dialog.show() && !loadTest.isRunning()) {
    try {
      loadTest.setStartDelay(dialog.getIntValue(SettingsForm.THREAD_STARTUP_DELAY,loadTest.getStartDelay()));
      loadTest.setResetStatisticsOnThreadCountChange(dialog.getBooleanValue(SettingsForm.RESET_STATISTICS));
      loadTest.setCalculateTPSOnTimePassed(dialog.getBooleanValue(SettingsForm.CALC_TPS));
      loadTest.setSampleInterval(dialog.getIntValue(SettingsForm.SAMPLE_INTERVAL,(int)loadTest.getSampleInterval()));
      loadTest.setHistoryLimit(dialog.getBooleanValue(SettingsForm.DISABLE_HISTORY) ? 0 : -1);
      loadTest.setMaxAssertionErrors(dialog.getIntValue(SettingsForm.MAX_ASSERTIONS,1000));
      loadTest.setCancelOnReachedLimit(dialog.getBooleanValue(SettingsForm.CANCEL_RUNNING));
      loadTest.setStrategyInterval(dialog.getIntValue(SettingsForm.STRATEGY_INTERVAL,WsdlLoadTest.DEFAULT_STRATEGY_INTERVAL));
      loadTest.setCancelExcessiveThreads(dialog.getBooleanValue(SettingsForm.CANCEL_EXCESSIVE));
      loadTest.setUpdateStatisticsPerTestStep(dialog.getBooleanValue(SettingsForm.TESTSTEP_STATISTICS));
      settings.setBoolean(HttpSettings.INCLUDE_REQUEST_IN_TIME_TAKEN,dialog.getBooleanValue(SettingsForm.INCLUDE_REQUEST));
      settings.setBoolean(HttpSettings.INCLUDE_RESPONSE_IN_TIME_TAKEN,dialog.getBooleanValue(SettingsForm.INCLUDE_RESPONSE));
      settings.setBoolean(HttpSettings.CLOSE_CONNECTIONS,dialog.getBooleanValue(SettingsForm.CLOSE_CONNECTIONS));
      loadTest.setLogStatisticsOnThreadChange(dialog.getBooleanValue(LogForm.LOG_ON_THREADCOUNT_CHANGE));
      loadTest.setStatisticsLogFolder(dialog.getValue(LogForm.LOG_FOLDER));
      loadTest.setStatisticsLogInterval(dialog.getIntValue(LogForm.LOG_INTERVAL,(int)loadTest.getStatisticsLogInterval()));
    }
 catch (    NumberFormatException ex) {
      ex.printStackTrace();
    }
  }
}
