{
  if (project.getInterfaceCount() == 0) {
    UISupport.showErrorMessage("Missing interfaces to monitor");
    return;
  }
  if (dialog == null) {
    dialog=ADialogBuilder.buildDialog(LaunchForm.class);
  }
  Settings settings=project.getSettings();
  StringList endpoints=new StringList();
  endpoints.add(null);
  for (  Interface iface : project.getInterfaceList()) {
    if (iface.getInterfaceType().equals(WsdlInterfaceFactory.WSDL_TYPE))     endpoints.addAll(iface.getEndpoints());
  }
  dialog.setIntValue(LaunchForm.PORT,(int)settings.getLong(LaunchForm.PORT,8081));
  dialog.setOptions(LaunchForm.REQUEST_WSS,StringUtils.merge(project.getWssContainer().getIncomingWssNames(),"<none>"));
  dialog.setOptions(LaunchForm.RESPONSE_WSS,StringUtils.merge(project.getWssContainer().getIncomingWssNames(),"<none>"));
  dialog.setValue(LaunchForm.SETSSLMON,settings.getString(LaunchForm.SETSSLMON,"").length() > 0 ? settings.getString(LaunchForm.SETSSLMON,"") : HTTPS_PROTOCOL);
  dialog.setOptions(LaunchForm.SSLORHTTP,new String[]{HTTP_TUNNEL,HTTP_PROXY});
  dialog.setValue(LaunchForm.SSLTUNNEL_KEYSTORE,settings.getString(LaunchForm.SSLTUNNEL_KEYSTORE,""));
  dialog.setValue(LaunchForm.SSLTUNNEL_PASSWORD,settings.getString(LaunchForm.SSLTUNNEL_PASSWORD,""));
  dialog.setValue(LaunchForm.SSLTUNNEL_KEYPASSWORD,settings.getString(LaunchForm.SSLTUNNEL_KEYPASSWORD,""));
  dialog.setValue(LaunchForm.SSLTUNNEL_TRUSTSTORE,settings.getString(LaunchForm.SSLTUNNEL_TRUSTSTORE,""));
  dialog.setValue(LaunchForm.SSLTUNNEL_TRUSTSTORE_PASSWORD,settings.getString(LaunchForm.SSLTUNNEL_TRUSTSTORE_PASSWORD,""));
  dialog.setBooleanValue(LaunchForm.SSLTUNNEL_REUSESTATE,settings.getBoolean(LaunchForm.SSLTUNNEL_REUSESTATE));
  dialog.setValue(LaunchForm.SSLTUNNEL_KEYSTOREPATH,settings.getString(LaunchForm.SSLTUNNEL_KEYSTOREPATH,""));
  dialog.setValue(LaunchForm.SSLTUNNEL_KEYSTOREPASSWORD,settings.getString(LaunchForm.SSLTUNNEL_KEYSTOREPASSWORD,""));
  XFormField sslOrHttp=dialog.getFormField(LaunchForm.SSLORHTTP);
  sslOrHttp.setValue(HTTP_PROXY);
  setDialogState(HTTP_PROXY);
  sslOrHttp.addFormFieldListener(new XFormFieldListener(){
    public void valueChanged(    XFormField sourceField,    String newValue,    String oldValue){
      setDialogState(newValue);
    }
  }
);
  if (dialog.show()) {
    int listenPort=dialog.getIntValue(LaunchForm.PORT,8080);
    settings.setLong(LaunchForm.PORT,listenPort);
    settings.setString(LaunchForm.SETSSLMON,dialog.getValue(LaunchForm.SETSSLMON));
    settings.setString(LaunchForm.SSLTUNNEL_KEYSTORE,dialog.getValue(LaunchForm.SSLTUNNEL_KEYSTORE));
    settings.setString(LaunchForm.SSLTUNNEL_PASSWORD,dialog.getValue(LaunchForm.SSLTUNNEL_PASSWORD));
    settings.setString(LaunchForm.SSLTUNNEL_KEYPASSWORD,dialog.getValue(LaunchForm.SSLTUNNEL_KEYPASSWORD));
    settings.setString(LaunchForm.SSLTUNNEL_TRUSTSTORE,dialog.getValue(LaunchForm.SSLTUNNEL_TRUSTSTORE));
    settings.setString(LaunchForm.SSLTUNNEL_TRUSTSTORE_PASSWORD,dialog.getValue(LaunchForm.SSLTUNNEL_TRUSTSTORE_PASSWORD));
    settings.setString(LaunchForm.SSLTUNNEL_REUSESTATE,dialog.getValue(LaunchForm.SSLTUNNEL_REUSESTATE));
    settings.setString(LaunchForm.SSLTUNNEL_KEYSTOREPATH,dialog.getValue(LaunchForm.SSLTUNNEL_KEYSTOREPATH));
    settings.setString(LaunchForm.SSLTUNNEL_KEYSTOREPASSWORD,dialog.getValue(LaunchForm.SSLTUNNEL_KEYSTOREPASSWORD));
    if (HTTP_PROXY.equals(dialog.getValue(LaunchForm.SSLORHTTP))) {
      openSoapMonitor(project,listenPort,dialog.getValue(LaunchForm.REQUEST_WSS),dialog.getValue(LaunchForm.RESPONSE_WSS),dialog.getBooleanValue(LaunchForm.SETASPROXY),null);
    }
 else {
      openSoapMonitor(project,listenPort,dialog.getValue(LaunchForm.REQUEST_WSS),dialog.getValue(LaunchForm.RESPONSE_WSS),dialog.getBooleanValue(LaunchForm.SETASPROXY),dialog.getValue(LaunchForm.SETSSLMON));
    }
  }
}
