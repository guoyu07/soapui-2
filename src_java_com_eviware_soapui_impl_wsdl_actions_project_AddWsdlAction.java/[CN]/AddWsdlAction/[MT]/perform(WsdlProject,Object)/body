{
  if (dialog == null) {
    dialog=ADialogBuilder.buildDialog(Form.class);
    dialog.setValue(Form.CREATEREQUEST,Boolean.toString(true));
    dialog.getFormField(Form.INITIALWSDL).addFormFieldListener(new XFormFieldListener(){
      public void valueChanged(      XFormField sourceField,      String newValue,      String oldValue){
        String value=newValue.toLowerCase().trim();
        dialog.getFormField(Form.CREATEREQUEST).setEnabled(value.length() > 0);
        dialog.getFormField(Form.GENERATEMOCKSERVICE).setEnabled(newValue.trim().length() > 0);
        dialog.getFormField(Form.GENERATETESTSUITE).setEnabled(newValue.trim().length() > 0);
      }
    }
);
  }
 else {
    dialog.setValue(Form.INITIALWSDL,"");
    dialog.getFormField(Form.CREATEREQUEST).setEnabled(false);
    dialog.getFormField(Form.GENERATEMOCKSERVICE).setEnabled(false);
    dialog.getFormField(Form.GENERATETESTSUITE).setEnabled(false);
  }
  while (dialog.show()) {
    try {
      String url=dialog.getValue(Form.INITIALWSDL).trim();
      if (StringUtils.hasContent(url)) {
        String expUrl=PathUtils.expandPath(url,project);
        if (new File(expUrl).exists())         url=new File(expUrl).toURI().toURL().toString();
        WsdlInterface[] results=importWsdl(project,expUrl);
        if (!url.equals(expUrl)) {
          for (          WsdlInterface iface : results) {
            iface.setDefinition(url,false);
          }
        }
        break;
      }
    }
 catch (    InvalidDefinitionException ex) {
      ex.show();
    }
catch (    Exception ex) {
      UISupport.showErrorMessage(ex);
    }
  }
}
