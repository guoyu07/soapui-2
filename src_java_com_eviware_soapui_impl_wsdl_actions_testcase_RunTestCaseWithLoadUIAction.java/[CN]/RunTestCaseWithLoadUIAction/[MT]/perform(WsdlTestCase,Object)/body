{
  if (!StartLoadUI.testCajoConnection()) {
    if (UISupport.confirm(StartLoadUI.LOADUI_LAUNCH_QUESTION,StartLoadUI.LOADUI_LAUNCH_TITLE)) {
      StartLoadUI.launchLoadUI();
    }
    return;
  }
  final String soapUITestCase=testCase.getName();
  final String soapUITestSuite=testCase.getTestSuite().getName();
  final String soapUIProjectPath=testCase.getTestSuite().getProject().getPath();
  if (dialog == null)   dialog=ADialogBuilder.buildDialog(Form.class);
  dialog.getFormField(Form.PROJECT).addFormFieldListener(new XFormFieldListener(){
    public void valueChanged(    XFormField sourceField,    String newValue,    String oldValue){
      dialog.setOptions(Form.TESTCASE,IntegrationUtils.getAvailableTestCases(newValue));
      if (dialog.getValue(Form.TESTCASE).equals(IntegrationUtils.CREATE_ON_PROJECT_LEVEL)) {
        dialog.setOptions(Form.SOAPUIRUNNER,IntegrationUtils.getAvailableSamplers(newValue,IntegrationUtils.CREATE_ON_PROJECT_LEVEL));
      }
    }
  }
);
  dialog.getFormField(Form.TESTCASE).addFormFieldListener(new XFormFieldListener(){
    public void valueChanged(    XFormField sourceField,    String newValue,    String oldValue){
      if (newValue.equals(IntegrationUtils.CREATE_NEW_OPTION)) {
        dialog.setOptions(Form.SOAPUIRUNNER,new String[]{IntegrationUtils.CREATE_NEW_OPTION});
      }
 else {
        dialog.setOptions(Form.SOAPUIRUNNER,IntegrationUtils.getAvailableSamplers(dialog.getValue(Form.PROJECT),newValue));
      }
    }
  }
);
  dialog.setOptions(Form.PROJECT,IntegrationUtils.getAvailableProjects());
  if (!StringUtils.isNullOrEmpty(IntegrationUtils.getOpenedProjectName())) {
    dialog.setValue(Form.PROJECT,IntegrationUtils.getOpenedProjectName());
  }
 else {
    dialog.setValue(Form.PROJECT,IntegrationUtils.CREATE_NEW_OPTION);
  }
  dialog.setOptions(Form.TESTCASE,IntegrationUtils.getAvailableTestCases(dialog.getValue(Form.PROJECT)));
  if (!dialog.getValue(Form.PROJECT).equals(IntegrationUtils.getOpenedProjectName())) {
    dialog.setValue(Form.TESTCASE,IntegrationUtils.CREATE_ON_PROJECT_LEVEL);
  }
  dialog.setOptions(Form.SOAPUIRUNNER,IntegrationUtils.getAvailableSamplers(dialog.getValue(Form.PROJECT),dialog.getValue(Form.TESTCASE)));
  dialog.setValue(Form.SOAPUIRUNNER,IntegrationUtils.CREATE_NEW_OPTION);
  if (dialog.show()) {
    String targetProjectString=dialog.getValue(Form.PROJECT);
    String targetTestCaseName=!dialog.getValue(Form.TESTCASE).equals(IntegrationUtils.CREATE_ON_PROJECT_LEVEL) ? dialog.getValue(Form.TESTCASE) : null;
    String targetSamplerName=dialog.getValue(Form.SOAPUIRUNNER);
    if (dialog.getReturnValue() == XFormDialog.OK_OPTION) {
      String openedProjectName=IntegrationUtils.getOpenedProjectName();
      if (!StringUtils.isNullOrEmpty(openedProjectName) && !targetProjectString.equals(openedProjectName))       if (UISupport.confirm("Close currently open [" + IntegrationUtils.getOpenedProjectName() + "] loadUI project","Close loadUI project")) {
        IntegrationUtils.closeOpenedLoadUIProject();
      }
 else {
        return;
      }
      HashMap<String,String> createdSamplerSettings=null;
      try {
        createdSamplerSettings=IntegrationUtils.createSoapUISampler(soapUIProjectPath,soapUITestSuite,soapUITestCase,targetProjectString,targetTestCaseName,targetSamplerName);
      }
 catch (      IOException e) {
        UISupport.showInfoMessage("Error while opening selected loadUI project");
        return;
      }
      if (createdSamplerSettings != null) {
        String creationInfo="SoapUI Runner created under project: '" + createdSamplerSettings.get(ContextMapping.LOADUI_PROJECT_NAME) + "'";
        if (targetTestCaseName != null && !targetTestCaseName.equals(IntegrationUtils.CREATE_ON_PROJECT_LEVEL)) {
          creationInfo+=", TestCase: '" + createdSamplerSettings.get(ContextMapping.LOADUI_TEST_CASE_NAME) + "'";
        }
        UISupport.showInfoMessage(creationInfo,IntegrationUtils.LOADU_INFO_DIALOG_TITLE);
      }
    }
  }
}
