{
  HttpServletRequest httpRequest=(HttpServletRequest)request;
  HttpServletResponse httpResponse=(HttpServletResponse)response;
  if (capturedData == null) {
    capturedData=new JProxyServletWsdlMonitorMessageExchange(project);
    capturedData.setRequestHost(httpRequest.getServerName());
    capturedData.setTargetHost(httpRequest.getRemoteHost());
    capturedData.setRequestHeader(httpRequest);
  }
  if ("CONNECT".equalsIgnoreCase(httpRequest.getMethod())) {
    handleConnect(httpRequest,httpResponse);
  }
 else {
    CaptureInputStream capture=new CaptureInputStream(httpRequest.getInputStream());
    Continuation continuation=ContinuationSupport.getContinuation(httpRequest,httpRequest);
    if (!continuation.isPending()) {
      String uri=httpRequest.getRequestURI();
      if (httpRequest.getQueryString() != null)       uri+="?" + httpRequest.getQueryString();
      SoapUIHttpExchange exchange=new SoapUIHttpExchange(monitor,httpRequest,httpResponse,capture,capturedData);
      exchange.setScheme(HttpSchemes.HTTPS.equals(request.getScheme()) ? HttpSchemes.HTTPS_BUFFER : HttpSchemes.HTTP_BUFFER);
      exchange.setMethod(httpRequest.getMethod());
      exchange.setURI(uri);
      capturedData.setTargetURL(httpRequest.getRequestURL().toString());
      exchange.setVersion(httpRequest.getProtocol());
      InetSocketAddress address=new InetSocketAddress(httpRequest.getServerName(),httpRequest.getServerPort());
      exchange.setAddress(address);
      System.err.println("PROXY TO http://" + address.getHostName() + ":"+ address.getPort()+ uri);
      String connectionHeader=httpRequest.getHeader("Connection");
      if (connectionHeader != null) {
        connectionHeader=connectionHeader.toLowerCase();
        if (connectionHeader.indexOf("keep-alive") < 0 && connectionHeader.indexOf("close") < 0)         connectionHeader=null;
      }
      boolean xForwardedFor=false;
      boolean hasContent=false;
      @SuppressWarnings("unused") long contentLength=-1;
      Enumeration headerNames=httpRequest.getHeaderNames();
      while (headerNames.hasMoreElements()) {
        String hdr=(String)headerNames.nextElement();
        String lhdr=hdr.toLowerCase();
        if (connectionHeader != null && connectionHeader.indexOf(lhdr) >= 0)         continue;
        if ("content-type".equals(lhdr))         hasContent=true;
        if ("content-length".equals(lhdr))         contentLength=request.getContentLength();
        Enumeration vals=httpRequest.getHeaders(hdr);
        while (vals.hasMoreElements()) {
          String val=(String)vals.nextElement();
          if (val != null) {
            exchange.setRequestHeader(lhdr,val);
            xForwardedFor|="X-Forwarded-For".equalsIgnoreCase(hdr);
          }
        }
      }
      exchange.setRequestHeader("Via","SoapUI Monitor");
      if (!xForwardedFor)       exchange.addRequestHeader("X-Forwarded-For",request.getRemoteAddr());
      if (hasContent) {
        exchange.setRequestContentSource(capture);
      }
      client.send(exchange);
      continuation.suspend(3000);
    }
  }
  if (!capturedData.isStopCapture()) {
    monitor.addMessageExchange(capturedData);
    System.err.println("Killed " + capturedData.toString());
    capturedData=null;
  }
}
