{
  JdbcRequestTestStep testStep=request.getTestStep();
  getDatabaseConnection();
  if (testStep.isStoredProcedure()) {
    String sql=PropertyExpander.expandProperties(context,testStep.getQuery());
    if (!sql.startsWith("{call ") && !sql.endsWith("}"))     sql="{call " + sql + "}";
    statement=connection.prepareCall(sql,ResultSet.TYPE_FORWARD_ONLY,ResultSet.CONCUR_READ_ONLY);
  }
 else {
    List<TestProperty> props=testStep.getPropertyList();
    String sql=PropertyExpander.expandProperties(context,testStep.getQuery());
    NamedParameterStatement p=new NamedParameterStatement(connection,sql);
    for (    TestProperty testProperty : props) {
      String value=PropertyExpander.expandProperties(context,testProperty.getValue());
      p.setString(testProperty.getName(),value);
    }
    statement=p.getStatement();
  }
  try {
    if (!StringUtils.isNullOrEmpty(testStep.getQueryTimeout())) {
      String queryTimeout=PropertyExpander.expandProperties(testStep,testStep.getQueryTimeout());
      statement.setQueryTimeout(Integer.parseInt(queryTimeout));
    }
  }
 catch (  NumberFormatException e) {
    UISupport.showErrorMessage("Problem setting timeout: " + e.getMessage());
  }
  try {
    if (!StringUtils.isNullOrEmpty(testStep.getMaxRows())) {
      String maxRows=PropertyExpander.expandProperties(testStep,testStep.getMaxRows());
      statement.setMaxRows(Integer.parseInt(maxRows));
    }
  }
 catch (  NumberFormatException e) {
    UISupport.showErrorMessage("Problem setting maxRows: " + e.getMessage());
  }
  try {
    if (!StringUtils.isNullOrEmpty(testStep.getFetchSize())) {
      String fetchSize=PropertyExpander.expandProperties(testStep,testStep.getFetchSize());
      statement.setFetchSize(Integer.parseInt(fetchSize));
    }
  }
 catch (  NumberFormatException e) {
    UISupport.showErrorMessage("Problem setting fetchSize: " + e.getMessage());
  }
}
