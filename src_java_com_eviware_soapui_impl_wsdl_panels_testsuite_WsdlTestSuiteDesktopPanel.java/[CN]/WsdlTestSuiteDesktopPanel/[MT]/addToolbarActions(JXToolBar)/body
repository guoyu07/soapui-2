{
  toolbar.add(UISupport.createToolbarButton(runAction));
  toolbar.add(UISupport.createToolbarButton(cancelAction));
  toolbar.addRelatedGap();
  ButtonGroup buttonGroup=new ButtonGroup();
  sequentialButton=new JToggleButton(UISupport.createImageIcon("/sequential.gif"),true);
  sequentialButton.setToolTipText("The selected TestCases are run in sequence");
  sequentialButton.setPreferredSize(UISupport.getPreferredButtonSize());
  sequentialButton.setSelected(getModelItem().getRunType() == TestSuiteRunType.SEQUENTIAL);
  sequentialButton.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      getModelItem().setRunType(TestSuiteRunType.SEQUENTIAL);
    }
  }
);
  buttonGroup.add(sequentialButton);
  parallellButton=new JToggleButton(UISupport.createImageIcon("/parallell.gif"));
  parallellButton.setToolTipText("The selected TestCases are run in parallel");
  parallellButton.setPreferredSize(UISupport.getPreferredButtonSize());
  parallellButton.setSelected(getModelItem().getRunType() == TestSuiteRunType.PARALLEL);
  parallellButton.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      getModelItem().setRunType(TestSuiteRunType.PARALLEL);
    }
  }
);
  buttonGroup.add(parallellButton);
  toolbar.addUnrelatedGap();
  toolbar.add(sequentialButton);
  toolbar.addRelatedGap();
  toolbar.add(parallellButton);
  generateLoadUITestsButton=UISupport.createToolbarButton(SwingActionDelegate.createDelegate(GenerateLoadUITestsAction.SOAPUI_ACTION_ID,getModelItem(),null,"/runTestSuiteWithLoadUI.png"));
  toolbar.addUnrelatedGap();
  toolbar.add(generateLoadUITestsButton);
}
