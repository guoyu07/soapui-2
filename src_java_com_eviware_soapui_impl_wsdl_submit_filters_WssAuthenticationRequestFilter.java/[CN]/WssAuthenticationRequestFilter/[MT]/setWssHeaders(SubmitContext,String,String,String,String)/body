{
  Document doc=getWssDocument(context);
  if (StringUtils.hasContent(pwType) && !pwType.equals(WsdlRequest.PW_TYPE_NONE) && StringUtils.hasContent(username)&& StringUtils.hasContent(password)) {
    Element elm=(Element)context.getProperty(WSS_USERNAME_TOKEN);
    if (elm != null) {
      Element parentNode=(Element)elm.getParentNode();
      parentNode.removeChild(elm);
    }
    context.setProperty(WSS_USERNAME_TOKEN,setWssUsernameToken(username,password,pwType,doc));
  }
 else   if (pwType != null && context.getProperty(WSS_USERNAME_TOKEN) != null) {
    Element elm=(Element)context.getProperty(WSS_USERNAME_TOKEN);
    context.removeProperty(WSS_USERNAME_TOKEN);
    Element parentNode=(Element)elm.getParentNode();
    parentNode.removeChild(elm);
    if (XmlUtils.getChildElements(parentNode).getLength() == 0)     parentNode.getParentNode().removeChild(parentNode);
  }
  if (StringUtils.hasContent(wsTimestamp)) {
    Element elm=(Element)context.getProperty(WSS_TIMESTAMP_TOKEN);
    if (elm != null) {
      Element parentNode=(Element)elm.getParentNode();
      parentNode.removeChild(elm);
    }
    context.setProperty(WSS_TIMESTAMP_TOKEN,setWsTimestampToken(wsTimestamp,doc));
  }
 else   if (wsTimestamp != null && context.getProperty(WSS_TIMESTAMP_TOKEN) != null) {
    Element elm=(Element)context.getProperty(WSS_TIMESTAMP_TOKEN);
    context.removeProperty(WSS_TIMESTAMP_TOKEN);
    Element parentNode=(Element)elm.getParentNode();
    parentNode.removeChild(elm);
    if (XmlUtils.getChildElements(parentNode).getLength() == 0)     parentNode.getParentNode().removeChild(parentNode);
  }
  StringWriter writer=new StringWriter();
  XmlUtils.serializePretty(doc,writer);
  context.setProperty(BaseHttpRequestTransport.REQUEST_CONTENT,writer.toString());
}
