{
  try {
    if (!httpMethod.isFailed()) {
      rawResponseData.write(String.valueOf(httpMethod.getStatusLine()).getBytes());
      rawResponseData.write("\r\n".getBytes());
    }
    rawRequestData.write((method + " " + String.valueOf(url)+ " "+ version+ "\r\n").getBytes());
    requestHeaders=new StringToStringMap();
    Header[] headers=httpMethod.getRequestHeaders();
    for (    Header header : headers) {
      requestHeaders.put(header.getName(),header.getValue());
      rawRequestData.write(header.toExternalForm().getBytes());
    }
    if (!httpMethod.isFailed()) {
      responseHeaders=new StringToStringMap();
      headers=httpMethod.getResponseHeaders();
      for (      Header header : headers) {
        responseHeaders.put(header.getName(),header.getValue());
        rawResponseData.write(header.toExternalForm().getBytes());
      }
      responseHeaders.put("#status#",String.valueOf(httpMethod.getStatusLine()));
    }
    if (httpMethod.getRequestEntity() != null) {
      rawRequestData.write("\r\n".getBytes());
      if (httpMethod.getRequestEntity().isRepeatable())       httpMethod.getRequestEntity().writeRequest(rawRequestData);
 else       rawRequestData.write("<request data not available>".getBytes());
    }
    if (!httpMethod.isFailed()) {
      rawResponseData.write("\r\n".getBytes());
      rawResponseData.write(httpMethod.getResponseBody());
    }
  }
 catch (  Throwable e) {
    e.printStackTrace();
  }
}
