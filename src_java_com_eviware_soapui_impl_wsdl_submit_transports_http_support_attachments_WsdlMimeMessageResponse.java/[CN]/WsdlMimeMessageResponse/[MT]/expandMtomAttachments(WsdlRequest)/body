{
  try {
    XmlObject xmlObject=XmlObject.Factory.parse(getContentAsString());
    XmlObject[] includes=xmlObject.selectPath("declare namespace xop='http://www.w3.org/2004/08/xop/include'; //xop:Include");
    for (    XmlObject include : includes) {
      Element elm=(Element)include.getDomNode();
      String href=elm.getAttribute("href");
      Attachment attachment=getMmSupport().getAttachmentWithContentId("<" + href.substring(4) + ">");
      if (attachment != null) {
        ByteArrayOutputStream data=Tools.readAll(attachment.getInputStream(),0);
        byte[] byteArray=data.toByteArray();
        XmlCursor cursor=include.newCursor();
        cursor.toParent();
        XmlObject parentXmlObject=cursor.getObject();
        cursor.dispose();
        SchemaType schemaType=parentXmlObject.schemaType();
        Node parentNode=elm.getParentNode();
        if (schemaType.isNoType()) {
          SchemaTypeSystem typeSystem=wsdlRequest.getOperation().getInterface().getWsdlContext().getSchemaTypeSystem();
          SchemaGlobalElement schemaElement=typeSystem.findElement(new QName(parentNode.getNamespaceURI(),parentNode.getLocalName()));
          if (schemaElement != null) {
            schemaType=schemaElement.getType();
          }
        }
        String txt=null;
        if (SchemaUtils.isInstanceOf(schemaType,XmlHexBinary.type)) {
          txt=new String(Hex.encodeHex(byteArray));
        }
 else {
          txt=new String(Base64.encodeBase64(byteArray));
        }
        parentNode.replaceChild(elm.getOwnerDocument().createTextNode(txt),elm);
      }
    }
    getMmSupport().setResponseContent(xmlObject.toString());
  }
 catch (  Exception e) {
    SoapUI.logError(e);
  }
}
