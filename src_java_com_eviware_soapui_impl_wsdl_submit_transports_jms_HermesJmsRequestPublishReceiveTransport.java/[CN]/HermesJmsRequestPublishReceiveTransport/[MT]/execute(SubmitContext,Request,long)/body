{
  TopicConnectionFactory topcConnectionFactory=null;
  TopicConnection topicConnection=null;
  TopicSession topicSession=null;
  ConnectionFactory connectionFactory=null;
  Connection connection=null;
  Session session=null;
  try {
    String topicNamePublish=null;
    String queueNameReceive=null;
    String sessionName=null;
    String[] parameters=request.getEndpoint().substring(request.getEndpoint().indexOf("://") + 3).split("/");
    if (parameters.length == 3) {
      sessionName=PropertyExpander.expandProperties(submitContext,parameters[0]);
      topicNamePublish=PropertyExpander.expandProperties(submitContext,parameters[1]).replaceFirst("topic_","");
      queueNameReceive=PropertyExpander.expandProperties(submitContext,parameters[2]).replaceFirst("queue_","");
    }
 else     throw new Exception("bad jms alias!!!!!");
    submitContext.setProperty(HERMES_SESSION_NAME,sessionName);
    Hermes hermes=getHermes(sessionName,request);
    topcConnectionFactory=(TopicConnectionFactory)hermes.getConnectionFactory();
    connectionFactory=(ConnectionFactory)hermes.getConnectionFactory();
    topicConnection=topcConnectionFactory.createTopicConnection();
    topicConnection.start();
    connection=connectionFactory.createConnection();
    connection.start();
    topicSession=topicConnection.createTopicSession(false,Session.AUTO_ACKNOWLEDGE);
    session=connection.createSession(false,Session.AUTO_ACKNOWLEDGE);
    Topic topicPublish=(Topic)hermes.getDestination(topicNamePublish,Domain.TOPIC);
    Queue queueReceive=(Queue)hermes.getDestination(queueNameReceive,Domain.QUEUE);
    TextMessage textMessagePublish=messagePublish(submitContext,request,topicSession,hermes,topicPublish);
    MessageConsumer messageConsumer=session.createConsumer(queueReceive);
    return makeResponse(submitContext,request,timeStarted,textMessagePublish,messageConsumer);
  }
 catch (  JMSException jmse) {
    return errorResponse(submitContext,request,timeStarted,jmse);
  }
catch (  Throwable t) {
    SoapUI.logError(t);
  }
 finally {
    closeSessionAndConnection(topicConnection,topicSession);
    closeSessionAndConnection(connection,session);
  }
  return null;
}
