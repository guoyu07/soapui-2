{
  TopicConnectionFactory connectionFactory=null;
  TopicConnection connection=null;
  TopicSession session=null;
  JMSResponse response=null;
  TopicSubscriber topicDurableSubsriber=null;
  try {
    String topicNamePublish=null;
    String topicNameSubscribe=null;
    String sessionName=null;
    String[] parameters=request.getEndpoint().substring(request.getEndpoint().indexOf("://") + 3).split("/");
    if (parameters.length == 3) {
      sessionName=PropertyExpander.expandProperties(submitContext,parameters[0]);
      topicNamePublish=PropertyExpander.expandProperties(submitContext,parameters[1]).replaceFirst("topic_","");
      topicNameSubscribe=PropertyExpander.expandProperties(submitContext,parameters[2]).replaceFirst("topic_","");
    }
 else     throw new Exception("bad jms alias!!!!!");
    submitContext.setProperty(HERMES_SESSION_NAME,sessionName);
    Hermes hermes=getHermes(sessionName,request);
    connectionFactory=(TopicConnectionFactory)hermes.getConnectionFactory();
    connection=connectionFactory.createTopicConnection();
    connection.setClientID("" + (Math.random() * 1000));
    connection.start();
    session=connection.createTopicSession(false,Session.AUTO_ACKNOWLEDGE);
    Topic topicPublish=(Topic)hermes.getDestination(topicNamePublish,Domain.TOPIC);
    Topic topicSubscribe=(Topic)hermes.getDestination(topicNameSubscribe,Domain.TOPIC);
    TopicPublisher messageProducer=session.createPublisher(topicPublish);
    TextMessage textMessagePublish=session.createTextMessage();
    String messageBody=PropertyExpander.expandProperties(submitContext,request.getRequestContent());
    textMessagePublish.setText(messageBody);
    JMSHeader jmsHeader=new JMSHeader();
    jmsHeader.setMessageHeaders(textMessagePublish,request,hermes,submitContext);
    JMSHeader.setMessageProperties(textMessagePublish,request,hermes,submitContext);
    topicDurableSubsriber=session.createDurableSubscriber(topicSubscribe,"durableSubscription" + topicNameSubscribe);
    messageProducer.send(textMessagePublish,textMessagePublish.getJMSDeliveryMode(),textMessagePublish.getJMSPriority(),jmsHeader.getTimeTolive());
    submitContext.setProperty(JMS_MESSAGE_SEND,textMessagePublish);
    long timeout=getTimeout(submitContext,request);
    Message messageReceive=topicDurableSubsriber.receive(timeout);
    if (messageReceive != null) {
      TextMessage textMessageReceive=null;
      if (messageReceive instanceof TextMessage) {
        textMessageReceive=(TextMessage)messageReceive;
      }
      response=new JMSResponse(textMessageReceive.getText(),textMessagePublish,textMessageReceive,request,timeStarted);
      submitContext.setProperty(JMS_MESSAGE_RECEIVE,messageReceive);
      submitContext.setProperty(JMS_RESPONSE,response);
      return response;
    }
 else {
      return new JMSResponse("",null,null,request,timeStarted);
    }
  }
 catch (  JMSException jmse) {
    SoapUI.logError(jmse);
    submitContext.setProperty(JMS_ERROR,jmse);
    response=new JMSResponse("",null,null,request,timeStarted);
    submitContext.setProperty(JMS_RESPONSE,response);
    return response;
  }
catch (  Throwable t) {
    SoapUI.logError(t);
  }
 finally {
    if (session != null)     session.close();
    if (connection != null)     connection.close();
  }
  return null;
}
