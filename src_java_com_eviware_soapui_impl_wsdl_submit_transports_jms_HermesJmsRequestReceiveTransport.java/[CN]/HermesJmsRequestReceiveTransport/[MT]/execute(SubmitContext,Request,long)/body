{
  ConnectionFactory connectionFactory=null;
  Connection connection=null;
  Session session=null;
  JMSResponse response=null;
  try {
    String queueName=null;
    String sessionName=null;
    String[] parameters=request.getEndpoint().substring(request.getEndpoint().indexOf("://") + 3).split("/");
    if (parameters.length == 3) {
      sessionName=PropertyExpander.expandProperties(submitContext,parameters[0]);
      queueName=PropertyExpander.expandProperties(submitContext,parameters[2]).replaceFirst("queue_","");
    }
 else     throw new UnresolvedJMSEndpointException("bad jms alias!!!!!");
    Hermes hermes=getHermes(sessionName,request);
    connectionFactory=(javax.jms.ConnectionFactory)hermes.getConnectionFactory();
    connection=connectionFactory.createConnection();
    connection.start();
    session=connection.createSession(false,Session.AUTO_ACKNOWLEDGE);
    Queue queue=(Queue)hermes.getDestination(queueName,Domain.QUEUE);
    MessageConsumer messageConsumer=session.createConsumer(queue);
    long timeout=getTimeout(submitContext,request);
    Message message=messageConsumer.receive(timeout);
    if (message != null) {
      TextMessage textMessage=null;
      if (message instanceof TextMessage) {
        textMessage=(TextMessage)message;
      }
      response=new JMSResponse(textMessage.getText(),textMessage,request,timeStarted);
      submitContext.setProperty(JMS_MESSAGE,message);
      submitContext.setProperty(JMS_RESPONSE,response);
      return response;
    }
 else {
      return new JMSResponse("",null,request,timeStarted);
    }
  }
 catch (  Throwable jmse) {
    SoapUI.logError(jmse);
    submitContext.setProperty(JMS_ERROR,jmse);
    response=new JMSResponse("",null,request,timeStarted);
    submitContext.setProperty(JMS_RESPONSE,response);
    return response;
  }
 finally {
    if (session != null)     session.close();
    if (connection != null)     connection.close();
  }
}
