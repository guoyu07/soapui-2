{
  ConnectionFactory connectionFactory=null;
  Connection connection=null;
  Session session=null;
  TopicSubscriber topicSubsriber=null;
  JMSResponse response=null;
  try {
    String queueNameSend=null;
    String topicNameReceive=null;
    String sessionName=null;
    String[] parameters=request.getEndpoint().substring(request.getEndpoint().indexOf("://") + 3).split("/");
    if (parameters.length == 3) {
      sessionName=PropertyExpander.expandProperties(submitContext,parameters[0]);
      queueNameSend=PropertyExpander.expandProperties(submitContext,parameters[1]).replaceFirst("queue_","");
      topicNameReceive=PropertyExpander.expandProperties(submitContext,parameters[2]).replaceFirst("topic_","");
    }
 else     throw new Exception("bad jms alias!!!!!");
    submitContext.setProperty(HERMES_SESSION_NAME,sessionName);
    Hermes hermes=getHermes(sessionName,request);
    connectionFactory=(javax.jms.ConnectionFactory)hermes.getConnectionFactory();
    connection=connectionFactory.createConnection();
    connection.setClientID("" + (Math.random() * 1000));
    connection.start();
    session=connection.createSession(false,Session.AUTO_ACKNOWLEDGE);
    Queue queueSend=(Queue)hermes.getDestination(queueNameSend,Domain.QUEUE);
    Topic topicReceive=(Topic)hermes.getDestination(topicNameReceive,Domain.TOPIC);
    MessageProducer messageProducer=session.createProducer(queueSend);
    TextMessage textMessageSend=session.createTextMessage();
    String messageBody=PropertyExpander.expandProperties(submitContext,request.getRequestContent());
    textMessageSend.setText(messageBody);
    JMSHeader jmsHeader=new JMSHeader();
    jmsHeader.setMessageHeaders(textMessageSend,request,hermes,submitContext);
    JMSHeader.setMessageProperties(textMessageSend,request,hermes,submitContext);
    messageProducer.send(textMessageSend,textMessageSend.getJMSDeliveryMode(),textMessageSend.getJMSPriority(),jmsHeader.getTimeTolive());
    submitContext.setProperty(JMS_MESSAGE_SEND,textMessageSend);
    topicSubsriber=session.createDurableSubscriber(topicReceive,"durableSubscription" + topicNameReceive);
    long timeout=getTimeout(submitContext,request);
    Message messageReceive=topicSubsriber.receive(timeout);
    if (messageReceive != null) {
      TextMessage textMessageReceive=null;
      if (messageReceive instanceof TextMessage) {
        textMessageReceive=(TextMessage)messageReceive;
      }
      response=new JMSResponse(textMessageReceive.getText(),textMessageSend,textMessageReceive,request,timeStarted);
      submitContext.setProperty(JMS_MESSAGE_RECEIVE,messageReceive);
      submitContext.setProperty(JMS_RESPONSE,response);
      return response;
    }
 else {
      return new JMSResponse("",null,null,request,timeStarted);
    }
  }
 catch (  JMSException jmse) {
    SoapUI.logError(jmse);
    submitContext.setProperty(JMS_ERROR,jmse);
    response=new JMSResponse("",null,null,request,timeStarted);
    submitContext.setProperty(JMS_RESPONSE,response);
    return response;
  }
catch (  Throwable t) {
    SoapUI.logError(t);
  }
 finally {
    if (topicSubsriber != null)     topicSubsriber.close();
    if (session != null)     session.close();
    if (connection != null)     connection.close();
  }
  return null;
}
