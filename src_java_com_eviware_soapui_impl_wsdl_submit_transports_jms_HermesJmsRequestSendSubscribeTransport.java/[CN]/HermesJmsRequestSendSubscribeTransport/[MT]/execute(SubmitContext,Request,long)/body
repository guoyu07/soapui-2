{
  ConnectionFactory connectionFactory=null;
  Connection connection=null;
  Session session=null;
  TopicSubscriber topicSubsriber=null;
  try {
    JMSEndpoint jmsEndpoint=new JMSEndpoint(request,submitContext);
    submitContext.setProperty(HERMES_SESSION_NAME,jmsEndpoint.getSessionName());
    Hermes hermes=getHermes(jmsEndpoint.getSessionName(),request);
    connectionFactory=(javax.jms.ConnectionFactory)hermes.getConnectionFactory();
    String username=submitContext.expand(request.getUsername());
    String password=submitContext.expand(request.getPassword());
    connection=StringUtils.hasContent(username) ? connectionFactory.createConnection(username,password) : connectionFactory.createConnection();
    connection.setClientID(jmsEndpoint.getSessionName() + "-" + jmsEndpoint.getReceive());
    connection.start();
    session=connection.createSession(false,Session.AUTO_ACKNOWLEDGE);
    Queue queueSend=(Queue)hermes.getDestination(jmsEndpoint.getSend(),Domain.QUEUE);
    Topic topicReceive=(Topic)hermes.getDestination(jmsEndpoint.getReceive(),Domain.TOPIC);
    topicSubsriber=session.createDurableSubscriber(topicReceive,"durableSubscription" + jmsEndpoint.getReceive());
    Message textMessageSend=messageSend(submitContext,request,session,hermes,queueSend);
    return makeResponse(submitContext,request,timeStarted,textMessageSend,topicSubsriber);
  }
 catch (  JMSException jmse) {
    return errorResponse(submitContext,request,timeStarted,jmse);
  }
catch (  Throwable t) {
    SoapUI.logError(t);
  }
 finally {
    if (topicSubsriber != null)     topicSubsriber.close();
    closeSessionAndConnection(connection,session);
  }
  return null;
}
