{
  super(keyStore);
  X509TrustManager tm=new X509TrustManager(){
    @Override public X509Certificate[] getAcceptedIssuers(){
      return new X509Certificate[]{};
    }
    @Override public void checkClientTrusted(    X509Certificate[] arg0,    String arg1) throws CertificateException {
    }
    @Override public void checkServerTrusted(    X509Certificate[] arg0,    String arg1) throws CertificateException {
    }
  }
;
  if (keyStore != null) {
    KeyManagerFactory kmfactory=KeyManagerFactory.getInstance(KeyManagerFactory.getDefaultAlgorithm());
    kmfactory.init(keyStore,keystorePassword != null ? keystorePassword.toCharArray() : null);
    KeyManager[] keymanagers=kmfactory.getKeyManagers();
    sslContext.init(keymanagers,new TrustManager[]{tm},null);
  }
 else {
    sslContext.init(null,new TrustManager[]{tm},null);
  }
  setHostnameVerifier(SSLSocketFactory.ALLOW_ALL_HOSTNAME_VERIFIER);
}
