{
  try {
    Element header=addWsAddressingCommon(wsaContainer);
    String action=wsaContainer.getWsaConfig().getAction();
    if (SoapUI.getSettings().getBoolean(WsaSettings.USE_DEFAULT_ACTION) && StringUtils.isNullOrEmpty(action)) {
      action=WsdlUtils.getDefaultWsaAction(wsaContainer.getOperation(),false);
    }
    if (!StringUtils.isNullOrEmpty(action)) {
      header.appendChild(builder.createWsaChildElement("wsa:Action",envelopeElement,action));
      wsaContainer.getWsaConfig().setAction(action);
    }
    String replyTo=wsaContainer.getWsaConfig().getReplyTo();
    if (AnonymousTypeConfig.REQUIRED.toString().equals(anonymousType)) {
      header.appendChild(builder.createWsaAddressChildElement("wsa:ReplyTo",envelopeElement,anonymousAddress));
      wsaContainer.getWsaConfig().setReplyTo(anonymousAddress);
    }
 else     if (!StringUtils.isNullOrEmpty(replyTo)) {
      header.appendChild(builder.createWsaAddressChildElement("wsa:ReplyTo",envelopeElement,replyTo));
    }
 else     if (operation.isRequestResponse()) {
      if (SoapUI.getSettings().getBoolean(WsaSettings.USE_DEFAULT_REPLYTO) && !AnonymousTypeConfig.PROHIBITED.equals(anonymousType)) {
        header.appendChild(builder.createWsaAddressChildElement("wsa:ReplyTo",envelopeElement,anonymousAddress));
        wsaContainer.getWsaConfig().setReplyTo(anonymousAddress);
      }
    }
    String relatesTo=wsaContainer.getWsaConfig().getRelatesTo();
    String relationshipType=wsaContainer.getWsaConfig().getRelationshipType();
    if (!StringUtils.isNullOrEmpty(relationshipType) && !StringUtils.isNullOrEmpty(relatesTo)) {
      header.appendChild(builder.createRelatesToElement("wsa:RelatesTo",envelopeElement,relationshipType,relatesTo));
    }
    String msgId=wsaContainer.getWsaConfig().getMessageID();
    if (!StringUtils.isNullOrEmpty(msgId)) {
      header.appendChild(builder.createWsaChildElement("wsa:MessageID",envelopeElement,msgId));
    }
 else     if (operation.isRequestResponse() && SoapUI.getSettings().getBoolean(WsaSettings.GENERATE_MESSAGE_ID)) {
      String generatedMessageId=UUID.randomUUID().toString();
      header.appendChild(builder.createWsaChildElement("wsa:MessageID",envelopeElement,generatedMessageId));
      wsaContainer.getWsaConfig().setMessageID(generatedMessageId);
    }
    String to=wsaContainer.getWsaConfig().getTo();
    if (!StringUtils.isNullOrEmpty(to)) {
      header.appendChild(builder.createWsaAddressChildElement("wsa:To",envelopeElement,to));
    }
 else     if (operation.isOneWay() || operation.isRequestResponse()) {
      if (httpMethod != null) {
        String defaultTo=httpMethod.getURI().toString();
        header.appendChild(builder.createWsaAddressChildElement("wsa:To",envelopeElement,defaultTo));
        wsaContainer.getWsaConfig().setTo(defaultTo);
      }
    }
    content=xmlContentObject.xmlText();
  }
 catch (  Exception e) {
    SoapUI.logError(e);
  }
  return content;
}
