{
  try {
    Element header=addWsAddressingCommon(wsaContainer,override);
    String action=wsaContainer.getWsaConfig().getAction();
    if (SoapUI.getSettings().getBoolean(WsaSettings.USE_DEFAULT_ACTION) && StringUtils.isNullOrEmpty(action)) {
      action=WsdlUtils.getDefaultWsaAction(wsaContainer.getOperation(),true);
    }
    if (!StringUtils.isNullOrEmpty(action)) {
      header=processWsaProperty(header,override,"wsa:Action",action,false);
    }
    if (AnonymousTypeConfig.REQUIRED.toString().equals(anonymousType)) {
      header=processWsaProperty(header,override,"wsa:ReplyTo",anonymousAddress,true);
    }
 else {
      String replyTo=wsaContainer.getWsaConfig().getReplyTo();
      if (!StringUtils.isNullOrEmpty(replyTo)) {
        header=processWsaProperty(header,override,"wsa:ReplyTo",replyTo,true);
      }
    }
    Element requestHeader=null;
    if (request != null) {
      XmlObject requestXmlObject=request.getRequestXmlObject();
      requestHeader=(Element)SoapUtils.getHeaderElement(requestXmlObject,request.getSoapVersion(),true).getDomNode();
      Element msgNode=XmlUtils.getFirstChildElementNS(requestHeader,wsaVersionNameSpace,"MessageID");
      String requestMessageId=null;
      if (msgNode != null) {
        requestMessageId=XmlUtils.getElementText(msgNode);
      }
      String relationshipType=wsaContainer.getWsaConfig().getRelationshipType();
      if (!StringUtils.isNullOrEmpty(relationshipType)) {
        if (!StringUtils.isNullOrEmpty(requestMessageId)) {
          header=processWsaRelatesToProperty(header,override,"wsa:RelatesTo",relationshipType,requestMessageId);
        }
 else         if (SoapUI.getSettings().getBoolean(WsaSettings.USE_DEFAULT_RELATES_TO)) {
          header=processWsaRelatesToProperty(header,override,"wsa:RelatesTo",relationshipType,unspecifiedMessage);
        }
      }
 else       if (wsaContainer instanceof WsdlMockResponse) {
        if (SoapUI.getSettings().getBoolean(WsaSettings.USE_DEFAULT_RELATIONSHIP_TYPE)) {
          if (!StringUtils.isNullOrEmpty(requestMessageId)) {
            header=processWsaRelatesToProperty(header,override,"wsa:RelatesTo",relationshipTypeReply,requestMessageId);
          }
 else           if (SoapUI.getSettings().getBoolean(WsaSettings.USE_DEFAULT_RELATES_TO)) {
            header=processWsaRelatesToProperty(header,override,"wsa:RelatesTo",relationshipTypeReply,unspecifiedMessage);
          }
        }
      }
      Element replyToNode=XmlUtils.getFirstChildElementNS(requestHeader,wsaVersionNameSpace,"ReplyTo");
      String requestReplyToValue=null;
      if (replyToNode != null) {
        Element replyToAddresseNode=XmlUtils.getFirstChildElementNS(replyToNode,wsaVersionNameSpace,"Address");
        if (replyToAddresseNode != null) {
          requestReplyToValue=XmlUtils.getElementText(replyToAddresseNode);
        }
      }
      String to=wsaContainer.getWsaConfig().getTo();
      if (!StringUtils.isNullOrEmpty(to)) {
        if (!(AnonymousTypeConfig.PROHIBITED.toString().equals(anonymousType) && isAnonymousAddress(to,wsaVersionNameSpace))) {
          header=processWsaProperty(header,override,"wsa:To",to,false);
        }
      }
 else {
        if (!StringUtils.isNullOrEmpty(requestReplyToValue)) {
          if (!(AnonymousTypeConfig.PROHIBITED.toString().equals(anonymousType) && isAnonymousAddress(requestReplyToValue,wsaVersionNameSpace))) {
            header=processWsaProperty(header,override,"wsa:To",requestReplyToValue,false);
          }
        }
      }
    }
 else {
      String to=wsaContainer.getWsaConfig().getTo();
      if (!StringUtils.isNullOrEmpty(to)) {
        header=processWsaProperty(header,override,"wsa:To",to,false);
      }
      String relationshipType=wsaContainer.getWsaConfig().getRelationshipType();
      String relatesTo=wsaContainer.getWsaConfig().getRelatesTo();
      if (!StringUtils.isNullOrEmpty(relationshipType) && !StringUtils.isNullOrEmpty(relatesTo)) {
        header=processWsaRelatesToProperty(header,override,"wsa:RelatesTo",relationshipType,relatesTo);
      }
 else       if (wsaContainer instanceof WsdlMockResponse) {
        if (SoapUI.getSettings().getBoolean(WsaSettings.USE_DEFAULT_RELATIONSHIP_TYPE)) {
          if (!StringUtils.isNullOrEmpty(relatesTo)) {
            header=processWsaRelatesToProperty(header,override,"wsa:RelatesTo",relationshipTypeReply,relatesTo);
          }
 else           if (SoapUI.getSettings().getBoolean(WsaSettings.USE_DEFAULT_RELATES_TO)) {
            header=processWsaRelatesToProperty(header,override,"wsa:RelatesTo",relationshipTypeReply,unspecifiedMessage);
          }
        }
      }
    }
    String msgId=wsaContainer.getWsaConfig().getMessageID();
    if (!StringUtils.isNullOrEmpty(msgId)) {
      header=processWsaProperty(header,override,"wsa:MessageID",msgId,false);
    }
    content=xmlContentObject.xmlText();
  }
 catch (  XmlException e) {
    SoapUI.logError(e);
  }
  return content;
}
