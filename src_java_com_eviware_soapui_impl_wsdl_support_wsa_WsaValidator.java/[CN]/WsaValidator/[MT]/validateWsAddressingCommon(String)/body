{
  if (wsaAssertionConfiguration.isAssertTo()) {
    Element toNode=XmlUtils.getFirstChildElementNS(header,wsaVersionNameSpace,"To");
    if (toNode == null) {
      cumulativeErrorMsg.append("WS-A To property is not specified. ");
    }
 else {
      String toAddressValue=XmlUtils.getElementText(toNode);
      if (StringUtils.isNullOrEmpty(toAddressValue)) {
        cumulativeErrorMsg.append("WS-A To property is empty. ");
      }
 else {
        if (AnonymousTypeConfig.PROHIBITED.toString().equals(messageExchange.getOperation().getAnonymous()) && WsaUtils.isAnonymousAddress(toAddressValue,wsaVersionNameSpace)) {
          cumulativeErrorMsg.append("WS-A InvalidAddressingHeader To , Anonymous addresses are prohibited. ");
        }
      }
    }
  }
  Element faultToNode=XmlUtils.getFirstChildElementNS(header,wsaVersionNameSpace,"FaultTo");
  if (faultToNode != null) {
    Element addressNode=XmlUtils.getFirstChildElementNS(faultToNode,wsaVersionNameSpace,"Address");
    if (addressNode != null) {
      String faultToAddressValue=XmlUtils.getElementText(addressNode);
      if (!StringUtils.isNullOrEmpty(faultToAddressValue)) {
        if (AnonymousTypeConfig.PROHIBITED.toString().equals(messageExchange.getOperation().getAnonymous()) && WsaUtils.isAnonymousAddress(faultToAddressValue,wsaVersionNameSpace)) {
          cumulativeErrorMsg.append("WS-A InvalidAddressingHeader FaultTo , Anonymous addresses are prohibited. ");
        }
 else         if (AnonymousTypeConfig.REQUIRED.toString().equals(((WsdlMessageExchange)messageExchange).getOperation().getAnonymous()) && !(WsaUtils.isAnonymousAddress(faultToAddressValue,wsaVersionNameSpace) || WsaUtils.isNoneAddress(faultToAddressValue,wsaVersionNameSpace))) {
          cumulativeErrorMsg.append("WS-A InvalidAddressingHeader FaultTo , Anonymous addresses are required. ");
        }
      }
    }
  }
}
