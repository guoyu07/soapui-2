{
  String content=messageExchange.getResponseContent();
  SoapVersion soapVersion=messageExchange.getOperation().getInterface().getSoapVersion();
  XmlObject requestXmlObject=XmlObject.Factory.parse(messageExchange.getRequestContent());
  XmlObject xmlObject=XmlObject.Factory.parse(content);
  header=(Element)SoapUtils.getHeaderElement(xmlObject,soapVersion,true).getDomNode();
  wsaVersionNameSpace=getWsaVersion(xmlObject,soapVersion);
  if (wsaAssertionConfiguration.isAssertAction()) {
    String defaultWsdlAction=WsdlUtils.getDefaultWsaAction(messageExchange.getOperation(),true);
    assertProperty("Wsa:Action","Action",defaultWsdlAction);
  }
  validateWsAddressingCommon(content);
  if (wsaAssertionConfiguration.isAssertRelatesTo()) {
    Element relatesToNode;
    if (!StringUtils.isNullOrEmpty(wsaVersionNameSpace)) {
      relatesToNode=XmlUtils.getFirstChildElementNS(header,wsaVersionNameSpace,"RelatesTo");
      parseRelatesToNode(soapVersion,requestXmlObject,relatesToNode);
    }
 else {
      relatesToNode=XmlUtils.getFirstChildElementNS(header,WsaUtils.WS_A_NAMESPACE_200508,"RelatesTo");
      if (relatesToNode == null) {
        relatesToNode=XmlUtils.getFirstChildElementNS(header,WsaUtils.WS_A_NAMESPACE_200408,"RelatesTo");
      }
      parseRelatesToNode(soapVersion,requestXmlObject,relatesToNode);
    }
  }
  Element replyToNode=XmlUtils.getFirstChildElementNS(header,wsaVersionNameSpace,"ReplyTo");
  if (replyToNode != null) {
    Element addressNode=XmlUtils.getFirstChildElementNS(replyToNode,wsaVersionNameSpace,"Address");
    if (addressNode != null) {
      String replyToAddressValue=XmlUtils.getElementText(addressNode);
      if (!StringUtils.isNullOrEmpty(replyToAddressValue)) {
        if (AnonymousTypeConfig.PROHIBITED.toString().equals(((WsdlMessageExchange)messageExchange).getOperation().getAnonymous()) && WsaUtils.isAnonymousAddress(replyToAddressValue,wsaVersionNameSpace)) {
          cumulativeErrorMsg.append("WS-A InvalidAddressingHeader ReplyTo , Anonymous addresses are prohibited. ");
        }
 else         if (AnonymousTypeConfig.REQUIRED.toString().equals(((WsdlMessageExchange)messageExchange).getOperation().getAnonymous()) && !(WsaUtils.isAnonymousAddress(replyToAddressValue,wsaVersionNameSpace) || WsaUtils.isNoneAddress(replyToAddressValue,wsaVersionNameSpace))) {
          cumulativeErrorMsg.append("WS-A InvalidAddressingHeader ReplyTo , Anonymous addresses are required. ");
        }
      }
    }
  }
  if (wsaAssertionConfiguration.isAssertReplyToRefParams()) {
    NodeList requestReplyToRefProps=WsdlUtils.getRequestReplyToRefProps(messageExchange,getWsaVersion(requestXmlObject,soapVersion));
    for (int i=0; i < requestReplyToRefProps.getLength(); i++) {
      Node refProp=requestReplyToRefProps.item(i);
      String refPropName=refProp.getNodeName();
      NodeList existingResponseRefs=XmlUtils.getChildElementsByTagName(header,refPropName);
      if (existingResponseRefs != null && existingResponseRefs.getLength() > 0) {
        continue;
      }
 else {
        cumulativeErrorMsg.append("Response does not have request ReferenceProperty " + refPropName + ". ");
      }
    }
  }
  if (wsaAssertionConfiguration.isAssertFaultToRefParams()) {
    NodeList requestFaultToRefProps=WsdlUtils.getRequestFaultToRefProps(messageExchange,getWsaVersion(requestXmlObject,soapVersion));
    for (int i=0; i < requestFaultToRefProps.getLength(); i++) {
      Node refProp=requestFaultToRefProps.item(i);
      String refPropName=refProp.getNodeName();
      NodeList existingResponseRefs=XmlUtils.getChildElementsByTagName(header,refPropName);
      if (existingResponseRefs != null && existingResponseRefs.getLength() > 0) {
        continue;
      }
 else {
        cumulativeErrorMsg.append("Response does not have request ReferenceProperty " + refPropName + ". ");
      }
    }
  }
  String cumulativeError=cumulativeErrorMsg.toString();
  if (!StringUtils.isNullOrEmpty(cumulativeError)) {
    throw new AssertionException(new AssertionError(cumulativeError));
  }
}
