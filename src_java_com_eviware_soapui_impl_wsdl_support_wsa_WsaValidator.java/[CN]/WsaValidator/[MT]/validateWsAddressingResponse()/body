{
  String content=messageExchange.getResponseContent();
  try {
    getWsaVersion(content);
  }
 catch (  XmlException e) {
    SoapUI.logError(e);
  }
  Element actionNode=XmlUtils.getFirstChildElementNS(header,wsaVersionNameSpace,"Action");
  if (actionNode == null) {
    cumulativeErrorMsg.append("WS-A Action property is not specified. ");
  }
 else {
    String actionValue=XmlUtils.getElementText(actionNode);
    if (StringUtils.isNullOrEmpty(actionValue)) {
      cumulativeErrorMsg.append("WS-A Action property is empty. ");
    }
 else {
      String defaultWsdlAction=WsdlUtils.getDefaultWsaAction(messageExchange.getOperation(),true);
      if (!actionValue.equals(defaultWsdlAction)) {
        cumulativeErrorMsg.append("WS-A Action property should be " + defaultWsdlAction + ". ");
      }
    }
  }
  validateWsAddressingCommon(content);
  Element relatesToNode=XmlUtils.getFirstChildElementNS(header,wsaVersionNameSpace,"RelatesTo");
  if (relatesToNode == null) {
    cumulativeErrorMsg.append("WS-A RelatesTo property is not specified. ");
  }
 else {
    String relatesToAddressesValue=XmlUtils.getElementText(relatesToNode);
    if (StringUtils.isNullOrEmpty(relatesToAddressesValue)) {
      cumulativeErrorMsg.append("WS-A RelatesTo property is empty. ");
    }
  }
  Element replyToNode=XmlUtils.getFirstChildElementNS(header,wsaVersionNameSpace,"ReplyTo");
  if (replyToNode != null) {
    Element addressNode=XmlUtils.getFirstChildElementNS(replyToNode,wsaVersionNameSpace,"Address");
    if (addressNode != null) {
      String replyToAddressValue=XmlUtils.getElementText(addressNode);
      if (!StringUtils.isNullOrEmpty(replyToAddressValue)) {
        if (AnonymousTypeConfig.PROHIBITED.toString().equals(((WsdlMessageExchange)messageExchange).getOperation().getAnonymous()) && WsaUtils.isAnonymousAddress(replyToAddressValue,wsaVersionNameSpace)) {
          cumulativeErrorMsg.append("WS-A InvalidAddressingHeader ReplyTo , Anonymous addresses are prohibited. ");
        }
 else         if (AnonymousTypeConfig.REQUIRED.toString().equals(((WsdlMessageExchange)messageExchange).getOperation().getAnonymous()) && !(WsaUtils.isAnonymousAddress(replyToAddressValue,wsaVersionNameSpace) || WsaUtils.isNoneAddress(replyToAddressValue,wsaVersionNameSpace))) {
          cumulativeErrorMsg.append("WS-A InvalidAddressingHeader ReplyTo , Anonymous addresses are required. ");
        }
      }
    }
  }
  String cumulativeError=cumulativeErrorMsg.toString();
  if (!StringUtils.isNullOrEmpty(cumulativeError)) {
    throw new AssertionException(new AssertionError(cumulativeError));
  }
}
