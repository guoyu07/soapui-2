{
  SimpleBindingForm form=new SimpleBindingForm(new PresentationModel<AddSignatureEntry>(this));
  form.addSpace(5);
  wssContainerListener=new InternalWssContainerListener();
  getWssContainer().addWssContainerListener(wssContainerListener);
  KeystoresComboBoxModel keystoresComboBoxModel=new KeystoresComboBoxModel(getWssContainer(),getWssContainer().getCryptoByName(crypto));
  form.appendComboBox("crypto","Keystore",keystoresComboBoxModel,"Selects the Keystore containing the key to use for signing").addItemListener(new ItemListener(){
    public void itemStateChanged(    ItemEvent e){
      keyAliasComboBoxModel.update(getWssContainer().getCryptoByName(crypto));
    }
  }
);
  keyAliasComboBoxModel=new KeyAliasComboBoxModel(getWssContainer().getCryptoByName(crypto));
  form.appendComboBox("username","Alias",keyAliasComboBoxModel,"The alias for the key to use for encryption");
  form.appendPasswordField("password","Password","The password for the key to use for encryption (if it is private)");
  form.appendComboBox("keyIdentifierType","Key Identifier Type",new Integer[]{0,1,3,4,5,6,8},"Sets which key identifier to use").setRenderer(new KeyIdentifierTypeRenderer());
  (embeddedKeyNameTextField=form.appendTextField("embeddedKeyName","Embedded Key Name","The embedded key name")).setEnabled(keyIdentifierType == WSConstants.EMBEDDED_KEYNAME);
  (embeddedKeyNamePassword=form.appendPasswordField("embeddedKeyPassword","Embedded Key Password","The embedded key password")).setEnabled(keyIdentifierType == WSConstants.EMBEDDED_KEYNAME);
  form.appendComboBox("symmetricEncAlgorithm","Symmetric Encoding Algorithm",new String[]{DEFAULT_OPTION,WSConstants.AES_128,WSConstants.AES_192,WSConstants.AES_256,WSConstants.TRIPLE_DES},"Set the name of the symmetric encryption algorithm to use");
  form.appendComboBox("encKeyTransport","Key Encryption Algorithm",new String[]{DEFAULT_OPTION,WSConstants.KEYTRANSPORT_RSA15,WSConstants.KEYTRANSPORT_RSAOEP},"Sets the algorithm to encode the symmetric key");
  form.appendCheckBox("encryptSymmetricKey","Create Encrypted Key","Indicates whether to encrypt the symmetric key into an EncryptedKey or not");
  form.append("Parts",new WSPartsTable(parts,this));
  return new JScrollPane(form.getPanel());
}
