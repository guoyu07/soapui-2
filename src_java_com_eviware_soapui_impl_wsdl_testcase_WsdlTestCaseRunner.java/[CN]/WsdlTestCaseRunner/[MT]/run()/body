{
  int initCount=0;
  if (future != null) {
    thread=Thread.currentThread();
    thread.setName("TestCaseRunner Thread for " + testCase.getName());
  }
  try {
    gotoStepIndex=-1;
    testStepResults.clear();
    if (testCase.getKeepSession()) {
      runContext.setProperty(SubmitContext.HTTP_STATE_PROPERTY,new HttpState());
    }
    testCase.runSetupScript(runContext,this);
    status=Status.RUNNING;
    startTime=System.currentTimeMillis();
    if (testCase.getTimeout() > 0) {
      timeoutTimer=new Timer();
      timeoutTimerTask=new TimeoutTimerTask();
      timeoutTimer.schedule(timeoutTimerTask,testCase.getTimeout());
    }
    listeners=testCase.getTestRunListeners();
    notifyBeforeRun();
    for (; initCount < testCase.getTestStepCount() && status == Status.RUNNING; initCount++) {
      WsdlTestStep testStep=testCase.getTestStepAt(initCount);
      if (testStep.isDisabled())       continue;
      try {
        testStep.prepare(this,runContext);
      }
 catch (      Exception e) {
        status=Status.FAILED;
        SoapUI.logError(e);
        throw new Exception("Failed to prepare testStep [" + testStep.getName() + "]; "+ e.toString());
      }
    }
    int currentStepIndex=0;
    for (; status == Status.RUNNING && currentStepIndex < testCase.getTestStepCount(); currentStepIndex++) {
      TestStep currentStep=runContext.getCurrentStep();
      if (!currentStep.isDisabled()) {
        TestStepResult stepResult=runTestStep(currentStep,true,true);
        if (stepResult == null)         return;
        if (status == Status.CANCELED || status == Status.FAILED)         return;
        if (gotoStepIndex != -1) {
          currentStepIndex=gotoStepIndex - 1;
          gotoStepIndex=-1;
        }
      }
      runContext.setCurrentStep(currentStepIndex + 1);
    }
    if (runContext.getProperty(TestRunner.Status.class.getName()) == TestRunner.Status.FAILED && testCase.getFailTestCaseOnErrors()) {
      fail("Failing due to failed test step");
    }
  }
 catch (  Throwable t) {
    log.error("Exception during TestCase Execution",t);
    if (t instanceof OutOfMemoryError && UISupport.confirm("Exit now without saving?","Out of Memory Error")) {
      System.exit(0);
    }
    status=Status.FAILED;
    error=t;
    reason=t.toString();
  }
 finally {
    if (timeoutTimer != null) {
      timeoutTimer.cancel();
    }
    if (status == Status.RUNNING) {
      status=Status.FINISHED;
    }
    for (int c=0; c < initCount; c++) {
      WsdlTestStep testStep=testCase.getTestStepAt(c);
      if (!testStep.isDisabled())       testStep.finish(this,runContext);
    }
    notifyAfterRun();
    try {
      testCase.runTearDownScript(runContext,this);
    }
 catch (    Exception e) {
      SoapUI.logError(e);
    }
    runContext.clear();
    listeners=null;
  }
}
