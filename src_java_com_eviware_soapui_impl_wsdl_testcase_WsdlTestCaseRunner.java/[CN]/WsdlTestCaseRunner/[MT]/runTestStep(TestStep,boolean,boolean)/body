{
  for (int i=0; i < testRunListeners.length; i++) {
    testRunListeners[i].beforeStep(this,getRunContext(),testStep);
    if (!isRunning())     return null;
  }
  TestStepResult stepResult=testStep.run(this,getRunContext());
  testStepResults.add(stepResult);
  resultCount++;
  enforceMaxResults(getTestRunnable().getMaxResults());
  for (int i=0; i < testRunListeners.length; i++) {
    testRunListeners[i].afterStep(this,getRunContext(),stepResult);
  }
  if (discard && stepResult.getStatus() == TestStepStatus.OK && getTestRunnable().getDiscardOkResults() && !stepResult.isDiscarded()) {
    stepResult.discard();
  }
  if (process && stepResult.getStatus() == TestStepStatus.FAILED) {
    if (getTestRunnable().getFailOnError()) {
      setError(stepResult.getError());
      fail("Cancelling due to failed test step");
    }
 else {
      getRunContext().setProperty(TestCaseRunner.Status.class.getName(),TestCaseRunner.Status.FAILED);
    }
  }
  preserveContext(getRunContext());
  return stepResult;
}
