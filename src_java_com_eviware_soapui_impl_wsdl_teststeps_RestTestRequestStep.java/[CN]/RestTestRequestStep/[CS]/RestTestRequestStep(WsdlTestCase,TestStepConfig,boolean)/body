{
  super(testCase,config,true,forLoadTest);
  if (getConfig().getConfig() != null) {
    restRequestStepConfig=(RestRequestStepConfig)getConfig().getConfig().changeType(RestRequestStepConfig.type);
    testRequest=buildTestRequest(forLoadTest);
    if (testRequest == null)     throw new ItemDeletedException();
    testRequest.addPropertyChangeListener(this);
    testRequest.addTestPropertyListener(new InternalTestPropertyListener());
    if (config.isSetName())     testRequest.setName(config.getName());
 else     config.setName(testRequest.getName());
  }
 else {
    restRequestStepConfig=(RestRequestStepConfig)getConfig().addNewConfig().changeType(RestRequestStepConfig.type);
  }
  refreshRequestProperties();
  addProperty(new TestStepBeanProperty("Endpoint",false,testRequest,"endpoint",this,false));
  addProperty(new TestStepBeanProperty("Username",false,testRequest,"username",this,true));
  addProperty(new TestStepBeanProperty("Password",false,testRequest,"password",this,true));
  addProperty(new TestStepBeanProperty("Domain",false,testRequest,"domain",this,false));
  addProperty(new TestStepBeanProperty("Request",false,testRequest,"requestContent",this,true){
    @Override public String getDefaultValue(){
      return createDefaultRequestContent();
    }
    public SchemaType getSchemaType(){
      try {
        Document dom=XmlUtils.parseXml(getTestRequest().getRequestContent());
        for (        RestRepresentation representation : getTestRequest().getRepresentations(Type.REQUEST,getTestRequest().getMediaType())) {
          if (representation.getElement().equals(XmlUtils.getQName(dom.getDocumentElement()))) {
            return representation.getSchemaType();
          }
        }
      }
 catch (      Exception e) {
        SoapUI.logError(e);
      }
      return super.getSchemaType();
    }
    @Override public QName getType(){
      return getSchemaType().getName();
    }
  }
);
  addProperty(new TestStepBeanProperty(WsdlTestStepWithProperties.RESPONSE_AS_XML,true,testRequest,"responseContentAsXml",this){
    @Override public String getDefaultValue(){
      return createDefaultResponseXmlContent();
    }
    public SchemaType getSchemaType(){
      try {
        Document dom=XmlUtils.parseXml(getTestRequest().getResponseContentAsXml());
        for (        RestRepresentation representation : getTestRequest().getRepresentations(Type.RESPONSE,getTestRequest().getResponse().getContentType())) {
          if (representation.getElement().equals(XmlUtils.getQName(dom.getDocumentElement()))) {
            return representation.getSchemaType();
          }
        }
      }
 catch (      Exception e) {
        SoapUI.logError(e);
      }
      return super.getSchemaType();
    }
    @Override public QName getType(){
      return getSchemaType().getName();
    }
  }
);
  addProperty(new TestStepBeanProperty("Response",true,testRequest,"responseContentAsString",this){
    @Override public String getDefaultValue(){
      return createDefaultRawResponseContent();
    }
  }
);
  addProperty(new DefaultTestStepProperty("RawRequest",true,this){
    @Override public String getValue(){
      HttpResponse response=testRequest.getResponse();
      return response == null ? null : response.getRequestContent();
    }
  }
);
  initRestTestRequest();
  if (!forLoadTest && restResource != null) {
    getResource().getService().getProject().addProjectListener(projectListener);
    getResource().getService().addInterfaceListener(interfaceListener);
    getResource().getService().addPropertyChangeListener(this);
    getResource().addPropertyChangeListener(this);
  }
  if (getRestMethod() != null) {
    getRestMethod().addPropertyChangeListener(this);
  }
}
