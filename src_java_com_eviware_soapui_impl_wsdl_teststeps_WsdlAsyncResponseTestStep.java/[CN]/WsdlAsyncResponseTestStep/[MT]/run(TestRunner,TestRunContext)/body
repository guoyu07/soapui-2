{
  WsdlMockResponse oldResponse=getMockResponse();
  mockResponse=null;
  mockResponse.setConfig(oldResponse.getConfig());
  WsdlSingleMessageExchangeTestStepResult result=new WsdlSingleMessageExchangeTestStepResult(this);
  result.startTimer();
  long timeout=getTimeout();
synchronized (listener) {
    long start=System.currentTimeMillis();
    do {
      try {
        listener.wait(timeout);
      }
 catch (      InterruptedException e) {
      }
      timeout-=(System.currentTimeMillis() - start);
    }
 while (timeout > 0);
  }
  if (listener.getResult() != null) {
    AssertedWsdlMockResultMessageExchange messageExchange=new AssertedWsdlMockResultMessageExchange(listener.getResult());
    result.setMessageExchange(messageExchange);
    context.setProperty(AssertedXPathsContainer.ASSERTEDXPATHSCONTAINER_PROPERTY,messageExchange);
    updateAssertionStatus(listener.getResult(),((context)));
  }
  result.stopTimer();
  if (listener.getResult() == null) {
    if (listener.isCanceled()) {
      result.setStatus(TestStepStatus.CANCELED);
    }
 else {
      result.setStatus(TestStepStatus.FAILED);
      result.addMessage((new StringBuilder()).append("Timeout occured after ").append(timeout).append(" milliseconds").toString());
    }
  }
 else   if (getAssertionStatus() == AssertionStatus.FAILED) {
    result.setStatus(TestStepStatus.FAILED);
    if (getAssertionCount() == 0) {
      result.addMessage("Invalid/empty request");
    }
 else {
      for (int i=0; i < getAssertionCount(); i++) {
        AssertionError assertionErrors[]=getAssertionAt(i).getErrors();
        if (assertionErrors != null) {
          for (int j=0; j < assertionErrors.length; j++) {
            AssertionError assertionError=assertionErrors[j];
            result.addMessage(assertionError.getMessage());
          }
        }
      }
    }
  }
 else {
    result.setStatus(TestStepStatus.OK);
  }
  return result;
}
