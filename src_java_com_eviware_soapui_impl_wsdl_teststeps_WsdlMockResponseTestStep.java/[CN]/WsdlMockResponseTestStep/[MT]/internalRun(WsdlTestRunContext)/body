{
  iconAnimator.start();
  WsdlSingleMessageExchangeTestStepResult result=new WsdlSingleMessageExchangeTestStepResult(this);
  try {
    if (!isPreStart() && testMockResponse == null) {
      initTestMockResponse(context);
    }
    if (!listener.hasResult()) {
      result.startTimer();
      long timeout=getTimeout();
synchronized (listener) {
        listener.waitForRequest(timeout);
      }
    }
    result.stopTimer();
    AssertedWsdlMockResultMessageExchange messageExchange=new AssertedWsdlMockResultMessageExchange(listener.getResult());
    result.setMessageExchange(messageExchange);
    if (listener.getResult() != null) {
      context.setProperty(AssertedXPathsContainer.ASSERTEDXPATHSCONTAINER_PROPERTY,messageExchange);
      assertResult(listener.getResult(),context);
    }
    if (listener.getResult() == null) {
      if (listener.isCanceled()) {
        result.setStatus(TestStepStatus.CANCELED);
      }
 else {
        result.setStatus(TestStepStatus.FAILED);
        result.addMessage("Timeout occured after " + getTimeout() + " milliseconds");
      }
    }
 else {
      AssertionStatus status=getAssertionStatus();
      if (status == AssertionStatus.FAILED) {
        result.setStatus(TestStepStatus.FAILED);
        if (getAssertionCount() == 0) {
          result.addMessage("Invalid/empty request");
        }
 else         for (int c=0; c < getAssertionCount(); c++) {
          AssertionError[] errors=getAssertionAt(c).getErrors();
          if (errors != null) {
            for (            AssertionError error : errors) {
              result.addMessage(error.getMessage());
            }
          }
        }
      }
 else {
        result.setStatus(TestStepStatus.OK);
      }
    }
  }
 catch (  Exception e) {
    result.stopTimer();
    result.setStatus(TestStepStatus.FAILED);
    result.setError(e);
    SoapUI.logError(e);
  }
 finally {
    iconAnimator.stop();
  }
  return result;
}
