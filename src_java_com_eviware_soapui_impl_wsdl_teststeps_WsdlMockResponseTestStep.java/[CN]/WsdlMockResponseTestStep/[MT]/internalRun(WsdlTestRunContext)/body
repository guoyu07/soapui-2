{
  if (iconAnimator != null)   iconAnimator.start();
  WsdlSingleMessageExchangeTestStepResult result=new WsdlSingleMessageExchangeTestStepResult(this);
  try {
    this.lastResult=null;
    mockResponse.setMockResult(null);
    result.startTimer();
    if (!mockRunListener.hasResult()) {
      if (testMockResponse == null)       initTestMockResponse(context);
      long timeout=getTimeout();
synchronized (mockRunListener) {
        mockRunListener.waitForRequest(timeout);
      }
    }
    result.stopTimer();
    if (mockRunner != null && mockRunner.isRunning())     mockRunner.stop();
    AssertedWsdlMockResultMessageExchange messageExchange=new AssertedWsdlMockResultMessageExchange(mockRunListener.getLastResult());
    result.setMessageExchange(messageExchange);
    if (mockRunListener.getLastResult() != null) {
      lastResult=mockRunListener.getLastResult();
      mockResponse.setMockResult(lastResult);
      context.setProperty(AssertedXPathsContainer.ASSERTEDXPATHSCONTAINER_PROPERTY,messageExchange);
      assertResult(lastResult,context);
    }
    if (mockRunListener.getLastResult() == null) {
      if (mockRunListener.isCanceled()) {
        result.setStatus(TestStepStatus.CANCELED);
      }
 else {
        result.setStatus(TestStepStatus.FAILED);
        result.addMessage("Timeout occured after " + getTimeout() + " milliseconds");
      }
    }
 else {
      AssertionStatus status=getAssertionStatus();
      if (status == AssertionStatus.FAILED) {
        result.setStatus(TestStepStatus.FAILED);
        if (getAssertionCount() == 0) {
          result.addMessage("Invalid/empty request");
        }
 else         for (int c=0; c < getAssertionCount(); c++) {
          WsdlMessageAssertion assertion=getAssertionAt(c);
          AssertionError[] errors=assertion.getErrors();
          if (errors != null) {
            for (            AssertionError error : errors) {
              result.addMessage("[" + assertion.getName() + "] "+ error.getMessage());
            }
          }
        }
      }
 else {
        result.setStatus(TestStepStatus.OK);
      }
      mockRunListener.setLastResult(null);
    }
  }
 catch (  Exception e) {
    result.stopTimer();
    result.setStatus(TestStepStatus.FAILED);
    result.setError(e);
    SoapUI.logError(e);
  }
 finally {
    if (iconAnimator != null)     iconAnimator.stop();
  }
  return result;
}
