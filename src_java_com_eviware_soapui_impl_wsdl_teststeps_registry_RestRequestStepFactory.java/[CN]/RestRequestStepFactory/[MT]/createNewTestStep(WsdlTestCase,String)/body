{
  Project project=testCase.getTestSuite().getProject();
  List<String> options=new ArrayList<String>();
  TupleList<RestResource,RestRequest> restResources=new TupleList<RestResource,RestRequest>();
  for (int c=0; c < project.getInterfaceCount(); c++) {
    Interface iface=project.getInterfaceAt(c);
    if (iface instanceof RestService) {
      List<RestResource> resources=((RestService)iface).getAllResources();
      for (      RestResource resource : resources) {
        options.add(iface.getName() + " -> " + resource.getPath());
        restResources.add(resource,null);
        for (        RestRequest request : resource.getRequests().values()) {
          restResources.add(resource,request);
          options.add(iface.getName() + " -> " + resource.getPath()+ " -> "+ request.getName());
        }
      }
    }
  }
  if (restResources.size() == 0) {
    UISupport.showErrorMessage("Missing REST Resources in project");
    return null;
  }
  Object op=UISupport.prompt("Select Resource to invoke for request","New RestRequest",options.toArray());
  if (op != null) {
    int ix=options.indexOf(op);
    if (ix != -1) {
      TupleList<RestResource,RestRequest>.Tuple tuple=restResources.get(ix);
      return tuple.getValue2() == null ? createNewTestStep(tuple.getValue1(),name) : createConfig(tuple.getValue2(),name);
    }
  }
  return null;
}
