{
  List<TestStepSecurityTestConfig> testStepSecurityTestList=getConfig().getTestStepSecurityTestList();
  if (!testStepSecurityTestList.isEmpty()) {
    for (    TestStepSecurityTestConfig testStepSecurityTest : testStepSecurityTestList) {
      if (testStepSecurityTest.getTestStepId().equals(testStep.getId())) {
        List<SecurityCheckConfig> securityCheckList=testStepSecurityTest.getTestStepSecurityCheckList();
        AbstractSecurityCheckFactory factory=SecurityCheckRegistry.getInstance().getFactory(securityCheck.getType());
        SecurityCheckConfig newSecCheckConfig=(SecurityCheckConfig)securityCheck.getConfig().copy();
        AbstractSecurityCheck newSecCheck=factory.buildSecurityCheck(testStep,newSecCheckConfig,this);
        securityCheckList.remove(securityCheck.getConfig());
        securityCheckList.add(index + offset,newSecCheckConfig);
        SecurityCheckConfig[] cc=new SecurityCheckConfig[securityCheckList.size()];
        for (int i=0; i < securityCheckList.size(); i++) {
          cc[i]=securityCheckList.get(i);
        }
        testStepSecurityTest.setTestStepSecurityCheckArray(cc);
        TestStepSecurityTestConfig[] vv=new TestStepSecurityTestConfig[testStepSecurityTestList.size()];
        for (int i=0; i < testStepSecurityTestList.size(); i++) {
          vv[i]=testStepSecurityTestList.get(i);
        }
        getConfig().setTestStepSecurityTestArray(vv);
        listModel.securityCheckMoved(newSecCheck,index,offset);
        return newSecCheck;
      }
    }
  }
  clearSecurityChecksMapCache();
  return null;
}
