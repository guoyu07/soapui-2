{
  TestStep testStep=(TestStep)context.getProperty(ParameterExposureCheck.TEST_STEP);
  testStep=SecurityTestRunnerImpl.cloneTestStepForSecurityCheck((WsdlTestStep)testStep);
  SecurityTestRunner securityTestRunner=(SecurityTestRunner)context.getProperty(ParameterExposureCheck.TEST_CASE_RUNNER);
  List<String> urls=submitScript(messageExchange,context);
  ParameterExposureCheckConfig parameterExposureCheckConfig=(ParameterExposureCheckConfig)context.getProperty(ParameterExposureCheck.PARAMETER_EXPOSURE_CHECK_CONFIG);
  boolean throwException=false;
  List<AssertionError> assertionErrorList=new ArrayList<AssertionError>();
  for (  String url : urls) {
    HttpTestRequestStep httpRequest=createHttpRequest((WsdlTestStep)testStep,url);
    MessageExchange messageExchange2=(MessageExchange)httpRequest.run((TestCaseRunner)securityTestRunner,(SecurityTestRunContext)context);
    for (    String value : parameterExposureCheckConfig.getParameterExposureStringsList()) {
      value=context.expand(value);
      String match=SecurityCheckUtil.contains(context,new String(messageExchange2.getRawResponseData()),value,false);
      if (match != null) {
        String shortValue=value.length() > 25 ? value.substring(0,22) + "... " : value;
        String message="XSS content sent in request '" + shortValue + "' is exposed in response on link "+ url+ " . Possibility for XSS script attack in: "+ messageExchange.getModelItem().getName();
        assertionErrorList.add(new AssertionError(message));
        throwException=true;
      }
    }
  }
  if (throwException) {
    throw new AssertionException(assertionErrorList.toArray(new AssertionError[assertionErrorList.size()]));
  }
  return "OK";
}
