{
  if (acceptsTestStep(testStep)) {
    HttpTestRequestStepInterface testStepwithProperties=(HttpTestRequestStepInterface)testStep;
    HttpTestRequestInterface<?> request=testStepwithProperties.getTestRequest();
    MessageExchange messageExchange=new HttpResponseMessageExchange(request);
    Map<String,TestProperty> params=testStepwithProperties.getProperties();
    if (getParamsToCheck().isEmpty()) {
      setParamsToCheck(new ArrayList<String>(params.keySet()));
    }
    for (    String paramName : getParamsToCheck()) {
      TestProperty param=params.get(paramName);
      if (param != null && param.getValue().length() >= getMinimumLength()) {
        TestAssertionConfig assertionConfig=TestAssertionConfig.Factory.newInstance();
        assertionConfig.setType(SimpleContainsAssertion.ID);
        SimpleContainsAssertion containsAssertion=(SimpleContainsAssertion)TestAssertionRegistry.getInstance().buildAssertion(assertionConfig,testStepwithProperties);
        containsAssertion.setToken(param.getValue());
        containsAssertion.assertResponse(messageExchange,context);
        if (containsAssertion.getStatus().equals(AssertionStatus.VALID)) {
          securityTestLog.addEntry(new SecurityTestLogMessageEntry("Parameter " + param.getName() + " is exposed in the response"));
        }
      }
    }
  }
}
