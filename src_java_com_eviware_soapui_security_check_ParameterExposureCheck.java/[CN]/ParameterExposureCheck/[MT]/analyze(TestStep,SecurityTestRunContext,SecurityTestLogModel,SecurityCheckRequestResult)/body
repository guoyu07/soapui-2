{
  if (acceptsTestStep(testStep)) {
    HttpTestRequestStepInterface testStepwithProperties=(HttpTestRequestStepInterface)testStep;
    HttpTestRequestInterface<?> request=testStepwithProperties.getTestRequest();
    MessageExchange messageExchange=new HttpResponseMessageExchange(request);
    RestParamsPropertyHolder params;
    AbstractHttpRequest<?> httpRequest=testStepwithProperties.getHttpRequest();
    params=httpRequest.getParams();
    List<RestParameterConfig> paramsToCheck;
    paramsToCheck=getParameters().getParameterList();
    for (    RestParameterConfig parameter : paramsToCheck) {
      if (parameter != null) {
        TestProperty testParameter=params.get(parameter.getName());
        if (testParameter != null && testParameter.getValue() != null && testParameter.getValue().length() >= getMinimumLength()) {
          TestAssertionConfig assertionConfig=TestAssertionConfig.Factory.newInstance();
          assertionConfig.setType(SimpleContainsAssertion.ID);
          if (SecurityCheckUtil.contains(context,new String(messageExchange.getRawResponseData()),testParameter.getValue(),false)) {
            securityTestLog.addEntry(new SecurityTestLogMessageEntry("The parameter " + testParameter.getName() + " with the value \""+ testParameter.getValue()+ "\" is exposed in the response",messageExchange));
            securityCheckResult.setStatus(SecurityCheckStatus.FAILED);
          }
        }
      }
    }
  }
  return null;
}
