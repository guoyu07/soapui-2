{
  strategy=getExecutionStrategy().getStrategy();
  XmlObjectTreeModel model=null;
  List<SecurityCheckedParameter> scpList=getParameterHolder().getParameterList();
  StringToStringMap stsmap=new StringToStringMap();
  for (  SecurityCheckedParameter scp : scpList) {
    if (strategy.equals(StrategyTypeConfig.ONE_BY_ONE)) {
      stsmap=new StringToStringMap();
      model=SecurityCheckUtil.getXmlObjectTreeModel(testStep,scp);
    }
 else {
      if (model == null) {
        model=SecurityCheckUtil.getXmlObjectTreeModel(testStep,scp);
      }
    }
    if (scp.isChecked() && scp.getXpath().trim().length() > 0) {
      XmlTreeNode[] treeNodes=null;
      treeNodes=model.selectTreeNodes(context.expand(scp.getXpath()));
      if (treeNodes.length > 0) {
        XmlTreeNode mynode=treeNodes[0];
        if (mynode.getSchemaType().isSimpleType()) {
          mynode.setValue(1,"value!!!!!!!!!!!!!!!!!");
          PropertyMutation pm=new PropertyMutation();
          pm.setPropertyName(scp.getName());
          pm.setPropertyValue(model.getXmlObject().toString());
          stsmap.put(scp.getLabel(),mynode.getNodeText());
          pm.setMutatedParameters(stsmap);
          pm.addMutation(context);
        }
      }
    }
 else {
      PropertyMutation pm=new PropertyMutation();
      pm.setPropertyName(scp.getName());
      pm.setPropertyValue("non xml value");
      stsmap.put(scp.getLabel(),"non xml value");
      pm.setMutatedParameters(stsmap);
      pm.addMutation(context);
    }
  }
}
