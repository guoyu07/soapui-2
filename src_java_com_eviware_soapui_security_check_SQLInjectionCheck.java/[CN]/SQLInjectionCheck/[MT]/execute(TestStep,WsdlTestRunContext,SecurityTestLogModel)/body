{
  if (acceptsTestStep(testStep)) {
    WsdlTestCaseRunner testCaseRunner=new WsdlTestCaseRunner((WsdlTestCase)testStep.getTestCase(),new StringToObjectMap());
    testStep.run(testCaseRunner,testCaseRunner.getRunContext());
    HttpTestRequestInterface<?> request=((HttpTestRequestStepInterface)testStep).getTestRequest();
    String originalResponse=request.getResponse().getContentAsXml();
    for (    String param : getParamsToCheck()) {
      Fuzzer sqlFuzzer=Fuzzer.getSQLFuzzer();
      while (sqlFuzzer.hasNext()) {
        sqlFuzzer.getNextFuzzedTestStep(testStep,param);
        testStep.run(testCaseRunner,testCaseRunner.getRunContext());
        HttpTestRequestInterface<?> lastRequest=((HttpTestRequestStepInterface)testStep).getTestRequest();
        if (StringUtils.getLevenshteinDistance(originalResponse,lastRequest.getResponse().getContentAsString()) > MINIMUM_STRING_DISTANCE) {
          securityTestLog.addEntry(new SecurityTestLogMessageEntry("Possible SQL Injection Vulnerability Detected",new HttpResponseMessageExchange(lastRequest)));
          setStatus(Status.FAILED);
        }
        analyze(testStep,context,securityTestLog);
      }
    }
  }
}
