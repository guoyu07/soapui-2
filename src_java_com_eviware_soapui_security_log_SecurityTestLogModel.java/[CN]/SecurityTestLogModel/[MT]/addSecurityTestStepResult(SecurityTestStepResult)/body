{
  stepCount++;
  int size=items.size();
  SoftReference<SecurityTestStepResult> stepResultRef=new SoftReference<SecurityTestStepResult>(result);
  items.add("Step " + stepCount + " ["+ result.getOriginalTestStepResult().getTestStep().getName()+ "] "+ result.getOriginalTestStepResult().getStatus()+ ": took "+ result.getOriginalTestStepResult().getTimeTaken()+ " ms");
  testStepResults.add(stepResultRef);
  for (  String msg : result.getOriginalTestStepResult().getMessages()) {
    items.add(" -> " + msg);
    testStepResults.add(stepResultRef);
  }
  if (AbstractSecurityCheck.isSecurable(result.getOriginalTestStepResult().getTestStep()) && !result.getSecurityCheckResultList().isEmpty()) {
    for (int i=0; i < result.getSecurityCheckResultList().size(); i++) {
      SecurityCheckResult securityCheckResult=result.getSecurityCheckResultList().get(i);
      items.add("Check " + (i + 1) + " ["+ securityCheckResult.getSecurityCheck().getName()+ "] "+ securityCheckResult.getStatus()+ ": took "+ result.getTimeTaken()+ " ms");
      testStepResults.add(stepResultRef);
      for (      SecurityCheckRequestResult requestResult : securityCheckResult.getSecurityRequestResultList()) {
        for (        String msg : requestResult.getMessages()) {
          items.add(" -> " + msg);
          testStepResults.add(stepResultRef);
        }
      }
    }
  }
  fireIntervalAdded(this,size,items.size() - 1);
  enforceMaxSize();
}
