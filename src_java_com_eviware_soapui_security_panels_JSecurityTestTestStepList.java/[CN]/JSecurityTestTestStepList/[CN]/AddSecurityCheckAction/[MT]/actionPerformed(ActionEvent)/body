{
  TestStepNode node=(TestStepNode)securityTestTree.getLastSelectedPathComponent();
  if (!node.getAllowsChildren()) {
    return;
  }
  TestStep testStep=node.getTestStep();
  String[] availableChecksNames=SoapUI.getSoapUICore().getSecurityCheckRegistry().getAvailableSecurityChecksNames(testStep);
  if (availableChecksNames == null || availableChecksNames.length == 0) {
    UISupport.showErrorMessage("No security checks available for this test step");
    return;
  }
  String name=UISupport.prompt("Specify type of security check","Add SecurityCheck",availableChecksNames);
  if (name == null || name.trim().length() == 0)   return;
  String type=SoapUI.getSoapUICore().getSecurityCheckRegistry().getSecurityCheckTypeForName(name);
  if (type == null || type.trim().length() == 0)   return;
  if (!securityTest.canAddSecurityCheck(testStep,name)) {
    UISupport.showErrorMessage("Security check already exists");
    return;
  }
  SecurityCheck securityCheck=securityTest.addNewSecurityCheck(testStep,name);
  if (securityCheck == null) {
    UISupport.showErrorMessage("Failed to add security check");
    return;
  }
  XFormDialog dialog=SoapUI.getSoapUICore().getSecurityCheckRegistry().getUIBuilder().buildSecurityCheckConfigurationDialog((SecurityCheck)securityCheck);
  dialog.show();
  if (dialog.getReturnValue() == XFormDialog.CANCEL_OPTION) {
    SecurityCheckNode securityCheckNode=(SecurityCheckNode)node.getLastChild();
    securityTest.removeSecurityCheck(testStep,(SecurityCheck)securityCheck);
    cellRender.remove(securityCheckNode);
  }
}
