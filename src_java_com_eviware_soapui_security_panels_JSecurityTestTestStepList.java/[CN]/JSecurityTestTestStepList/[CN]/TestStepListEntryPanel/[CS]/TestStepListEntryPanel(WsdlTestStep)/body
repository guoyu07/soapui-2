{
  super(new BorderLayout());
  setFocusable(true);
  this.testStep=testStep;
  autoscrollSupport=new AutoscrollSupport(this);
  progressBar=new JProgressBar(){
    protected void processMouseEvent(    MouseEvent e){
      if (e.getID() == MouseEvent.MOUSE_PRESSED || e.getID() == MouseEvent.MOUSE_RELEASED) {
        TestStepListEntryPanel.this.processMouseEvent(translateMouseEvent(e));
      }
    }
    protected void processMouseMotionEvent(    MouseEvent e){
      TestStepListEntryPanel.this.processMouseMotionEvent(translateMouseEvent(e));
    }
    /** 
 * Translates the given mouse event to the enclosing map panel's
 * coordinate space.
 */
    private MouseEvent translateMouseEvent(    MouseEvent e){
      return new MouseEvent(TestStepListEntryPanel.this,e.getID(),e.getWhen(),e.getModifiers(),e.getX() + getX(),e.getY() + getY(),e.getClickCount(),e.isPopupTrigger(),e.getButton());
    }
  }
;
  JPanel progressPanel=UISupport.createProgressBarPanel(progressBar,5,false);
  progressBar.setMinimumSize(new Dimension(0,200));
  progressBar.setBackground(Color.WHITE);
  progressBar.setInheritsPopupMenu(true);
  label=new JLabel(testStep.getLabel(),SwingConstants.LEFT);
  label.setBorder(BorderFactory.createEmptyBorder(5,5,5,5));
  label.setInheritsPopupMenu(true);
  label.setEnabled(!testStep.isDisabled());
  add(progressPanel,BorderLayout.LINE_END);
  add(label,BorderLayout.LINE_START);
  testCasePropertyChangeListener=new TestCasePropertyChangeListener();
  addMouseListener(new MouseAdapter(){
    public void mouseClicked(    MouseEvent e){
      if (e.getClickCount() < 2) {
        if (selectedTestStep != null)         selectedTestStep.setSelected(false);
        selectedTestStep=TestStepListEntryPanel.this;
        requestFocus();
        splitPane.remove(secCheckPanel);
        secCheckPanel=buildSecurityChecksPanel();
        secCheckPanel.revalidate();
        splitPane.setBottomComponent(secCheckPanel);
        splitPane.revalidate();
        if (AbstractSecurityCheck.isSecurable(selectedTestStep.getTestStep())) {
          setSelected(true);
        }
      }
 else {
        UISupport.selectAndShow(TestStepListEntryPanel.this.testStep);
      }
    }
  }
);
  addKeyListener(new TestCaseListPanelKeyHandler());
  setSelected(false);
}
