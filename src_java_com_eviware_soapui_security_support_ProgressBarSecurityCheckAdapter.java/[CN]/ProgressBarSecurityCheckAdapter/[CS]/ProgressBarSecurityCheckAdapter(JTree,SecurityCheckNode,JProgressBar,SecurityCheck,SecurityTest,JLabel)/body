{
  this.tree=tree;
  this.node=node;
  this.progressBar=progressBar;
  this.progressBar.setMaximum(100);
  this.securityCheck=securityCheck;
  this.securityTest=securityTest;
  if (securityCheck.getAssertionsSupport().getAssertionCount() == 0) {
    progressBar.setForeground(new Color(204,153,255));
    progressBar.setString("Missing Assertions");
    progressBar.setValue(100);
  }
  if (this.securityCheck instanceof AbstractSecurityCheckWithProperties) {
    if (((AbstractSecurityCheckWithProperties)this.securityCheck).getParameterHolder() != null && ((AbstractSecurityCheckWithProperties)this.securityCheck).getParameterHolder().getParameterList() != null && ((AbstractSecurityCheckWithProperties)this.securityCheck).getParameterHolder().getParameterList().size() == 0) {
      progressBar.setForeground(new Color(204,153,255));
      progressBar.setString("Missing Parameters");
      progressBar.setValue(100);
    }
    ((AbstractSecurityCheckWithProperties)this.securityCheck).getParameterHolder().addParameterListener(this);
  }
  this.securityTest.addSecurityTestRunListener(this);
  this.cntLabel=cntLabel;
  this.cntLabel.setPreferredSize(new Dimension(50,18));
  this.cntLabel.setHorizontalTextPosition(SwingConstants.CENTER);
  this.cntLabel.setHorizontalAlignment(SwingConstants.CENTER);
  ((AbstractSecurityCheck)securityCheck).addAssertionsListener(this);
}
