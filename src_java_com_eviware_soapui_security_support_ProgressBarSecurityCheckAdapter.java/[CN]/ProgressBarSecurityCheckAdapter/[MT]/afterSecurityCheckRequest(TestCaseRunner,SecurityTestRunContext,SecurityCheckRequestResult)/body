{
  if (securityCheckReqResult.getSecurityCheck().getTestStep().getId().equals(this.securityCheck.getTestStep().getId()) && this.securityCheck.getName().equals(securityCheckReqResult.getSecurityCheck().getName())) {
    if (securityCheck.getAssertionCount() == 0) {
      progressBar.setForeground(MISSING_ASSERTION_COLOR);
      progressBar.setString(STATE_MISSING_ASSERTIONS);
      progressBar.setValue(100);
    }
 else     if (this.securityCheck instanceof AbstractSecurityCheckWithProperties) {
      if (((AbstractSecurityCheckWithProperties)this.securityCheck).getParameterHolder() != null && ((AbstractSecurityCheckWithProperties)this.securityCheck).getParameterHolder().getParameterList() != null && ((AbstractSecurityCheckWithProperties)this.securityCheck).getParameterHolder().getParameterList().size() == 0) {
        progressBar.setForeground(MISSING_ASSERTION_COLOR);
        progressBar.setString(STATE_MISSING_PARAMETERS);
        progressBar.setValue(100);
      }
 else {
        if (securityCheckReqResult.getStatus() == ResultStatus.FAILED) {
          progressBar.setForeground(FAILED_COLOR);
          progressBar.setString(STATE_FAIL);
          alertsCounter++;
        }
 else         if (securityCheckReqResult.getStatus() == ResultStatus.OK) {
          if (!progressBar.getForeground().equals(FAILED_COLOR)) {
            progressBar.setForeground(OK_COLOR);
            progressBar.setString(STATE_RUN);
          }
        }
        if (alertsCounter != 0) {
          cntLabel.setOpaque(true);
          cntLabel.setBackground(FAILED_COLOR);
          cntLabel.setText(prePostFix + alertsCounter + prePostFix);
        }
        if (progressBar.getValue() >= progressBar.getMaximum() * .9)         progressBar.setMaximum(progressBar.getMaximum() + 5);
        progressBar.setValue(progressBar.getValue() + 1);
      }
    }
    ((DefaultTreeModel)tree.getModel()).nodeChanged(node);
  }
}
