{
  if (securityCheckResult.getSecurityScan().getTestStep().getId().equals(this.securityCheck.getTestStep().getId()) && this.securityCheck.getName().equals(securityCheckResult.getSecurityScan().getName())) {
    if (securityCheckResult.getStatus() != ResultStatus.CANCELED) {
      if (securityCheck.getAssertionCount() == 0) {
        progressBar.setForeground(MISSING_ASSERTION_COLOR);
        progressBar.setString(STATE_MISSING_ASSERTIONS);
      }
 else {
        if (this.securityCheck instanceof AbstractSecurityScanWithProperties) {
          AbstractSecurityScanWithProperties scanWithProperties=(AbstractSecurityScanWithProperties)this.securityCheck;
          if (scanWithProperties.getParameterHolder() != null && (scanWithProperties.getParameterHolder().getParameterList() != null && (scanWithProperties.getParameterHolder().getParameterList().size() == 0))) {
            progressBar.setForeground(MISSING_ASSERTION_COLOR);
            progressBar.setString(STATE_MISSING_PARAMETERS);
          }
 else           if (securityCheckResult.getStatus() == ResultStatus.SKIPPED) {
            progressBar.setForeground(defaultBackground);
            progressBar.setString("SKIPPED");
          }
        }
 else {
          if (securityCheckResult.getStatus() == ResultStatus.SKIPPED) {
            progressBar.setForeground(defaultBackground);
            progressBar.setString("SKIPPED");
          }
        }
      }
      progressBar.setValue(progressBar.getMaximum());
      if (progressBar.getString().equals(""))       progressBar.setString(STATE_RUN);
    }
 else {
      progressBar.setString(STATE_CANCEL);
    }
    progressBar.setBackground(defaultBackground);
    ((DefaultTreeModel)tree.getModel()).nodeChanged(node);
  }
}
