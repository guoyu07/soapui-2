{
  if (fileChooser == null) {
    fileChooser=new JFileChooser();
  }
  String root=ProjectSettings.PROJECT_ROOT;
  if (StringUtils.hasContent(root)) {
    fileChooser.setCurrentDirectory(new File(root));
  }
  int returnVal=fileChooser.showOpenDialog(UISupport.getMainFrame());
  if (returnVal == JFileChooser.APPROVE_OPTION) {
    File file=fileChooser.getSelectedFile();
    Boolean retval=UISupport.confirmOrCancel("Cache attachment in request?","Add Attachment");
    if (retval == null) {
      return;
    }
    String filename=file.getAbsolutePath();
    Long size=file.length();
    String contentType=new MimetypesFileTypeMap().getContentType(file);
    Boolean enabled=new Boolean(true);
    Boolean cached=retval;
    boolean added=false;
    int idx=holder.getFilesList().getList().getSelectedIndex();
    if (idx != -1) {
      ListModel listModel=holder.getFilesList().getList().getModel();
      String key=((AttachmentElement)listModel.getElementAt(idx)).getId();
      for (      MaliciousAttachmentElementConfig element : config.getElementList()) {
        if (key.equals(element.getKey())) {
          MaliciousAttachmentConfig att=element.addNewReplaceAttachment();
          att.setFilename(filename);
          att.setSize(size);
          att.setContentType(contentType);
          att.setEnabled(enabled);
          att.setCached(cached);
          holder.addResultToReplaceTable(att);
          added=true;
        }
      }
    }
    if (!added) {
      UISupport.showErrorMessage("No attachments found in test step");
    }
  }
}
