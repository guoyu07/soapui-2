{
  if (dialog == null) {
    dialog=ADialogBuilder.buildDialog(GenerateFile.class);
    ((JTextFieldFormField)dialog.getFormField(GenerateFile.CONTENT_TYPE)).setWidth(30);
  }
  dialog.show();
  if (dialog.getReturnValue() == XFormDialog.OK_OPTION) {
    Long newSize=0L;
    String newSizeString=dialog.getValue(GenerateFile.SIZE);
    String contentType=dialog.getFormField(GenerateFile.CONTENT_TYPE).getValue();
    try {
      newSize=Long.parseLong(newSizeString);
    }
 catch (    NumberFormatException nfe) {
      UISupport.showErrorMessage("Size must be numeric value");
      return;
    }
    try {
      File file=new RandomFile(newSize,"attachment",contentType).next();
      String filename=file.getAbsolutePath();
      Boolean enabled=new Boolean(true);
      Boolean cached=new Boolean(true);
      boolean added=false;
      int idx=holder.getFilesList().getList().getSelectedIndex();
      if (idx != -1) {
        ListModel listModel=holder.getFilesList().getList().getModel();
        String key=((AttachmentElement)listModel.getElementAt(idx)).getId();
        for (        MaliciousAttachmentElementConfig element : config.getElementList()) {
          if (key.equals(element.getKey())) {
            MaliciousAttachmentConfig att=element.addNewGenerateAttachment();
            att.setFilename(filename);
            att.setSize(newSize);
            att.setContentType(contentType);
            att.setEnabled(enabled);
            att.setCached(cached);
            holder.addResultToGenerateTable(att);
            added=true;
          }
        }
        if (!added) {
          UISupport.showErrorMessage("No attachments found in test step");
        }
      }
    }
 catch (    Exception e1) {
      UISupport.showErrorMessage(e1);
    }
  }
}
