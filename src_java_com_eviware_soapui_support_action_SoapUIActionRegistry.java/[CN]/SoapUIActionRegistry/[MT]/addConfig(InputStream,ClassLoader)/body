{
  try {
    SoapuiActionsDocumentConfig configDocument=SoapuiActionsDocumentConfig.Factory.parse(config);
    SoapUIActionsConfig soapuiActions=configDocument.getSoapuiActions();
    for (    SoapUIActionConfig action : soapuiActions.getActionList()) {
      try {
        String id=action.getId();
        Class<?> actionClass=Class.forName(action.getActionClass(),true,classLoader);
        addAction(id,(SoapUIAction)actionClass.newInstance());
      }
 catch (      Exception e) {
        SoapUI.logError(e);
        e.printStackTrace();
      }
    }
    for (    SoapUIActionGroupConfig group : soapuiActions.getActionGroupList()) {
      SoapUIActionGroup actionGroup=null;
      if (actionGroups.containsKey(group.getId())) {
        actionGroup=actionGroups.get(group.getId());
        addMappings(actionGroup,group);
      }
 else {
        if (group.isSetClass1()) {
          Class<SoapUIActionGroup> actionGroupClass=(Class<SoapUIActionGroup>)Class.forName(group.getClass1());
          Constructor<SoapUIActionGroup> constructor=actionGroupClass.getConstructor(new Class[]{String.class,String.class});
          if (constructor != null) {
            actionGroup=constructor.newInstance(new Object[]{group.getId(),group.getName()});
          }
 else {
            actionGroup=actionGroupClass.newInstance();
          }
        }
 else {
          actionGroup=new DefaultSoapUIActionGroup(group.getId(),group.getName());
        }
        addMappings(actionGroup,group);
        actionGroups.put(group.getId(),actionGroup);
      }
    }
  }
 catch (  Exception e) {
    SoapUI.logError(e);
  }
 finally {
    try {
      config.close();
    }
 catch (    IOException e) {
      SoapUI.logError(e);
    }
  }
}
