{
  g.setColor(fComponent.getForeground());
  g.setFont(fComponent.getFont());
  if (fRotation == ROTATE_NONE) {
    int yPos=y + fCharHeight;
    for (int i=0; i < fCharStrings.length; i++) {
      int tweak;
switch (fPosition[i]) {
case POSITION_NORMAL:
        g.drawString(fCharStrings[i],x + ((fWidth - fCharWidths[i]) / 2),yPos);
      break;
case POSITION_TOP_RIGHT:
    tweak=fCharHeight / 3;
  g.drawString(fCharStrings[i],x + (tweak / 2),yPos - tweak);
break;
case POSITION_FAR_TOP_RIGHT:
tweak=fCharHeight - fCharHeight / 3;
g.drawString(fCharStrings[i],x + (tweak / 2),yPos - tweak);
break;
}
yPos+=fCharHeight;
}
}
 else if (fRotation == ROTATE_LEFT) {
g.translate(x + fWidth,y + fHeight);
((Graphics2D)g).rotate(-NINETY_DEGREES);
g.setColor(fComponent.getBackground());
g.fillRect(1,1,fWidth - 2,fHeight - 2);
g.setColor(fComponent.getForeground());
g.drawString(fLabel,kBufferSpace,-fDescent);
g.setColor(fComponent.getBackground());
((Graphics2D)g).rotate(NINETY_DEGREES);
g.translate(-(x + fWidth),-(y + fHeight));
}
 else if (fRotation == ROTATE_RIGHT) {
g.translate(x,y);
((Graphics2D)g).rotate(NINETY_DEGREES);
g.setColor(fComponent.getBackground());
g.fillRect(0,0,fWidth,fHeight);
g.setColor(fComponent.getForeground());
g.drawString(fLabel,kBufferSpace,-fDescent);
g.setColor(fComponent.getBackground());
((Graphics2D)g).rotate(-NINETY_DEGREES);
g.translate(-x,-y);
}
}
