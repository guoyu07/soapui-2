{
  editArea=JXEditTextArea.createXmlEditor(false);
  editArea.setMinimumSize(new Dimension(50,50));
  editArea.setCaretPosition(0);
  editArea.setDiscardEditsOnSet(false);
  editArea.setEnabled(false);
  editArea.setBorder(BorderFactory.createMatteBorder(0,2,0,0,Color.WHITE));
  errorListModel=new DefaultListModel();
  JList list=new JList(errorListModel);
  list.addMouseListener(new ValidationListMouseAdapter(list,editArea));
  errorScrollPane=new JScrollPane(list);
  errorScrollPane.setVisible(false);
  splitter=new JSplitPane(JSplitPane.VERTICAL_SPLIT){
    public void requestFocus(){
      SwingUtilities.invokeLater(new Runnable(){
        public void run(){
          editArea.requestFocusInWindow();
        }
      }
);
    }
    public boolean hasFocus(){
      return editArea.hasFocus();
    }
  }
;
  splitter.setUI(new SoapUISplitPaneUI());
  splitter.setDividerSize(0);
  splitter.setOneTouchExpandable(true);
  lineNumbersPanel=new LineNumbersPanel(editArea);
  lineNumbersPanel.setVisible(SoapUI.getSettings().getBoolean(UISettings.SHOW_XML_LINE_NUMBERS));
  editorPopup=new JPopupMenu();
  buildPopup(editorPopup,editArea);
  editArea.setRightClickPopup(editorPopup);
  editArea.getDocument().addDocumentListener(new DocumentListenerAdapter(){
    public void update(    Document document){
      if (!updating && getDocument() != null) {
        updating=true;
        getDocument().setXml(editArea.getText());
        updating=false;
      }
    }
  }
);
  editArea.getInputHandler().addKeyBinding("A+V",validateXmlAction);
  editArea.getInputHandler().addKeyBinding("A+F",formatXmlAction);
  editArea.getInputHandler().addKeyBinding("C+S",saveXmlTextAreaAction);
  editArea.getInputHandler().addKeyBinding("ALT+L",new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      lineNumbersPanel.setVisible(!lineNumbersPanel.isVisible());
      toggleLineNumbersMenuItem.setSelected(lineNumbersPanel.isVisible());
    }
  }
);
  JPanel p=new JPanel(new BorderLayout());
  p.add(editArea,BorderLayout.CENTER);
  p.add(lineNumbersPanel,BorderLayout.WEST);
  editorScrollPane=new JScrollPane(p);
  splitter.setTopComponent(editorScrollPane);
  splitter.setBottomComponent(errorScrollPane);
  splitter.setDividerLocation(1.0);
  splitter.setBorder(null);
  previewCorner=UISupport.addPreviewCorner(getEditorScrollPane(),true);
}
