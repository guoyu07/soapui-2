{
  if (sourceProperty == null && sourceStep instanceof MutableTestPropertyHolder) {
    MutableTestPropertyHolder step=(MutableTestPropertyHolder)sourceStep;
    sourceProperty=target.getNameForCreation();
    sourceProperty=UISupport.prompt("Specify name of source property to create","Create source property",sourceProperty);
    while (sourceProperty != null && step.getProperty(sourceProperty) != null) {
      sourceProperty=UISupport.prompt("Name is taken, specify unique name of source property to create","Create source property",sourceProperty);
    }
    if (sourceProperty == null) {
      return;
    }
    ((MutableTestPropertyHolder)sourceStep).addProperty(sourceProperty);
  }
  String sourceXPath="";
  String val=sourceStep.getPropertyValue(sourceProperty);
  try {
    if (StringUtils.isNullOrEmpty(val)) {
      String defaultValue=sourceStep.getProperty(sourceProperty).getDefaultValue();
      if (StringUtils.hasContent(defaultValue)) {
        if (UISupport.confirm("Missing property value, use default value instead?","Get Data")) {
          val=defaultValue;
        }
      }
    }
    if (XmlUtils.seemsToBeXml(val)) {
      XmlObject.Factory.parse(val);
      sourceXPath=UISupport.selectXPath("Select XPath","Select source xpath for property transfer",val,null);
    }
  }
 catch (  Throwable e) {
  }
  if (StringUtils.hasContent(sourceXPath)) {
    sourceXPath=PropertyExpansionUtils.shortenXPathForPropertyExpansion(sourceXPath,val);
  }
  TestProperty property=sourceStep.getProperty(sourceProperty);
  PropertyExpansion pe=new PropertyExpansionImpl(property,sourceXPath);
  String valueForCreation=target.getValueForCreation();
  target.insertPropertyExpansion(pe,null);
  if (!StringUtils.hasContent(sourceXPath) && StringUtils.hasContent(valueForCreation) && !property.isReadOnly()) {
    valueForCreation=UISupport.prompt("Init property value to","Get Data",valueForCreation);
    if (valueForCreation != null) {
      property.setValue(valueForCreation);
    }
  }
}
