{
  FocusTraversalPolicy ftp=JXButtonPanel.this.getFocusTraversalPolicy();
  if (ftp instanceof JXButtonPanelFocusTraversalPolicy) {
    JXButtonPanelFocusTraversalPolicy xftp=(JXButtonPanelFocusTraversalPolicy)ftp;
    String actionCommand=e.getActionCommand();
    Component fo=KeyboardFocusManager.getCurrentKeyboardFocusManager().getFocusOwner();
    Component next;
    xftp.setAlternativeFocusMode(true);
    if (FORWARD.equals(actionCommand)) {
      next=xftp.getComponentAfter(JXButtonPanel.this,fo);
    }
 else     if (BACKWARD.equals(actionCommand)) {
      next=xftp.getComponentBefore(JXButtonPanel.this,fo);
    }
 else {
      throw new AssertionError("Unexpected action command: " + actionCommand);
    }
    xftp.setAlternativeFocusMode(false);
    if (fo instanceof AbstractButton) {
      AbstractButton b=(AbstractButton)fo;
      b.getModel().setPressed(false);
    }
    if (next != null) {
      if (fo instanceof AbstractButton && next instanceof AbstractButton) {
        ButtonGroup group=getButtonGroup((AbstractButton)fo);
        AbstractButton nextButton=(AbstractButton)next;
        if (group != getButtonGroup(nextButton)) {
          return;
        }
        if (isGroupSelectionFollowFocus() && group != null && group.getSelection() != null && !nextButton.isSelected()) {
          nextButton.setSelected(true);
        }
        next.requestFocusInWindow();
      }
    }
  }
}
