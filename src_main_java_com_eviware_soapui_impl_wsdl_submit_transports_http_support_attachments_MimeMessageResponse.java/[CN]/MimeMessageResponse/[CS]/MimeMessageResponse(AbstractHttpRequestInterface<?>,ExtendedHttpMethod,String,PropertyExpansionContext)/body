{
  super(httpMethod,httpRequest,context);
  if (getRequestContent() == null || !getRequestContent().equals(requestContent))   this.requestContent=requestContent;
  try {
    postResponseDataSource=new PostResponseDataSource(httpMethod);
    responseContentLength=postResponseDataSource.getDataSize();
    Header h=null;
    if (httpMethod.hasHttpResponse() && httpMethod.getHttpResponse().getEntity() != null) {
      h=httpMethod.getHttpResponse().getEntity().getContentType();
    }
    if (h != null) {
      HeaderElement[] elements=h.getElements();
      String rootPartId=null;
      for (      HeaderElement element : elements) {
        String name=element.getName().toUpperCase();
        if (name.startsWith("MULTIPART/")) {
          NameValuePair parameter=element.getParameterByName("start");
          if (parameter != null)           rootPartId=parameter.getValue();
        }
      }
      mmSupport=new MultipartMessageSupport(postResponseDataSource,rootPartId,(AbstractHttpOperation)httpRequest.getOperation(),false,httpRequest.isPrettyPrint());
      if (httpRequest.getSettings().getBoolean(HttpSettings.INCLUDE_RESPONSE_IN_TIME_TAKEN))       this.timeTaken+=httpMethod.getResponseReadTime();
    }
  }
 catch (  Exception e) {
    SoapUI.logError(e);
  }
}
