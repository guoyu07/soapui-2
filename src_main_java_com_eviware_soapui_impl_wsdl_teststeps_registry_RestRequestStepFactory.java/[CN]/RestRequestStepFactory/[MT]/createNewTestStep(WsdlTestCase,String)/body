{
  Project project=testCase.getTestSuite().getProject();
  List<String> options=new ArrayList<String>();
  TupleList<RestMethod,RestRequest> restMethods=new TupleList<RestMethod,RestRequest>();
  for (int c=0; c < project.getInterfaceCount(); c++) {
    Interface iface=project.getInterfaceAt(c);
    if (iface instanceof RestService) {
      List<RestResource> resources=((RestService)iface).getAllResources();
      for (      RestResource resource : resources) {
        for (        RestMethod method : resource.getRestMethodList()) {
          String methodStr=iface.getName() + " -> " + resource.getPath()+ " -> "+ method.getName();
          restMethods.add(method,null);
          options.add(methodStr);
          for (          RestRequest request : method.getRequestList()) {
            restMethods.add(method,request);
            options.add(methodStr + " -> " + request.getName());
          }
        }
      }
    }
  }
  if (restMethods.size() == 0) {
    UISupport.showErrorMessage("Missing REST Methods in project");
    return null;
  }
  Object op=UISupport.prompt("Select REST method to invoke for request","New RestRequest",options.toArray());
  if (op != null) {
    int ix=options.indexOf(op);
    if (ix != -1) {
      TupleList<RestMethod,RestRequest>.Tuple tuple=restMethods.get(ix);
      return tuple.getValue2() == null ? createNewTestStep(tuple.getValue1(),name) : createConfig(tuple.getValue2(),name);
    }
  }
  return null;
}
