{
  WsdlProject project=new WsdlProject();
  WsdlInterface iface=WsdlInterfaceFactory.importWsdl(project,"http://localhost:8082/test1/TestService.wsdl",true)[0];
  WsdlTestCase testCase=project.addNewTestSuite("TestSuite").addNewTestCase("TestCase");
  WsdlRequest request=iface.getOperationAt(0).getRequestAt(0);
  TestStepConfig config=WsdlMockResponseStepFactory.createConfig(request,false);
  WsdlMockResponseTestStep step=(WsdlMockResponseTestStep)testCase.addTestStep(config);
  WsdlMockResponse mockResponse=step.getMockResponse();
  mockResponse.setResponseContent("<xml>Tjoho!!</xml>");
  step.setPort(8989);
  step.setPath("/tjohoo");
  TestRunner runner=testCase.run(new StringToObjectMap(),true);
  Thread.sleep(1000);
  request.setEndpoint("http://127.0.0.1:8989/tjohoo");
  System.out.println("Submitting first request");
  Submit submit=request.submit(new WsdlSubmitContext(null),false);
  assertEquals(mockResponse.getResponseContent(),submit.getResponse().getContentAsString());
  runner.waitUntilFinished();
  long timeTaken=runner.getResults().get(0).getTimeTaken();
  assertTrue(timeTaken > 0);
  assertEquals(Status.FINISHED,runner.getStatus());
  assertEquals(mockResponse.getMockResult().getMockRequest().getRequestContent().trim(),request.getRequestContent().trim());
  System.out.println("Mock response took " + timeTaken + "ms");
  testCase.cloneStep(step,"TestStep2");
  assertEquals(testCase.getTestStepCount(),2);
  runner=testCase.run(new StringToObjectMap(),true);
  Thread.sleep(1000);
  System.out.println("Submitting first request again");
  submit=request.submit(new WsdlSubmitContext(null),false);
  assertEquals(mockResponse.getResponseContent(),submit.getResponse().getContentAsString());
  assertEquals(Status.RUNNING,runner.getStatus());
  assertEquals(mockResponse.getMockResult().getMockRequest().getRequestContent().trim(),request.getRequestContent().trim());
  Thread.sleep(1000);
  System.out.println("Submitting second request");
  submit=request.submit(new WsdlSubmitContext(null),false);
  assertEquals(mockResponse.getResponseContent(),submit.getResponse().getContentAsString());
  Thread.sleep(1000);
  timeTaken=runner.getResults().get(1).getTimeTaken();
  assertTrue(timeTaken > 0);
  assertEquals(Status.FINISHED,runner.getStatus());
  assertEquals(mockResponse.getMockResult().getMockRequest().getRequestContent().trim(),request.getRequestContent().trim());
  System.out.println("Second Mock response took " + timeTaken + "ms");
}
